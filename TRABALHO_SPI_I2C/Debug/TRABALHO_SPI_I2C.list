
TRABALHO_SPI_I2C.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001c4  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00008dc4  080001d0  080001d0  000011d0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000664  08008f98  08008f98  00009f98  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  080095fc  080095fc  0000b204  2**0
                  CONTENTS, READONLY
  4 .ARM          00000008  080095fc  080095fc  0000a5fc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  08009604  08009604  0000b204  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08009604  08009604  0000a604  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  08009608  08009608  0000a608  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         00000204  20000000  0800960c  0000b000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          000004c4  20000204  08009810  0000b204  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  200006c8  08009810  0000b6c8  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  0000b204  2**0
                  CONTENTS, READONLY
 12 .debug_info   00015454  00000000  00000000  0000b234  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 000034e6  00000000  00000000  00020688  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00001408  00000000  00000000  00023b70  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_macro  00024c0a  00000000  00000000  00024f78  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_line   0001ab0c  00000000  00000000  00049b82  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_str    000d77fc  00000000  00000000  0006468e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .comment      00000043  00000000  00000000  0013be8a  2**0
                  CONTENTS, READONLY
 19 .debug_rnglists 00000f94  00000000  00000000  0013becd  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_frame  000064b4  00000000  00000000  0013ce64  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000076  00000000  00000000  00143318  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001d0 <__do_global_dtors_aux>:
 80001d0:	b510      	push	{r4, lr}
 80001d2:	4c05      	ldr	r4, [pc, #20]	@ (80001e8 <__do_global_dtors_aux+0x18>)
 80001d4:	7823      	ldrb	r3, [r4, #0]
 80001d6:	b933      	cbnz	r3, 80001e6 <__do_global_dtors_aux+0x16>
 80001d8:	4b04      	ldr	r3, [pc, #16]	@ (80001ec <__do_global_dtors_aux+0x1c>)
 80001da:	b113      	cbz	r3, 80001e2 <__do_global_dtors_aux+0x12>
 80001dc:	4804      	ldr	r0, [pc, #16]	@ (80001f0 <__do_global_dtors_aux+0x20>)
 80001de:	f3af 8000 	nop.w
 80001e2:	2301      	movs	r3, #1
 80001e4:	7023      	strb	r3, [r4, #0]
 80001e6:	bd10      	pop	{r4, pc}
 80001e8:	20000204 	.word	0x20000204
 80001ec:	00000000 	.word	0x00000000
 80001f0:	08008f7c 	.word	0x08008f7c

080001f4 <frame_dummy>:
 80001f4:	b508      	push	{r3, lr}
 80001f6:	4b03      	ldr	r3, [pc, #12]	@ (8000204 <frame_dummy+0x10>)
 80001f8:	b11b      	cbz	r3, 8000202 <frame_dummy+0xe>
 80001fa:	4903      	ldr	r1, [pc, #12]	@ (8000208 <frame_dummy+0x14>)
 80001fc:	4803      	ldr	r0, [pc, #12]	@ (800020c <frame_dummy+0x18>)
 80001fe:	f3af 8000 	nop.w
 8000202:	bd08      	pop	{r3, pc}
 8000204:	00000000 	.word	0x00000000
 8000208:	20000208 	.word	0x20000208
 800020c:	08008f7c 	.word	0x08008f7c

08000210 <memchr>:
 8000210:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 8000214:	2a10      	cmp	r2, #16
 8000216:	db2b      	blt.n	8000270 <memchr+0x60>
 8000218:	f010 0f07 	tst.w	r0, #7
 800021c:	d008      	beq.n	8000230 <memchr+0x20>
 800021e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000222:	3a01      	subs	r2, #1
 8000224:	428b      	cmp	r3, r1
 8000226:	d02d      	beq.n	8000284 <memchr+0x74>
 8000228:	f010 0f07 	tst.w	r0, #7
 800022c:	b342      	cbz	r2, 8000280 <memchr+0x70>
 800022e:	d1f6      	bne.n	800021e <memchr+0xe>
 8000230:	b4f0      	push	{r4, r5, r6, r7}
 8000232:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000236:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800023a:	f022 0407 	bic.w	r4, r2, #7
 800023e:	f07f 0700 	mvns.w	r7, #0
 8000242:	2300      	movs	r3, #0
 8000244:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000248:	3c08      	subs	r4, #8
 800024a:	ea85 0501 	eor.w	r5, r5, r1
 800024e:	ea86 0601 	eor.w	r6, r6, r1
 8000252:	fa85 f547 	uadd8	r5, r5, r7
 8000256:	faa3 f587 	sel	r5, r3, r7
 800025a:	fa86 f647 	uadd8	r6, r6, r7
 800025e:	faa5 f687 	sel	r6, r5, r7
 8000262:	b98e      	cbnz	r6, 8000288 <memchr+0x78>
 8000264:	d1ee      	bne.n	8000244 <memchr+0x34>
 8000266:	bcf0      	pop	{r4, r5, r6, r7}
 8000268:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 800026c:	f002 0207 	and.w	r2, r2, #7
 8000270:	b132      	cbz	r2, 8000280 <memchr+0x70>
 8000272:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000276:	3a01      	subs	r2, #1
 8000278:	ea83 0301 	eor.w	r3, r3, r1
 800027c:	b113      	cbz	r3, 8000284 <memchr+0x74>
 800027e:	d1f8      	bne.n	8000272 <memchr+0x62>
 8000280:	2000      	movs	r0, #0
 8000282:	4770      	bx	lr
 8000284:	3801      	subs	r0, #1
 8000286:	4770      	bx	lr
 8000288:	2d00      	cmp	r5, #0
 800028a:	bf06      	itte	eq
 800028c:	4635      	moveq	r5, r6
 800028e:	3803      	subeq	r0, #3
 8000290:	3807      	subne	r0, #7
 8000292:	f015 0f01 	tst.w	r5, #1
 8000296:	d107      	bne.n	80002a8 <memchr+0x98>
 8000298:	3001      	adds	r0, #1
 800029a:	f415 7f80 	tst.w	r5, #256	@ 0x100
 800029e:	bf02      	ittt	eq
 80002a0:	3001      	addeq	r0, #1
 80002a2:	f415 3fc0 	tsteq.w	r5, #98304	@ 0x18000
 80002a6:	3001      	addeq	r0, #1
 80002a8:	bcf0      	pop	{r4, r5, r6, r7}
 80002aa:	3801      	subs	r0, #1
 80002ac:	4770      	bx	lr
 80002ae:	bf00      	nop

080002b0 <strlen>:
 80002b0:	4603      	mov	r3, r0
 80002b2:	f813 2b01 	ldrb.w	r2, [r3], #1
 80002b6:	2a00      	cmp	r2, #0
 80002b8:	d1fb      	bne.n	80002b2 <strlen+0x2>
 80002ba:	1a18      	subs	r0, r3, r0
 80002bc:	3801      	subs	r0, #1
 80002be:	4770      	bx	lr

080002c0 <__aeabi_drsub>:
 80002c0:	f081 4100 	eor.w	r1, r1, #2147483648	@ 0x80000000
 80002c4:	e002      	b.n	80002cc <__adddf3>
 80002c6:	bf00      	nop

080002c8 <__aeabi_dsub>:
 80002c8:	f083 4300 	eor.w	r3, r3, #2147483648	@ 0x80000000

080002cc <__adddf3>:
 80002cc:	b530      	push	{r4, r5, lr}
 80002ce:	ea4f 0441 	mov.w	r4, r1, lsl #1
 80002d2:	ea4f 0543 	mov.w	r5, r3, lsl #1
 80002d6:	ea94 0f05 	teq	r4, r5
 80002da:	bf08      	it	eq
 80002dc:	ea90 0f02 	teqeq	r0, r2
 80002e0:	bf1f      	itttt	ne
 80002e2:	ea54 0c00 	orrsne.w	ip, r4, r0
 80002e6:	ea55 0c02 	orrsne.w	ip, r5, r2
 80002ea:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 80002ee:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80002f2:	f000 80e2 	beq.w	80004ba <__adddf3+0x1ee>
 80002f6:	ea4f 5454 	mov.w	r4, r4, lsr #21
 80002fa:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 80002fe:	bfb8      	it	lt
 8000300:	426d      	neglt	r5, r5
 8000302:	dd0c      	ble.n	800031e <__adddf3+0x52>
 8000304:	442c      	add	r4, r5
 8000306:	ea80 0202 	eor.w	r2, r0, r2
 800030a:	ea81 0303 	eor.w	r3, r1, r3
 800030e:	ea82 0000 	eor.w	r0, r2, r0
 8000312:	ea83 0101 	eor.w	r1, r3, r1
 8000316:	ea80 0202 	eor.w	r2, r0, r2
 800031a:	ea81 0303 	eor.w	r3, r1, r3
 800031e:	2d36      	cmp	r5, #54	@ 0x36
 8000320:	bf88      	it	hi
 8000322:	bd30      	pophi	{r4, r5, pc}
 8000324:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 8000328:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800032c:	f44f 1c80 	mov.w	ip, #1048576	@ 0x100000
 8000330:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 8000334:	d002      	beq.n	800033c <__adddf3+0x70>
 8000336:	4240      	negs	r0, r0
 8000338:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 800033c:	f013 4f00 	tst.w	r3, #2147483648	@ 0x80000000
 8000340:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000344:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000348:	d002      	beq.n	8000350 <__adddf3+0x84>
 800034a:	4252      	negs	r2, r2
 800034c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000350:	ea94 0f05 	teq	r4, r5
 8000354:	f000 80a7 	beq.w	80004a6 <__adddf3+0x1da>
 8000358:	f1a4 0401 	sub.w	r4, r4, #1
 800035c:	f1d5 0e20 	rsbs	lr, r5, #32
 8000360:	db0d      	blt.n	800037e <__adddf3+0xb2>
 8000362:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000366:	fa22 f205 	lsr.w	r2, r2, r5
 800036a:	1880      	adds	r0, r0, r2
 800036c:	f141 0100 	adc.w	r1, r1, #0
 8000370:	fa03 f20e 	lsl.w	r2, r3, lr
 8000374:	1880      	adds	r0, r0, r2
 8000376:	fa43 f305 	asr.w	r3, r3, r5
 800037a:	4159      	adcs	r1, r3
 800037c:	e00e      	b.n	800039c <__adddf3+0xd0>
 800037e:	f1a5 0520 	sub.w	r5, r5, #32
 8000382:	f10e 0e20 	add.w	lr, lr, #32
 8000386:	2a01      	cmp	r2, #1
 8000388:	fa03 fc0e 	lsl.w	ip, r3, lr
 800038c:	bf28      	it	cs
 800038e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000392:	fa43 f305 	asr.w	r3, r3, r5
 8000396:	18c0      	adds	r0, r0, r3
 8000398:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800039c:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 80003a0:	d507      	bpl.n	80003b2 <__adddf3+0xe6>
 80003a2:	f04f 0e00 	mov.w	lr, #0
 80003a6:	f1dc 0c00 	rsbs	ip, ip, #0
 80003aa:	eb7e 0000 	sbcs.w	r0, lr, r0
 80003ae:	eb6e 0101 	sbc.w	r1, lr, r1
 80003b2:	f5b1 1f80 	cmp.w	r1, #1048576	@ 0x100000
 80003b6:	d31b      	bcc.n	80003f0 <__adddf3+0x124>
 80003b8:	f5b1 1f00 	cmp.w	r1, #2097152	@ 0x200000
 80003bc:	d30c      	bcc.n	80003d8 <__adddf3+0x10c>
 80003be:	0849      	lsrs	r1, r1, #1
 80003c0:	ea5f 0030 	movs.w	r0, r0, rrx
 80003c4:	ea4f 0c3c 	mov.w	ip, ip, rrx
 80003c8:	f104 0401 	add.w	r4, r4, #1
 80003cc:	ea4f 5244 	mov.w	r2, r4, lsl #21
 80003d0:	f512 0f80 	cmn.w	r2, #4194304	@ 0x400000
 80003d4:	f080 809a 	bcs.w	800050c <__adddf3+0x240>
 80003d8:	f1bc 4f00 	cmp.w	ip, #2147483648	@ 0x80000000
 80003dc:	bf08      	it	eq
 80003de:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80003e2:	f150 0000 	adcs.w	r0, r0, #0
 80003e6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80003ea:	ea41 0105 	orr.w	r1, r1, r5
 80003ee:	bd30      	pop	{r4, r5, pc}
 80003f0:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 80003f4:	4140      	adcs	r0, r0
 80003f6:	eb41 0101 	adc.w	r1, r1, r1
 80003fa:	3c01      	subs	r4, #1
 80003fc:	bf28      	it	cs
 80003fe:	f5b1 1f80 	cmpcs.w	r1, #1048576	@ 0x100000
 8000402:	d2e9      	bcs.n	80003d8 <__adddf3+0x10c>
 8000404:	f091 0f00 	teq	r1, #0
 8000408:	bf04      	itt	eq
 800040a:	4601      	moveq	r1, r0
 800040c:	2000      	moveq	r0, #0
 800040e:	fab1 f381 	clz	r3, r1
 8000412:	bf08      	it	eq
 8000414:	3320      	addeq	r3, #32
 8000416:	f1a3 030b 	sub.w	r3, r3, #11
 800041a:	f1b3 0220 	subs.w	r2, r3, #32
 800041e:	da0c      	bge.n	800043a <__adddf3+0x16e>
 8000420:	320c      	adds	r2, #12
 8000422:	dd08      	ble.n	8000436 <__adddf3+0x16a>
 8000424:	f102 0c14 	add.w	ip, r2, #20
 8000428:	f1c2 020c 	rsb	r2, r2, #12
 800042c:	fa01 f00c 	lsl.w	r0, r1, ip
 8000430:	fa21 f102 	lsr.w	r1, r1, r2
 8000434:	e00c      	b.n	8000450 <__adddf3+0x184>
 8000436:	f102 0214 	add.w	r2, r2, #20
 800043a:	bfd8      	it	le
 800043c:	f1c2 0c20 	rsble	ip, r2, #32
 8000440:	fa01 f102 	lsl.w	r1, r1, r2
 8000444:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000448:	bfdc      	itt	le
 800044a:	ea41 010c 	orrle.w	r1, r1, ip
 800044e:	4090      	lslle	r0, r2
 8000450:	1ae4      	subs	r4, r4, r3
 8000452:	bfa2      	ittt	ge
 8000454:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000458:	4329      	orrge	r1, r5
 800045a:	bd30      	popge	{r4, r5, pc}
 800045c:	ea6f 0404 	mvn.w	r4, r4
 8000460:	3c1f      	subs	r4, #31
 8000462:	da1c      	bge.n	800049e <__adddf3+0x1d2>
 8000464:	340c      	adds	r4, #12
 8000466:	dc0e      	bgt.n	8000486 <__adddf3+0x1ba>
 8000468:	f104 0414 	add.w	r4, r4, #20
 800046c:	f1c4 0220 	rsb	r2, r4, #32
 8000470:	fa20 f004 	lsr.w	r0, r0, r4
 8000474:	fa01 f302 	lsl.w	r3, r1, r2
 8000478:	ea40 0003 	orr.w	r0, r0, r3
 800047c:	fa21 f304 	lsr.w	r3, r1, r4
 8000480:	ea45 0103 	orr.w	r1, r5, r3
 8000484:	bd30      	pop	{r4, r5, pc}
 8000486:	f1c4 040c 	rsb	r4, r4, #12
 800048a:	f1c4 0220 	rsb	r2, r4, #32
 800048e:	fa20 f002 	lsr.w	r0, r0, r2
 8000492:	fa01 f304 	lsl.w	r3, r1, r4
 8000496:	ea40 0003 	orr.w	r0, r0, r3
 800049a:	4629      	mov	r1, r5
 800049c:	bd30      	pop	{r4, r5, pc}
 800049e:	fa21 f004 	lsr.w	r0, r1, r4
 80004a2:	4629      	mov	r1, r5
 80004a4:	bd30      	pop	{r4, r5, pc}
 80004a6:	f094 0f00 	teq	r4, #0
 80004aa:	f483 1380 	eor.w	r3, r3, #1048576	@ 0x100000
 80004ae:	bf06      	itte	eq
 80004b0:	f481 1180 	eoreq.w	r1, r1, #1048576	@ 0x100000
 80004b4:	3401      	addeq	r4, #1
 80004b6:	3d01      	subne	r5, #1
 80004b8:	e74e      	b.n	8000358 <__adddf3+0x8c>
 80004ba:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80004be:	bf18      	it	ne
 80004c0:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80004c4:	d029      	beq.n	800051a <__adddf3+0x24e>
 80004c6:	ea94 0f05 	teq	r4, r5
 80004ca:	bf08      	it	eq
 80004cc:	ea90 0f02 	teqeq	r0, r2
 80004d0:	d005      	beq.n	80004de <__adddf3+0x212>
 80004d2:	ea54 0c00 	orrs.w	ip, r4, r0
 80004d6:	bf04      	itt	eq
 80004d8:	4619      	moveq	r1, r3
 80004da:	4610      	moveq	r0, r2
 80004dc:	bd30      	pop	{r4, r5, pc}
 80004de:	ea91 0f03 	teq	r1, r3
 80004e2:	bf1e      	ittt	ne
 80004e4:	2100      	movne	r1, #0
 80004e6:	2000      	movne	r0, #0
 80004e8:	bd30      	popne	{r4, r5, pc}
 80004ea:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 80004ee:	d105      	bne.n	80004fc <__adddf3+0x230>
 80004f0:	0040      	lsls	r0, r0, #1
 80004f2:	4149      	adcs	r1, r1
 80004f4:	bf28      	it	cs
 80004f6:	f041 4100 	orrcs.w	r1, r1, #2147483648	@ 0x80000000
 80004fa:	bd30      	pop	{r4, r5, pc}
 80004fc:	f514 0480 	adds.w	r4, r4, #4194304	@ 0x400000
 8000500:	bf3c      	itt	cc
 8000502:	f501 1180 	addcc.w	r1, r1, #1048576	@ 0x100000
 8000506:	bd30      	popcc	{r4, r5, pc}
 8000508:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 800050c:	f045 41fe 	orr.w	r1, r5, #2130706432	@ 0x7f000000
 8000510:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 8000514:	f04f 0000 	mov.w	r0, #0
 8000518:	bd30      	pop	{r4, r5, pc}
 800051a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800051e:	bf1a      	itte	ne
 8000520:	4619      	movne	r1, r3
 8000522:	4610      	movne	r0, r2
 8000524:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 8000528:	bf1c      	itt	ne
 800052a:	460b      	movne	r3, r1
 800052c:	4602      	movne	r2, r0
 800052e:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000532:	bf06      	itte	eq
 8000534:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 8000538:	ea91 0f03 	teqeq	r1, r3
 800053c:	f441 2100 	orrne.w	r1, r1, #524288	@ 0x80000
 8000540:	bd30      	pop	{r4, r5, pc}
 8000542:	bf00      	nop

08000544 <__aeabi_ui2d>:
 8000544:	f090 0f00 	teq	r0, #0
 8000548:	bf04      	itt	eq
 800054a:	2100      	moveq	r1, #0
 800054c:	4770      	bxeq	lr
 800054e:	b530      	push	{r4, r5, lr}
 8000550:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8000554:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 8000558:	f04f 0500 	mov.w	r5, #0
 800055c:	f04f 0100 	mov.w	r1, #0
 8000560:	e750      	b.n	8000404 <__adddf3+0x138>
 8000562:	bf00      	nop

08000564 <__aeabi_i2d>:
 8000564:	f090 0f00 	teq	r0, #0
 8000568:	bf04      	itt	eq
 800056a:	2100      	moveq	r1, #0
 800056c:	4770      	bxeq	lr
 800056e:	b530      	push	{r4, r5, lr}
 8000570:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8000574:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 8000578:	f010 4500 	ands.w	r5, r0, #2147483648	@ 0x80000000
 800057c:	bf48      	it	mi
 800057e:	4240      	negmi	r0, r0
 8000580:	f04f 0100 	mov.w	r1, #0
 8000584:	e73e      	b.n	8000404 <__adddf3+0x138>
 8000586:	bf00      	nop

08000588 <__aeabi_f2d>:
 8000588:	0042      	lsls	r2, r0, #1
 800058a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800058e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000592:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000596:	bf1f      	itttt	ne
 8000598:	f012 437f 	andsne.w	r3, r2, #4278190080	@ 0xff000000
 800059c:	f093 4f7f 	teqne	r3, #4278190080	@ 0xff000000
 80005a0:	f081 5160 	eorne.w	r1, r1, #939524096	@ 0x38000000
 80005a4:	4770      	bxne	lr
 80005a6:	f032 427f 	bics.w	r2, r2, #4278190080	@ 0xff000000
 80005aa:	bf08      	it	eq
 80005ac:	4770      	bxeq	lr
 80005ae:	f093 4f7f 	teq	r3, #4278190080	@ 0xff000000
 80005b2:	bf04      	itt	eq
 80005b4:	f441 2100 	orreq.w	r1, r1, #524288	@ 0x80000
 80005b8:	4770      	bxeq	lr
 80005ba:	b530      	push	{r4, r5, lr}
 80005bc:	f44f 7460 	mov.w	r4, #896	@ 0x380
 80005c0:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 80005c4:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 80005c8:	e71c      	b.n	8000404 <__adddf3+0x138>
 80005ca:	bf00      	nop

080005cc <__aeabi_ul2d>:
 80005cc:	ea50 0201 	orrs.w	r2, r0, r1
 80005d0:	bf08      	it	eq
 80005d2:	4770      	bxeq	lr
 80005d4:	b530      	push	{r4, r5, lr}
 80005d6:	f04f 0500 	mov.w	r5, #0
 80005da:	e00a      	b.n	80005f2 <__aeabi_l2d+0x16>

080005dc <__aeabi_l2d>:
 80005dc:	ea50 0201 	orrs.w	r2, r0, r1
 80005e0:	bf08      	it	eq
 80005e2:	4770      	bxeq	lr
 80005e4:	b530      	push	{r4, r5, lr}
 80005e6:	f011 4500 	ands.w	r5, r1, #2147483648	@ 0x80000000
 80005ea:	d502      	bpl.n	80005f2 <__aeabi_l2d+0x16>
 80005ec:	4240      	negs	r0, r0
 80005ee:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80005f2:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 80005f6:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 80005fa:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 80005fe:	f43f aed8 	beq.w	80003b2 <__adddf3+0xe6>
 8000602:	f04f 0203 	mov.w	r2, #3
 8000606:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 800060a:	bf18      	it	ne
 800060c:	3203      	addne	r2, #3
 800060e:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 8000612:	bf18      	it	ne
 8000614:	3203      	addne	r2, #3
 8000616:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 800061a:	f1c2 0320 	rsb	r3, r2, #32
 800061e:	fa00 fc03 	lsl.w	ip, r0, r3
 8000622:	fa20 f002 	lsr.w	r0, r0, r2
 8000626:	fa01 fe03 	lsl.w	lr, r1, r3
 800062a:	ea40 000e 	orr.w	r0, r0, lr
 800062e:	fa21 f102 	lsr.w	r1, r1, r2
 8000632:	4414      	add	r4, r2
 8000634:	e6bd      	b.n	80003b2 <__adddf3+0xe6>
 8000636:	bf00      	nop

08000638 <__aeabi_dmul>:
 8000638:	b570      	push	{r4, r5, r6, lr}
 800063a:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 800063e:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
 8000642:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 8000646:	bf1d      	ittte	ne
 8000648:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 800064c:	ea94 0f0c 	teqne	r4, ip
 8000650:	ea95 0f0c 	teqne	r5, ip
 8000654:	f000 f8de 	bleq	8000814 <__aeabi_dmul+0x1dc>
 8000658:	442c      	add	r4, r5
 800065a:	ea81 0603 	eor.w	r6, r1, r3
 800065e:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000662:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8000666:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800066a:	bf18      	it	ne
 800066c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000670:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 8000674:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 8000678:	d038      	beq.n	80006ec <__aeabi_dmul+0xb4>
 800067a:	fba0 ce02 	umull	ip, lr, r0, r2
 800067e:	f04f 0500 	mov.w	r5, #0
 8000682:	fbe1 e502 	umlal	lr, r5, r1, r2
 8000686:	f006 4200 	and.w	r2, r6, #2147483648	@ 0x80000000
 800068a:	fbe0 e503 	umlal	lr, r5, r0, r3
 800068e:	f04f 0600 	mov.w	r6, #0
 8000692:	fbe1 5603 	umlal	r5, r6, r1, r3
 8000696:	f09c 0f00 	teq	ip, #0
 800069a:	bf18      	it	ne
 800069c:	f04e 0e01 	orrne.w	lr, lr, #1
 80006a0:	f1a4 04ff 	sub.w	r4, r4, #255	@ 0xff
 80006a4:	f5b6 7f00 	cmp.w	r6, #512	@ 0x200
 80006a8:	f564 7440 	sbc.w	r4, r4, #768	@ 0x300
 80006ac:	d204      	bcs.n	80006b8 <__aeabi_dmul+0x80>
 80006ae:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 80006b2:	416d      	adcs	r5, r5
 80006b4:	eb46 0606 	adc.w	r6, r6, r6
 80006b8:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 80006bc:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 80006c0:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 80006c4:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 80006c8:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 80006cc:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
 80006d0:	bf88      	it	hi
 80006d2:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
 80006d6:	d81e      	bhi.n	8000716 <__aeabi_dmul+0xde>
 80006d8:	f1be 4f00 	cmp.w	lr, #2147483648	@ 0x80000000
 80006dc:	bf08      	it	eq
 80006de:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 80006e2:	f150 0000 	adcs.w	r0, r0, #0
 80006e6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80006ea:	bd70      	pop	{r4, r5, r6, pc}
 80006ec:	f006 4600 	and.w	r6, r6, #2147483648	@ 0x80000000
 80006f0:	ea46 0101 	orr.w	r1, r6, r1
 80006f4:	ea40 0002 	orr.w	r0, r0, r2
 80006f8:	ea81 0103 	eor.w	r1, r1, r3
 80006fc:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 8000700:	bfc2      	ittt	gt
 8000702:	ebd4 050c 	rsbsgt	r5, r4, ip
 8000706:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 800070a:	bd70      	popgt	{r4, r5, r6, pc}
 800070c:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 8000710:	f04f 0e00 	mov.w	lr, #0
 8000714:	3c01      	subs	r4, #1
 8000716:	f300 80ab 	bgt.w	8000870 <__aeabi_dmul+0x238>
 800071a:	f114 0f36 	cmn.w	r4, #54	@ 0x36
 800071e:	bfde      	ittt	le
 8000720:	2000      	movle	r0, #0
 8000722:	f001 4100 	andle.w	r1, r1, #2147483648	@ 0x80000000
 8000726:	bd70      	pople	{r4, r5, r6, pc}
 8000728:	f1c4 0400 	rsb	r4, r4, #0
 800072c:	3c20      	subs	r4, #32
 800072e:	da35      	bge.n	800079c <__aeabi_dmul+0x164>
 8000730:	340c      	adds	r4, #12
 8000732:	dc1b      	bgt.n	800076c <__aeabi_dmul+0x134>
 8000734:	f104 0414 	add.w	r4, r4, #20
 8000738:	f1c4 0520 	rsb	r5, r4, #32
 800073c:	fa00 f305 	lsl.w	r3, r0, r5
 8000740:	fa20 f004 	lsr.w	r0, r0, r4
 8000744:	fa01 f205 	lsl.w	r2, r1, r5
 8000748:	ea40 0002 	orr.w	r0, r0, r2
 800074c:	f001 4200 	and.w	r2, r1, #2147483648	@ 0x80000000
 8000750:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 8000754:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000758:	fa21 f604 	lsr.w	r6, r1, r4
 800075c:	eb42 0106 	adc.w	r1, r2, r6
 8000760:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000764:	bf08      	it	eq
 8000766:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800076a:	bd70      	pop	{r4, r5, r6, pc}
 800076c:	f1c4 040c 	rsb	r4, r4, #12
 8000770:	f1c4 0520 	rsb	r5, r4, #32
 8000774:	fa00 f304 	lsl.w	r3, r0, r4
 8000778:	fa20 f005 	lsr.w	r0, r0, r5
 800077c:	fa01 f204 	lsl.w	r2, r1, r4
 8000780:	ea40 0002 	orr.w	r0, r0, r2
 8000784:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000788:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800078c:	f141 0100 	adc.w	r1, r1, #0
 8000790:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000794:	bf08      	it	eq
 8000796:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800079a:	bd70      	pop	{r4, r5, r6, pc}
 800079c:	f1c4 0520 	rsb	r5, r4, #32
 80007a0:	fa00 f205 	lsl.w	r2, r0, r5
 80007a4:	ea4e 0e02 	orr.w	lr, lr, r2
 80007a8:	fa20 f304 	lsr.w	r3, r0, r4
 80007ac:	fa01 f205 	lsl.w	r2, r1, r5
 80007b0:	ea43 0302 	orr.w	r3, r3, r2
 80007b4:	fa21 f004 	lsr.w	r0, r1, r4
 80007b8:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 80007bc:	fa21 f204 	lsr.w	r2, r1, r4
 80007c0:	ea20 0002 	bic.w	r0, r0, r2
 80007c4:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 80007c8:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80007cc:	bf08      	it	eq
 80007ce:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80007d2:	bd70      	pop	{r4, r5, r6, pc}
 80007d4:	f094 0f00 	teq	r4, #0
 80007d8:	d10f      	bne.n	80007fa <__aeabi_dmul+0x1c2>
 80007da:	f001 4600 	and.w	r6, r1, #2147483648	@ 0x80000000
 80007de:	0040      	lsls	r0, r0, #1
 80007e0:	eb41 0101 	adc.w	r1, r1, r1
 80007e4:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 80007e8:	bf08      	it	eq
 80007ea:	3c01      	subeq	r4, #1
 80007ec:	d0f7      	beq.n	80007de <__aeabi_dmul+0x1a6>
 80007ee:	ea41 0106 	orr.w	r1, r1, r6
 80007f2:	f095 0f00 	teq	r5, #0
 80007f6:	bf18      	it	ne
 80007f8:	4770      	bxne	lr
 80007fa:	f003 4600 	and.w	r6, r3, #2147483648	@ 0x80000000
 80007fe:	0052      	lsls	r2, r2, #1
 8000800:	eb43 0303 	adc.w	r3, r3, r3
 8000804:	f413 1f80 	tst.w	r3, #1048576	@ 0x100000
 8000808:	bf08      	it	eq
 800080a:	3d01      	subeq	r5, #1
 800080c:	d0f7      	beq.n	80007fe <__aeabi_dmul+0x1c6>
 800080e:	ea43 0306 	orr.w	r3, r3, r6
 8000812:	4770      	bx	lr
 8000814:	ea94 0f0c 	teq	r4, ip
 8000818:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 800081c:	bf18      	it	ne
 800081e:	ea95 0f0c 	teqne	r5, ip
 8000822:	d00c      	beq.n	800083e <__aeabi_dmul+0x206>
 8000824:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000828:	bf18      	it	ne
 800082a:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800082e:	d1d1      	bne.n	80007d4 <__aeabi_dmul+0x19c>
 8000830:	ea81 0103 	eor.w	r1, r1, r3
 8000834:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000838:	f04f 0000 	mov.w	r0, #0
 800083c:	bd70      	pop	{r4, r5, r6, pc}
 800083e:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000842:	bf06      	itte	eq
 8000844:	4610      	moveq	r0, r2
 8000846:	4619      	moveq	r1, r3
 8000848:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800084c:	d019      	beq.n	8000882 <__aeabi_dmul+0x24a>
 800084e:	ea94 0f0c 	teq	r4, ip
 8000852:	d102      	bne.n	800085a <__aeabi_dmul+0x222>
 8000854:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8000858:	d113      	bne.n	8000882 <__aeabi_dmul+0x24a>
 800085a:	ea95 0f0c 	teq	r5, ip
 800085e:	d105      	bne.n	800086c <__aeabi_dmul+0x234>
 8000860:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000864:	bf1c      	itt	ne
 8000866:	4610      	movne	r0, r2
 8000868:	4619      	movne	r1, r3
 800086a:	d10a      	bne.n	8000882 <__aeabi_dmul+0x24a>
 800086c:	ea81 0103 	eor.w	r1, r1, r3
 8000870:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000874:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 8000878:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 800087c:	f04f 0000 	mov.w	r0, #0
 8000880:	bd70      	pop	{r4, r5, r6, pc}
 8000882:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 8000886:	f441 0178 	orr.w	r1, r1, #16252928	@ 0xf80000
 800088a:	bd70      	pop	{r4, r5, r6, pc}

0800088c <__aeabi_ddiv>:
 800088c:	b570      	push	{r4, r5, r6, lr}
 800088e:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 8000892:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
 8000896:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800089a:	bf1d      	ittte	ne
 800089c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 80008a0:	ea94 0f0c 	teqne	r4, ip
 80008a4:	ea95 0f0c 	teqne	r5, ip
 80008a8:	f000 f8a7 	bleq	80009fa <__aeabi_ddiv+0x16e>
 80008ac:	eba4 0405 	sub.w	r4, r4, r5
 80008b0:	ea81 0e03 	eor.w	lr, r1, r3
 80008b4:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 80008b8:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80008bc:	f000 8088 	beq.w	80009d0 <__aeabi_ddiv+0x144>
 80008c0:	ea4f 3303 	mov.w	r3, r3, lsl #12
 80008c4:	f04f 5580 	mov.w	r5, #268435456	@ 0x10000000
 80008c8:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 80008cc:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 80008d0:	ea4f 2202 	mov.w	r2, r2, lsl #8
 80008d4:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 80008d8:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 80008dc:	ea4f 2600 	mov.w	r6, r0, lsl #8
 80008e0:	f00e 4100 	and.w	r1, lr, #2147483648	@ 0x80000000
 80008e4:	429d      	cmp	r5, r3
 80008e6:	bf08      	it	eq
 80008e8:	4296      	cmpeq	r6, r2
 80008ea:	f144 04fd 	adc.w	r4, r4, #253	@ 0xfd
 80008ee:	f504 7440 	add.w	r4, r4, #768	@ 0x300
 80008f2:	d202      	bcs.n	80008fa <__aeabi_ddiv+0x6e>
 80008f4:	085b      	lsrs	r3, r3, #1
 80008f6:	ea4f 0232 	mov.w	r2, r2, rrx
 80008fa:	1ab6      	subs	r6, r6, r2
 80008fc:	eb65 0503 	sbc.w	r5, r5, r3
 8000900:	085b      	lsrs	r3, r3, #1
 8000902:	ea4f 0232 	mov.w	r2, r2, rrx
 8000906:	f44f 1080 	mov.w	r0, #1048576	@ 0x100000
 800090a:	f44f 2c00 	mov.w	ip, #524288	@ 0x80000
 800090e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000912:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000916:	bf22      	ittt	cs
 8000918:	1ab6      	subcs	r6, r6, r2
 800091a:	4675      	movcs	r5, lr
 800091c:	ea40 000c 	orrcs.w	r0, r0, ip
 8000920:	085b      	lsrs	r3, r3, #1
 8000922:	ea4f 0232 	mov.w	r2, r2, rrx
 8000926:	ebb6 0e02 	subs.w	lr, r6, r2
 800092a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800092e:	bf22      	ittt	cs
 8000930:	1ab6      	subcs	r6, r6, r2
 8000932:	4675      	movcs	r5, lr
 8000934:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 8000938:	085b      	lsrs	r3, r3, #1
 800093a:	ea4f 0232 	mov.w	r2, r2, rrx
 800093e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000942:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000946:	bf22      	ittt	cs
 8000948:	1ab6      	subcs	r6, r6, r2
 800094a:	4675      	movcs	r5, lr
 800094c:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000950:	085b      	lsrs	r3, r3, #1
 8000952:	ea4f 0232 	mov.w	r2, r2, rrx
 8000956:	ebb6 0e02 	subs.w	lr, r6, r2
 800095a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800095e:	bf22      	ittt	cs
 8000960:	1ab6      	subcs	r6, r6, r2
 8000962:	4675      	movcs	r5, lr
 8000964:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000968:	ea55 0e06 	orrs.w	lr, r5, r6
 800096c:	d018      	beq.n	80009a0 <__aeabi_ddiv+0x114>
 800096e:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000972:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8000976:	ea4f 1606 	mov.w	r6, r6, lsl #4
 800097a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 800097e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000982:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8000986:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 800098a:	d1c0      	bne.n	800090e <__aeabi_ddiv+0x82>
 800098c:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 8000990:	d10b      	bne.n	80009aa <__aeabi_ddiv+0x11e>
 8000992:	ea41 0100 	orr.w	r1, r1, r0
 8000996:	f04f 0000 	mov.w	r0, #0
 800099a:	f04f 4c00 	mov.w	ip, #2147483648	@ 0x80000000
 800099e:	e7b6      	b.n	800090e <__aeabi_ddiv+0x82>
 80009a0:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 80009a4:	bf04      	itt	eq
 80009a6:	4301      	orreq	r1, r0
 80009a8:	2000      	moveq	r0, #0
 80009aa:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
 80009ae:	bf88      	it	hi
 80009b0:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
 80009b4:	f63f aeaf 	bhi.w	8000716 <__aeabi_dmul+0xde>
 80009b8:	ebb5 0c03 	subs.w	ip, r5, r3
 80009bc:	bf04      	itt	eq
 80009be:	ebb6 0c02 	subseq.w	ip, r6, r2
 80009c2:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80009c6:	f150 0000 	adcs.w	r0, r0, #0
 80009ca:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80009ce:	bd70      	pop	{r4, r5, r6, pc}
 80009d0:	f00e 4e00 	and.w	lr, lr, #2147483648	@ 0x80000000
 80009d4:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 80009d8:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 80009dc:	bfc2      	ittt	gt
 80009de:	ebd4 050c 	rsbsgt	r5, r4, ip
 80009e2:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80009e6:	bd70      	popgt	{r4, r5, r6, pc}
 80009e8:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 80009ec:	f04f 0e00 	mov.w	lr, #0
 80009f0:	3c01      	subs	r4, #1
 80009f2:	e690      	b.n	8000716 <__aeabi_dmul+0xde>
 80009f4:	ea45 0e06 	orr.w	lr, r5, r6
 80009f8:	e68d      	b.n	8000716 <__aeabi_dmul+0xde>
 80009fa:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80009fe:	ea94 0f0c 	teq	r4, ip
 8000a02:	bf08      	it	eq
 8000a04:	ea95 0f0c 	teqeq	r5, ip
 8000a08:	f43f af3b 	beq.w	8000882 <__aeabi_dmul+0x24a>
 8000a0c:	ea94 0f0c 	teq	r4, ip
 8000a10:	d10a      	bne.n	8000a28 <__aeabi_ddiv+0x19c>
 8000a12:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000a16:	f47f af34 	bne.w	8000882 <__aeabi_dmul+0x24a>
 8000a1a:	ea95 0f0c 	teq	r5, ip
 8000a1e:	f47f af25 	bne.w	800086c <__aeabi_dmul+0x234>
 8000a22:	4610      	mov	r0, r2
 8000a24:	4619      	mov	r1, r3
 8000a26:	e72c      	b.n	8000882 <__aeabi_dmul+0x24a>
 8000a28:	ea95 0f0c 	teq	r5, ip
 8000a2c:	d106      	bne.n	8000a3c <__aeabi_ddiv+0x1b0>
 8000a2e:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000a32:	f43f aefd 	beq.w	8000830 <__aeabi_dmul+0x1f8>
 8000a36:	4610      	mov	r0, r2
 8000a38:	4619      	mov	r1, r3
 8000a3a:	e722      	b.n	8000882 <__aeabi_dmul+0x24a>
 8000a3c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000a40:	bf18      	it	ne
 8000a42:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000a46:	f47f aec5 	bne.w	80007d4 <__aeabi_dmul+0x19c>
 8000a4a:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8000a4e:	f47f af0d 	bne.w	800086c <__aeabi_dmul+0x234>
 8000a52:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 8000a56:	f47f aeeb 	bne.w	8000830 <__aeabi_dmul+0x1f8>
 8000a5a:	e712      	b.n	8000882 <__aeabi_dmul+0x24a>

08000a5c <__gedf2>:
 8000a5c:	f04f 3cff 	mov.w	ip, #4294967295
 8000a60:	e006      	b.n	8000a70 <__cmpdf2+0x4>
 8000a62:	bf00      	nop

08000a64 <__ledf2>:
 8000a64:	f04f 0c01 	mov.w	ip, #1
 8000a68:	e002      	b.n	8000a70 <__cmpdf2+0x4>
 8000a6a:	bf00      	nop

08000a6c <__cmpdf2>:
 8000a6c:	f04f 0c01 	mov.w	ip, #1
 8000a70:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000a74:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a78:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a7c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a80:	bf18      	it	ne
 8000a82:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 8000a86:	d01b      	beq.n	8000ac0 <__cmpdf2+0x54>
 8000a88:	b001      	add	sp, #4
 8000a8a:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 8000a8e:	bf0c      	ite	eq
 8000a90:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8000a94:	ea91 0f03 	teqne	r1, r3
 8000a98:	bf02      	ittt	eq
 8000a9a:	ea90 0f02 	teqeq	r0, r2
 8000a9e:	2000      	moveq	r0, #0
 8000aa0:	4770      	bxeq	lr
 8000aa2:	f110 0f00 	cmn.w	r0, #0
 8000aa6:	ea91 0f03 	teq	r1, r3
 8000aaa:	bf58      	it	pl
 8000aac:	4299      	cmppl	r1, r3
 8000aae:	bf08      	it	eq
 8000ab0:	4290      	cmpeq	r0, r2
 8000ab2:	bf2c      	ite	cs
 8000ab4:	17d8      	asrcs	r0, r3, #31
 8000ab6:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 8000aba:	f040 0001 	orr.w	r0, r0, #1
 8000abe:	4770      	bx	lr
 8000ac0:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000ac4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000ac8:	d102      	bne.n	8000ad0 <__cmpdf2+0x64>
 8000aca:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000ace:	d107      	bne.n	8000ae0 <__cmpdf2+0x74>
 8000ad0:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000ad4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000ad8:	d1d6      	bne.n	8000a88 <__cmpdf2+0x1c>
 8000ada:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000ade:	d0d3      	beq.n	8000a88 <__cmpdf2+0x1c>
 8000ae0:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000ae4:	4770      	bx	lr
 8000ae6:	bf00      	nop

08000ae8 <__aeabi_cdrcmple>:
 8000ae8:	4684      	mov	ip, r0
 8000aea:	4610      	mov	r0, r2
 8000aec:	4662      	mov	r2, ip
 8000aee:	468c      	mov	ip, r1
 8000af0:	4619      	mov	r1, r3
 8000af2:	4663      	mov	r3, ip
 8000af4:	e000      	b.n	8000af8 <__aeabi_cdcmpeq>
 8000af6:	bf00      	nop

08000af8 <__aeabi_cdcmpeq>:
 8000af8:	b501      	push	{r0, lr}
 8000afa:	f7ff ffb7 	bl	8000a6c <__cmpdf2>
 8000afe:	2800      	cmp	r0, #0
 8000b00:	bf48      	it	mi
 8000b02:	f110 0f00 	cmnmi.w	r0, #0
 8000b06:	bd01      	pop	{r0, pc}

08000b08 <__aeabi_dcmpeq>:
 8000b08:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b0c:	f7ff fff4 	bl	8000af8 <__aeabi_cdcmpeq>
 8000b10:	bf0c      	ite	eq
 8000b12:	2001      	moveq	r0, #1
 8000b14:	2000      	movne	r0, #0
 8000b16:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b1a:	bf00      	nop

08000b1c <__aeabi_dcmplt>:
 8000b1c:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b20:	f7ff ffea 	bl	8000af8 <__aeabi_cdcmpeq>
 8000b24:	bf34      	ite	cc
 8000b26:	2001      	movcc	r0, #1
 8000b28:	2000      	movcs	r0, #0
 8000b2a:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b2e:	bf00      	nop

08000b30 <__aeabi_dcmple>:
 8000b30:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b34:	f7ff ffe0 	bl	8000af8 <__aeabi_cdcmpeq>
 8000b38:	bf94      	ite	ls
 8000b3a:	2001      	movls	r0, #1
 8000b3c:	2000      	movhi	r0, #0
 8000b3e:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b42:	bf00      	nop

08000b44 <__aeabi_dcmpge>:
 8000b44:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b48:	f7ff ffce 	bl	8000ae8 <__aeabi_cdrcmple>
 8000b4c:	bf94      	ite	ls
 8000b4e:	2001      	movls	r0, #1
 8000b50:	2000      	movhi	r0, #0
 8000b52:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b56:	bf00      	nop

08000b58 <__aeabi_dcmpgt>:
 8000b58:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b5c:	f7ff ffc4 	bl	8000ae8 <__aeabi_cdrcmple>
 8000b60:	bf34      	ite	cc
 8000b62:	2001      	movcc	r0, #1
 8000b64:	2000      	movcs	r0, #0
 8000b66:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b6a:	bf00      	nop

08000b6c <__aeabi_dcmpun>:
 8000b6c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000b70:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b74:	d102      	bne.n	8000b7c <__aeabi_dcmpun+0x10>
 8000b76:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000b7a:	d10a      	bne.n	8000b92 <__aeabi_dcmpun+0x26>
 8000b7c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000b80:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b84:	d102      	bne.n	8000b8c <__aeabi_dcmpun+0x20>
 8000b86:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000b8a:	d102      	bne.n	8000b92 <__aeabi_dcmpun+0x26>
 8000b8c:	f04f 0000 	mov.w	r0, #0
 8000b90:	4770      	bx	lr
 8000b92:	f04f 0001 	mov.w	r0, #1
 8000b96:	4770      	bx	lr

08000b98 <__aeabi_d2iz>:
 8000b98:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000b9c:	f512 1200 	adds.w	r2, r2, #2097152	@ 0x200000
 8000ba0:	d215      	bcs.n	8000bce <__aeabi_d2iz+0x36>
 8000ba2:	d511      	bpl.n	8000bc8 <__aeabi_d2iz+0x30>
 8000ba4:	f46f 7378 	mvn.w	r3, #992	@ 0x3e0
 8000ba8:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000bac:	d912      	bls.n	8000bd4 <__aeabi_d2iz+0x3c>
 8000bae:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000bb2:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
 8000bb6:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000bba:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 8000bbe:	fa23 f002 	lsr.w	r0, r3, r2
 8000bc2:	bf18      	it	ne
 8000bc4:	4240      	negne	r0, r0
 8000bc6:	4770      	bx	lr
 8000bc8:	f04f 0000 	mov.w	r0, #0
 8000bcc:	4770      	bx	lr
 8000bce:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000bd2:	d105      	bne.n	8000be0 <__aeabi_d2iz+0x48>
 8000bd4:	f011 4000 	ands.w	r0, r1, #2147483648	@ 0x80000000
 8000bd8:	bf08      	it	eq
 8000bda:	f06f 4000 	mvneq.w	r0, #2147483648	@ 0x80000000
 8000bde:	4770      	bx	lr
 8000be0:	f04f 0000 	mov.w	r0, #0
 8000be4:	4770      	bx	lr
 8000be6:	bf00      	nop

08000be8 <__aeabi_d2f>:
 8000be8:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000bec:	f1b2 43e0 	subs.w	r3, r2, #1879048192	@ 0x70000000
 8000bf0:	bf24      	itt	cs
 8000bf2:	f5b3 1c00 	subscs.w	ip, r3, #2097152	@ 0x200000
 8000bf6:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	@ 0x1fc00000
 8000bfa:	d90d      	bls.n	8000c18 <__aeabi_d2f+0x30>
 8000bfc:	f001 4c00 	and.w	ip, r1, #2147483648	@ 0x80000000
 8000c00:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 8000c04:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 8000c08:	f1b2 4f00 	cmp.w	r2, #2147483648	@ 0x80000000
 8000c0c:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 8000c10:	bf08      	it	eq
 8000c12:	f020 0001 	biceq.w	r0, r0, #1
 8000c16:	4770      	bx	lr
 8000c18:	f011 4f80 	tst.w	r1, #1073741824	@ 0x40000000
 8000c1c:	d121      	bne.n	8000c62 <__aeabi_d2f+0x7a>
 8000c1e:	f113 7238 	adds.w	r2, r3, #48234496	@ 0x2e00000
 8000c22:	bfbc      	itt	lt
 8000c24:	f001 4000 	andlt.w	r0, r1, #2147483648	@ 0x80000000
 8000c28:	4770      	bxlt	lr
 8000c2a:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 8000c2e:	ea4f 5252 	mov.w	r2, r2, lsr #21
 8000c32:	f1c2 0218 	rsb	r2, r2, #24
 8000c36:	f1c2 0c20 	rsb	ip, r2, #32
 8000c3a:	fa10 f30c 	lsls.w	r3, r0, ip
 8000c3e:	fa20 f002 	lsr.w	r0, r0, r2
 8000c42:	bf18      	it	ne
 8000c44:	f040 0001 	orrne.w	r0, r0, #1
 8000c48:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000c4c:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 8000c50:	fa03 fc0c 	lsl.w	ip, r3, ip
 8000c54:	ea40 000c 	orr.w	r0, r0, ip
 8000c58:	fa23 f302 	lsr.w	r3, r3, r2
 8000c5c:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8000c60:	e7cc      	b.n	8000bfc <__aeabi_d2f+0x14>
 8000c62:	ea7f 5362 	mvns.w	r3, r2, asr #21
 8000c66:	d107      	bne.n	8000c78 <__aeabi_d2f+0x90>
 8000c68:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 8000c6c:	bf1e      	ittt	ne
 8000c6e:	f04f 40fe 	movne.w	r0, #2130706432	@ 0x7f000000
 8000c72:	f440 0040 	orrne.w	r0, r0, #12582912	@ 0xc00000
 8000c76:	4770      	bxne	lr
 8000c78:	f001 4000 	and.w	r0, r1, #2147483648	@ 0x80000000
 8000c7c:	f040 40fe 	orr.w	r0, r0, #2130706432	@ 0x7f000000
 8000c80:	f440 0000 	orr.w	r0, r0, #8388608	@ 0x800000
 8000c84:	4770      	bx	lr
 8000c86:	bf00      	nop

08000c88 <__aeabi_uldivmod>:
 8000c88:	b953      	cbnz	r3, 8000ca0 <__aeabi_uldivmod+0x18>
 8000c8a:	b94a      	cbnz	r2, 8000ca0 <__aeabi_uldivmod+0x18>
 8000c8c:	2900      	cmp	r1, #0
 8000c8e:	bf08      	it	eq
 8000c90:	2800      	cmpeq	r0, #0
 8000c92:	bf1c      	itt	ne
 8000c94:	f04f 31ff 	movne.w	r1, #4294967295
 8000c98:	f04f 30ff 	movne.w	r0, #4294967295
 8000c9c:	f000 b988 	b.w	8000fb0 <__aeabi_idiv0>
 8000ca0:	f1ad 0c08 	sub.w	ip, sp, #8
 8000ca4:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8000ca8:	f000 f806 	bl	8000cb8 <__udivmoddi4>
 8000cac:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000cb0:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000cb4:	b004      	add	sp, #16
 8000cb6:	4770      	bx	lr

08000cb8 <__udivmoddi4>:
 8000cb8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000cbc:	9d08      	ldr	r5, [sp, #32]
 8000cbe:	468e      	mov	lr, r1
 8000cc0:	4604      	mov	r4, r0
 8000cc2:	4688      	mov	r8, r1
 8000cc4:	2b00      	cmp	r3, #0
 8000cc6:	d14a      	bne.n	8000d5e <__udivmoddi4+0xa6>
 8000cc8:	428a      	cmp	r2, r1
 8000cca:	4617      	mov	r7, r2
 8000ccc:	d962      	bls.n	8000d94 <__udivmoddi4+0xdc>
 8000cce:	fab2 f682 	clz	r6, r2
 8000cd2:	b14e      	cbz	r6, 8000ce8 <__udivmoddi4+0x30>
 8000cd4:	f1c6 0320 	rsb	r3, r6, #32
 8000cd8:	fa01 f806 	lsl.w	r8, r1, r6
 8000cdc:	fa20 f303 	lsr.w	r3, r0, r3
 8000ce0:	40b7      	lsls	r7, r6
 8000ce2:	ea43 0808 	orr.w	r8, r3, r8
 8000ce6:	40b4      	lsls	r4, r6
 8000ce8:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 8000cec:	fa1f fc87 	uxth.w	ip, r7
 8000cf0:	fbb8 f1fe 	udiv	r1, r8, lr
 8000cf4:	0c23      	lsrs	r3, r4, #16
 8000cf6:	fb0e 8811 	mls	r8, lr, r1, r8
 8000cfa:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
 8000cfe:	fb01 f20c 	mul.w	r2, r1, ip
 8000d02:	429a      	cmp	r2, r3
 8000d04:	d909      	bls.n	8000d1a <__udivmoddi4+0x62>
 8000d06:	18fb      	adds	r3, r7, r3
 8000d08:	f101 30ff 	add.w	r0, r1, #4294967295
 8000d0c:	f080 80ea 	bcs.w	8000ee4 <__udivmoddi4+0x22c>
 8000d10:	429a      	cmp	r2, r3
 8000d12:	f240 80e7 	bls.w	8000ee4 <__udivmoddi4+0x22c>
 8000d16:	3902      	subs	r1, #2
 8000d18:	443b      	add	r3, r7
 8000d1a:	1a9a      	subs	r2, r3, r2
 8000d1c:	b2a3      	uxth	r3, r4
 8000d1e:	fbb2 f0fe 	udiv	r0, r2, lr
 8000d22:	fb0e 2210 	mls	r2, lr, r0, r2
 8000d26:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8000d2a:	fb00 fc0c 	mul.w	ip, r0, ip
 8000d2e:	459c      	cmp	ip, r3
 8000d30:	d909      	bls.n	8000d46 <__udivmoddi4+0x8e>
 8000d32:	18fb      	adds	r3, r7, r3
 8000d34:	f100 32ff 	add.w	r2, r0, #4294967295
 8000d38:	f080 80d6 	bcs.w	8000ee8 <__udivmoddi4+0x230>
 8000d3c:	459c      	cmp	ip, r3
 8000d3e:	f240 80d3 	bls.w	8000ee8 <__udivmoddi4+0x230>
 8000d42:	443b      	add	r3, r7
 8000d44:	3802      	subs	r0, #2
 8000d46:	ea40 4001 	orr.w	r0, r0, r1, lsl #16
 8000d4a:	eba3 030c 	sub.w	r3, r3, ip
 8000d4e:	2100      	movs	r1, #0
 8000d50:	b11d      	cbz	r5, 8000d5a <__udivmoddi4+0xa2>
 8000d52:	40f3      	lsrs	r3, r6
 8000d54:	2200      	movs	r2, #0
 8000d56:	e9c5 3200 	strd	r3, r2, [r5]
 8000d5a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000d5e:	428b      	cmp	r3, r1
 8000d60:	d905      	bls.n	8000d6e <__udivmoddi4+0xb6>
 8000d62:	b10d      	cbz	r5, 8000d68 <__udivmoddi4+0xb0>
 8000d64:	e9c5 0100 	strd	r0, r1, [r5]
 8000d68:	2100      	movs	r1, #0
 8000d6a:	4608      	mov	r0, r1
 8000d6c:	e7f5      	b.n	8000d5a <__udivmoddi4+0xa2>
 8000d6e:	fab3 f183 	clz	r1, r3
 8000d72:	2900      	cmp	r1, #0
 8000d74:	d146      	bne.n	8000e04 <__udivmoddi4+0x14c>
 8000d76:	4573      	cmp	r3, lr
 8000d78:	d302      	bcc.n	8000d80 <__udivmoddi4+0xc8>
 8000d7a:	4282      	cmp	r2, r0
 8000d7c:	f200 8105 	bhi.w	8000f8a <__udivmoddi4+0x2d2>
 8000d80:	1a84      	subs	r4, r0, r2
 8000d82:	eb6e 0203 	sbc.w	r2, lr, r3
 8000d86:	2001      	movs	r0, #1
 8000d88:	4690      	mov	r8, r2
 8000d8a:	2d00      	cmp	r5, #0
 8000d8c:	d0e5      	beq.n	8000d5a <__udivmoddi4+0xa2>
 8000d8e:	e9c5 4800 	strd	r4, r8, [r5]
 8000d92:	e7e2      	b.n	8000d5a <__udivmoddi4+0xa2>
 8000d94:	2a00      	cmp	r2, #0
 8000d96:	f000 8090 	beq.w	8000eba <__udivmoddi4+0x202>
 8000d9a:	fab2 f682 	clz	r6, r2
 8000d9e:	2e00      	cmp	r6, #0
 8000da0:	f040 80a4 	bne.w	8000eec <__udivmoddi4+0x234>
 8000da4:	1a8a      	subs	r2, r1, r2
 8000da6:	0c03      	lsrs	r3, r0, #16
 8000da8:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 8000dac:	b280      	uxth	r0, r0
 8000dae:	b2bc      	uxth	r4, r7
 8000db0:	2101      	movs	r1, #1
 8000db2:	fbb2 fcfe 	udiv	ip, r2, lr
 8000db6:	fb0e 221c 	mls	r2, lr, ip, r2
 8000dba:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8000dbe:	fb04 f20c 	mul.w	r2, r4, ip
 8000dc2:	429a      	cmp	r2, r3
 8000dc4:	d907      	bls.n	8000dd6 <__udivmoddi4+0x11e>
 8000dc6:	18fb      	adds	r3, r7, r3
 8000dc8:	f10c 38ff 	add.w	r8, ip, #4294967295
 8000dcc:	d202      	bcs.n	8000dd4 <__udivmoddi4+0x11c>
 8000dce:	429a      	cmp	r2, r3
 8000dd0:	f200 80e0 	bhi.w	8000f94 <__udivmoddi4+0x2dc>
 8000dd4:	46c4      	mov	ip, r8
 8000dd6:	1a9b      	subs	r3, r3, r2
 8000dd8:	fbb3 f2fe 	udiv	r2, r3, lr
 8000ddc:	fb0e 3312 	mls	r3, lr, r2, r3
 8000de0:	ea40 4303 	orr.w	r3, r0, r3, lsl #16
 8000de4:	fb02 f404 	mul.w	r4, r2, r4
 8000de8:	429c      	cmp	r4, r3
 8000dea:	d907      	bls.n	8000dfc <__udivmoddi4+0x144>
 8000dec:	18fb      	adds	r3, r7, r3
 8000dee:	f102 30ff 	add.w	r0, r2, #4294967295
 8000df2:	d202      	bcs.n	8000dfa <__udivmoddi4+0x142>
 8000df4:	429c      	cmp	r4, r3
 8000df6:	f200 80ca 	bhi.w	8000f8e <__udivmoddi4+0x2d6>
 8000dfa:	4602      	mov	r2, r0
 8000dfc:	1b1b      	subs	r3, r3, r4
 8000dfe:	ea42 400c 	orr.w	r0, r2, ip, lsl #16
 8000e02:	e7a5      	b.n	8000d50 <__udivmoddi4+0x98>
 8000e04:	f1c1 0620 	rsb	r6, r1, #32
 8000e08:	408b      	lsls	r3, r1
 8000e0a:	fa22 f706 	lsr.w	r7, r2, r6
 8000e0e:	431f      	orrs	r7, r3
 8000e10:	fa0e f401 	lsl.w	r4, lr, r1
 8000e14:	fa20 f306 	lsr.w	r3, r0, r6
 8000e18:	fa2e fe06 	lsr.w	lr, lr, r6
 8000e1c:	ea4f 4917 	mov.w	r9, r7, lsr #16
 8000e20:	4323      	orrs	r3, r4
 8000e22:	fa00 f801 	lsl.w	r8, r0, r1
 8000e26:	fa1f fc87 	uxth.w	ip, r7
 8000e2a:	fbbe f0f9 	udiv	r0, lr, r9
 8000e2e:	0c1c      	lsrs	r4, r3, #16
 8000e30:	fb09 ee10 	mls	lr, r9, r0, lr
 8000e34:	ea44 440e 	orr.w	r4, r4, lr, lsl #16
 8000e38:	fb00 fe0c 	mul.w	lr, r0, ip
 8000e3c:	45a6      	cmp	lr, r4
 8000e3e:	fa02 f201 	lsl.w	r2, r2, r1
 8000e42:	d909      	bls.n	8000e58 <__udivmoddi4+0x1a0>
 8000e44:	193c      	adds	r4, r7, r4
 8000e46:	f100 3aff 	add.w	sl, r0, #4294967295
 8000e4a:	f080 809c 	bcs.w	8000f86 <__udivmoddi4+0x2ce>
 8000e4e:	45a6      	cmp	lr, r4
 8000e50:	f240 8099 	bls.w	8000f86 <__udivmoddi4+0x2ce>
 8000e54:	3802      	subs	r0, #2
 8000e56:	443c      	add	r4, r7
 8000e58:	eba4 040e 	sub.w	r4, r4, lr
 8000e5c:	fa1f fe83 	uxth.w	lr, r3
 8000e60:	fbb4 f3f9 	udiv	r3, r4, r9
 8000e64:	fb09 4413 	mls	r4, r9, r3, r4
 8000e68:	ea4e 4404 	orr.w	r4, lr, r4, lsl #16
 8000e6c:	fb03 fc0c 	mul.w	ip, r3, ip
 8000e70:	45a4      	cmp	ip, r4
 8000e72:	d908      	bls.n	8000e86 <__udivmoddi4+0x1ce>
 8000e74:	193c      	adds	r4, r7, r4
 8000e76:	f103 3eff 	add.w	lr, r3, #4294967295
 8000e7a:	f080 8082 	bcs.w	8000f82 <__udivmoddi4+0x2ca>
 8000e7e:	45a4      	cmp	ip, r4
 8000e80:	d97f      	bls.n	8000f82 <__udivmoddi4+0x2ca>
 8000e82:	3b02      	subs	r3, #2
 8000e84:	443c      	add	r4, r7
 8000e86:	ea43 4000 	orr.w	r0, r3, r0, lsl #16
 8000e8a:	eba4 040c 	sub.w	r4, r4, ip
 8000e8e:	fba0 ec02 	umull	lr, ip, r0, r2
 8000e92:	4564      	cmp	r4, ip
 8000e94:	4673      	mov	r3, lr
 8000e96:	46e1      	mov	r9, ip
 8000e98:	d362      	bcc.n	8000f60 <__udivmoddi4+0x2a8>
 8000e9a:	d05f      	beq.n	8000f5c <__udivmoddi4+0x2a4>
 8000e9c:	b15d      	cbz	r5, 8000eb6 <__udivmoddi4+0x1fe>
 8000e9e:	ebb8 0203 	subs.w	r2, r8, r3
 8000ea2:	eb64 0409 	sbc.w	r4, r4, r9
 8000ea6:	fa04 f606 	lsl.w	r6, r4, r6
 8000eaa:	fa22 f301 	lsr.w	r3, r2, r1
 8000eae:	431e      	orrs	r6, r3
 8000eb0:	40cc      	lsrs	r4, r1
 8000eb2:	e9c5 6400 	strd	r6, r4, [r5]
 8000eb6:	2100      	movs	r1, #0
 8000eb8:	e74f      	b.n	8000d5a <__udivmoddi4+0xa2>
 8000eba:	fbb1 fcf2 	udiv	ip, r1, r2
 8000ebe:	0c01      	lsrs	r1, r0, #16
 8000ec0:	ea41 410e 	orr.w	r1, r1, lr, lsl #16
 8000ec4:	b280      	uxth	r0, r0
 8000ec6:	ea40 4201 	orr.w	r2, r0, r1, lsl #16
 8000eca:	463b      	mov	r3, r7
 8000ecc:	4638      	mov	r0, r7
 8000ece:	463c      	mov	r4, r7
 8000ed0:	46b8      	mov	r8, r7
 8000ed2:	46be      	mov	lr, r7
 8000ed4:	2620      	movs	r6, #32
 8000ed6:	fbb1 f1f7 	udiv	r1, r1, r7
 8000eda:	eba2 0208 	sub.w	r2, r2, r8
 8000ede:	ea41 410c 	orr.w	r1, r1, ip, lsl #16
 8000ee2:	e766      	b.n	8000db2 <__udivmoddi4+0xfa>
 8000ee4:	4601      	mov	r1, r0
 8000ee6:	e718      	b.n	8000d1a <__udivmoddi4+0x62>
 8000ee8:	4610      	mov	r0, r2
 8000eea:	e72c      	b.n	8000d46 <__udivmoddi4+0x8e>
 8000eec:	f1c6 0220 	rsb	r2, r6, #32
 8000ef0:	fa2e f302 	lsr.w	r3, lr, r2
 8000ef4:	40b7      	lsls	r7, r6
 8000ef6:	40b1      	lsls	r1, r6
 8000ef8:	fa20 f202 	lsr.w	r2, r0, r2
 8000efc:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 8000f00:	430a      	orrs	r2, r1
 8000f02:	fbb3 f8fe 	udiv	r8, r3, lr
 8000f06:	b2bc      	uxth	r4, r7
 8000f08:	fb0e 3318 	mls	r3, lr, r8, r3
 8000f0c:	0c11      	lsrs	r1, r2, #16
 8000f0e:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 8000f12:	fb08 f904 	mul.w	r9, r8, r4
 8000f16:	40b0      	lsls	r0, r6
 8000f18:	4589      	cmp	r9, r1
 8000f1a:	ea4f 4310 	mov.w	r3, r0, lsr #16
 8000f1e:	b280      	uxth	r0, r0
 8000f20:	d93e      	bls.n	8000fa0 <__udivmoddi4+0x2e8>
 8000f22:	1879      	adds	r1, r7, r1
 8000f24:	f108 3cff 	add.w	ip, r8, #4294967295
 8000f28:	d201      	bcs.n	8000f2e <__udivmoddi4+0x276>
 8000f2a:	4589      	cmp	r9, r1
 8000f2c:	d81f      	bhi.n	8000f6e <__udivmoddi4+0x2b6>
 8000f2e:	eba1 0109 	sub.w	r1, r1, r9
 8000f32:	fbb1 f9fe 	udiv	r9, r1, lr
 8000f36:	fb09 f804 	mul.w	r8, r9, r4
 8000f3a:	fb0e 1119 	mls	r1, lr, r9, r1
 8000f3e:	b292      	uxth	r2, r2
 8000f40:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8000f44:	4542      	cmp	r2, r8
 8000f46:	d229      	bcs.n	8000f9c <__udivmoddi4+0x2e4>
 8000f48:	18ba      	adds	r2, r7, r2
 8000f4a:	f109 31ff 	add.w	r1, r9, #4294967295
 8000f4e:	d2c4      	bcs.n	8000eda <__udivmoddi4+0x222>
 8000f50:	4542      	cmp	r2, r8
 8000f52:	d2c2      	bcs.n	8000eda <__udivmoddi4+0x222>
 8000f54:	f1a9 0102 	sub.w	r1, r9, #2
 8000f58:	443a      	add	r2, r7
 8000f5a:	e7be      	b.n	8000eda <__udivmoddi4+0x222>
 8000f5c:	45f0      	cmp	r8, lr
 8000f5e:	d29d      	bcs.n	8000e9c <__udivmoddi4+0x1e4>
 8000f60:	ebbe 0302 	subs.w	r3, lr, r2
 8000f64:	eb6c 0c07 	sbc.w	ip, ip, r7
 8000f68:	3801      	subs	r0, #1
 8000f6a:	46e1      	mov	r9, ip
 8000f6c:	e796      	b.n	8000e9c <__udivmoddi4+0x1e4>
 8000f6e:	eba7 0909 	sub.w	r9, r7, r9
 8000f72:	4449      	add	r1, r9
 8000f74:	f1a8 0c02 	sub.w	ip, r8, #2
 8000f78:	fbb1 f9fe 	udiv	r9, r1, lr
 8000f7c:	fb09 f804 	mul.w	r8, r9, r4
 8000f80:	e7db      	b.n	8000f3a <__udivmoddi4+0x282>
 8000f82:	4673      	mov	r3, lr
 8000f84:	e77f      	b.n	8000e86 <__udivmoddi4+0x1ce>
 8000f86:	4650      	mov	r0, sl
 8000f88:	e766      	b.n	8000e58 <__udivmoddi4+0x1a0>
 8000f8a:	4608      	mov	r0, r1
 8000f8c:	e6fd      	b.n	8000d8a <__udivmoddi4+0xd2>
 8000f8e:	443b      	add	r3, r7
 8000f90:	3a02      	subs	r2, #2
 8000f92:	e733      	b.n	8000dfc <__udivmoddi4+0x144>
 8000f94:	f1ac 0c02 	sub.w	ip, ip, #2
 8000f98:	443b      	add	r3, r7
 8000f9a:	e71c      	b.n	8000dd6 <__udivmoddi4+0x11e>
 8000f9c:	4649      	mov	r1, r9
 8000f9e:	e79c      	b.n	8000eda <__udivmoddi4+0x222>
 8000fa0:	eba1 0109 	sub.w	r1, r1, r9
 8000fa4:	46c4      	mov	ip, r8
 8000fa6:	fbb1 f9fe 	udiv	r9, r1, lr
 8000faa:	fb09 f804 	mul.w	r8, r9, r4
 8000fae:	e7c4      	b.n	8000f3a <__udivmoddi4+0x282>

08000fb0 <__aeabi_idiv0>:
 8000fb0:	4770      	bx	lr
 8000fb2:	bf00      	nop

08000fb4 <lerBotoes>:
#include "variaveis.h"
#include "main.h"
#include "usart.h"

void lerBotoes(void)
{
 8000fb4:	b580      	push	{r7, lr}
 8000fb6:	af00      	add	r7, sp, #0
	if (HAL_GPIO_ReadPin(BOTAO_START_GPIO_Port, BOTAO_START_Pin) == GPIO_PIN_SET)
 8000fb8:	2104      	movs	r1, #4
 8000fba:	4816      	ldr	r0, [pc, #88]	@ (8001014 <lerBotoes+0x60>)
 8000fbc:	f001 fde6 	bl	8002b8c <HAL_GPIO_ReadPin>
 8000fc0:	4603      	mov	r3, r0
 8000fc2:	2b01      	cmp	r3, #1
 8000fc4:	d10b      	bne.n	8000fde <lerBotoes+0x2a>
	{
	 start = 1;
 8000fc6:	4b14      	ldr	r3, [pc, #80]	@ (8001018 <lerBotoes+0x64>)
 8000fc8:	2201      	movs	r2, #1
 8000fca:	601a      	str	r2, [r3, #0]
	 stop = 0;
 8000fcc:	4b13      	ldr	r3, [pc, #76]	@ (800101c <lerBotoes+0x68>)
 8000fce:	2200      	movs	r2, #0
 8000fd0:	601a      	str	r2, [r3, #0]
	 tela_inicial_mostrada = 0;
 8000fd2:	4b13      	ldr	r3, [pc, #76]	@ (8001020 <lerBotoes+0x6c>)
 8000fd4:	2200      	movs	r2, #0
 8000fd6:	701a      	strb	r2, [r3, #0]
	 HAL_Delay(200); // debounce
 8000fd8:	20c8      	movs	r0, #200	@ 0xc8
 8000fda:	f001 fa7b 	bl	80024d4 <HAL_Delay>
	}
	if (HAL_GPIO_ReadPin(BOTAO_STOP_GPIO_Port, BOTAO_STOP_Pin) == GPIO_PIN_SET)
 8000fde:	2102      	movs	r1, #2
 8000fe0:	480c      	ldr	r0, [pc, #48]	@ (8001014 <lerBotoes+0x60>)
 8000fe2:	f001 fdd3 	bl	8002b8c <HAL_GPIO_ReadPin>
 8000fe6:	4603      	mov	r3, r0
 8000fe8:	2b01      	cmp	r3, #1
 8000fea:	d111      	bne.n	8001010 <lerBotoes+0x5c>
	{
	 stop = 1;
 8000fec:	4b0b      	ldr	r3, [pc, #44]	@ (800101c <lerBotoes+0x68>)
 8000fee:	2201      	movs	r2, #1
 8000ff0:	601a      	str	r2, [r3, #0]
	 start = 0;
 8000ff2:	4b09      	ldr	r3, [pc, #36]	@ (8001018 <lerBotoes+0x64>)
 8000ff4:	2200      	movs	r2, #0
 8000ff6:	601a      	str	r2, [r3, #0]
	 acertosSequencia = 0;
 8000ff8:	4b0a      	ldr	r3, [pc, #40]	@ (8001024 <lerBotoes+0x70>)
 8000ffa:	2200      	movs	r2, #0
 8000ffc:	601a      	str	r2, [r3, #0]
	 aguardandoMovimento = 0;
 8000ffe:	4b0a      	ldr	r3, [pc, #40]	@ (8001028 <lerBotoes+0x74>)
 8001000:	2200      	movs	r2, #0
 8001002:	701a      	strb	r2, [r3, #0]
	 tela_inicial_mostrada = 0;
 8001004:	4b06      	ldr	r3, [pc, #24]	@ (8001020 <lerBotoes+0x6c>)
 8001006:	2200      	movs	r2, #0
 8001008:	701a      	strb	r2, [r3, #0]
	 HAL_Delay(200); // debounce
 800100a:	20c8      	movs	r0, #200	@ 0xc8
 800100c:	f001 fa62 	bl	80024d4 <HAL_Delay>
	}
}
 8001010:	bf00      	nop
 8001012:	bd80      	pop	{r7, pc}
 8001014:	40020400 	.word	0x40020400
 8001018:	20000478 	.word	0x20000478
 800101c:	20000004 	.word	0x20000004
 8001020:	20000488 	.word	0x20000488
 8001024:	20000474 	.word	0x20000474
 8001028:	20000480 	.word	0x20000480

0800102c <enviarAcertosSequencia>:

void enviarAcertosSequencia(void)
{
 800102c:	b580      	push	{r7, lr}
 800102e:	b092      	sub	sp, #72	@ 0x48
 8001030:	af00      	add	r7, sp, #0
	char buffer[64];
	int len = snprintf(buffer, sizeof(buffer), "ACERTOS:%d\r\n", acertosSequencia);
 8001032:	4b0a      	ldr	r3, [pc, #40]	@ (800105c <enviarAcertosSequencia+0x30>)
 8001034:	681b      	ldr	r3, [r3, #0]
 8001036:	1d38      	adds	r0, r7, #4
 8001038:	4a09      	ldr	r2, [pc, #36]	@ (8001060 <enviarAcertosSequencia+0x34>)
 800103a:	2140      	movs	r1, #64	@ 0x40
 800103c:	f005 fe56 	bl	8006cec <sniprintf>
 8001040:	6478      	str	r0, [r7, #68]	@ 0x44
	HAL_UART_Transmit(&huart2, (uint8_t *)buffer, len, HAL_MAX_DELAY);
 8001042:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 8001044:	b29a      	uxth	r2, r3
 8001046:	1d39      	adds	r1, r7, #4
 8001048:	f04f 33ff 	mov.w	r3, #4294967295
 800104c:	4805      	ldr	r0, [pc, #20]	@ (8001064 <enviarAcertosSequencia+0x38>)
 800104e:	f004 f901 	bl	8005254 <HAL_UART_Transmit>
}
 8001052:	bf00      	nop
 8001054:	3748      	adds	r7, #72	@ 0x48
 8001056:	46bd      	mov	sp, r7
 8001058:	bd80      	pop	{r7, pc}
 800105a:	bf00      	nop
 800105c:	20000474 	.word	0x20000474
 8001060:	08008f98 	.word	0x08008f98
 8001064:	20000530 	.word	0x20000530

08001068 <MX_GPIO_Init>:
        * Output
        * EVENT_OUT
        * EXTI
*/
void MX_GPIO_Init(void)
{
 8001068:	b580      	push	{r7, lr}
 800106a:	b08a      	sub	sp, #40	@ 0x28
 800106c:	af00      	add	r7, sp, #0

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800106e:	f107 0314 	add.w	r3, r7, #20
 8001072:	2200      	movs	r2, #0
 8001074:	601a      	str	r2, [r3, #0]
 8001076:	605a      	str	r2, [r3, #4]
 8001078:	609a      	str	r2, [r3, #8]
 800107a:	60da      	str	r2, [r3, #12]
 800107c:	611a      	str	r2, [r3, #16]

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOC_CLK_ENABLE();
 800107e:	2300      	movs	r3, #0
 8001080:	613b      	str	r3, [r7, #16]
 8001082:	4b48      	ldr	r3, [pc, #288]	@ (80011a4 <MX_GPIO_Init+0x13c>)
 8001084:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001086:	4a47      	ldr	r2, [pc, #284]	@ (80011a4 <MX_GPIO_Init+0x13c>)
 8001088:	f043 0304 	orr.w	r3, r3, #4
 800108c:	6313      	str	r3, [r2, #48]	@ 0x30
 800108e:	4b45      	ldr	r3, [pc, #276]	@ (80011a4 <MX_GPIO_Init+0x13c>)
 8001090:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001092:	f003 0304 	and.w	r3, r3, #4
 8001096:	613b      	str	r3, [r7, #16]
 8001098:	693b      	ldr	r3, [r7, #16]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 800109a:	2300      	movs	r3, #0
 800109c:	60fb      	str	r3, [r7, #12]
 800109e:	4b41      	ldr	r3, [pc, #260]	@ (80011a4 <MX_GPIO_Init+0x13c>)
 80010a0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80010a2:	4a40      	ldr	r2, [pc, #256]	@ (80011a4 <MX_GPIO_Init+0x13c>)
 80010a4:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 80010a8:	6313      	str	r3, [r2, #48]	@ 0x30
 80010aa:	4b3e      	ldr	r3, [pc, #248]	@ (80011a4 <MX_GPIO_Init+0x13c>)
 80010ac:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80010ae:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 80010b2:	60fb      	str	r3, [r7, #12]
 80010b4:	68fb      	ldr	r3, [r7, #12]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 80010b6:	2300      	movs	r3, #0
 80010b8:	60bb      	str	r3, [r7, #8]
 80010ba:	4b3a      	ldr	r3, [pc, #232]	@ (80011a4 <MX_GPIO_Init+0x13c>)
 80010bc:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80010be:	4a39      	ldr	r2, [pc, #228]	@ (80011a4 <MX_GPIO_Init+0x13c>)
 80010c0:	f043 0301 	orr.w	r3, r3, #1
 80010c4:	6313      	str	r3, [r2, #48]	@ 0x30
 80010c6:	4b37      	ldr	r3, [pc, #220]	@ (80011a4 <MX_GPIO_Init+0x13c>)
 80010c8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80010ca:	f003 0301 	and.w	r3, r3, #1
 80010ce:	60bb      	str	r3, [r7, #8]
 80010d0:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 80010d2:	2300      	movs	r3, #0
 80010d4:	607b      	str	r3, [r7, #4]
 80010d6:	4b33      	ldr	r3, [pc, #204]	@ (80011a4 <MX_GPIO_Init+0x13c>)
 80010d8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80010da:	4a32      	ldr	r2, [pc, #200]	@ (80011a4 <MX_GPIO_Init+0x13c>)
 80010dc:	f043 0302 	orr.w	r3, r3, #2
 80010e0:	6313      	str	r3, [r2, #48]	@ 0x30
 80010e2:	4b30      	ldr	r3, [pc, #192]	@ (80011a4 <MX_GPIO_Init+0x13c>)
 80010e4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80010e6:	f003 0302 	and.w	r3, r3, #2
 80010ea:	607b      	str	r3, [r7, #4]
 80010ec:	687b      	ldr	r3, [r7, #4]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOA, LD2_Pin|LCD_RST_Pin|LCD_DC_Pin, GPIO_PIN_RESET);
 80010ee:	2200      	movs	r2, #0
 80010f0:	f249 0120 	movw	r1, #36896	@ 0x9020
 80010f4:	482c      	ldr	r0, [pc, #176]	@ (80011a8 <MX_GPIO_Init+0x140>)
 80010f6:	f001 fd61 	bl	8002bbc <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(LCD_CE_GPIO_Port, LCD_CE_Pin, GPIO_PIN_RESET);
 80010fa:	2200      	movs	r2, #0
 80010fc:	f44f 6100 	mov.w	r1, #2048	@ 0x800
 8001100:	482a      	ldr	r0, [pc, #168]	@ (80011ac <MX_GPIO_Init+0x144>)
 8001102:	f001 fd5b 	bl	8002bbc <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(MESTRE_MANDOU_GPIO_Port, MESTRE_MANDOU_Pin, GPIO_PIN_RESET);
 8001106:	2200      	movs	r2, #0
 8001108:	2120      	movs	r1, #32
 800110a:	4829      	ldr	r0, [pc, #164]	@ (80011b0 <MX_GPIO_Init+0x148>)
 800110c:	f001 fd56 	bl	8002bbc <HAL_GPIO_WritePin>

  /*Configure GPIO pin : B1_Pin */
  GPIO_InitStruct.Pin = B1_Pin;
 8001110:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
 8001114:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
 8001116:	f44f 1304 	mov.w	r3, #2162688	@ 0x210000
 800111a:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800111c:	2300      	movs	r3, #0
 800111e:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(B1_GPIO_Port, &GPIO_InitStruct);
 8001120:	f107 0314 	add.w	r3, r7, #20
 8001124:	4619      	mov	r1, r3
 8001126:	4821      	ldr	r0, [pc, #132]	@ (80011ac <MX_GPIO_Init+0x144>)
 8001128:	f001 fb9c 	bl	8002864 <HAL_GPIO_Init>

  /*Configure GPIO pins : LD2_Pin LCD_RST_Pin LCD_DC_Pin */
  GPIO_InitStruct.Pin = LD2_Pin|LCD_RST_Pin|LCD_DC_Pin;
 800112c:	f249 0320 	movw	r3, #36896	@ 0x9020
 8001130:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001132:	2301      	movs	r3, #1
 8001134:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001136:	2300      	movs	r3, #0
 8001138:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800113a:	2300      	movs	r3, #0
 800113c:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800113e:	f107 0314 	add.w	r3, r7, #20
 8001142:	4619      	mov	r1, r3
 8001144:	4818      	ldr	r0, [pc, #96]	@ (80011a8 <MX_GPIO_Init+0x140>)
 8001146:	f001 fb8d 	bl	8002864 <HAL_GPIO_Init>

  /*Configure GPIO pins : BOTAO_STOP_Pin BOTAO_START_Pin */
  GPIO_InitStruct.Pin = BOTAO_STOP_Pin|BOTAO_START_Pin;
 800114a:	2306      	movs	r3, #6
 800114c:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 800114e:	2300      	movs	r3, #0
 8001150:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_PULLDOWN;
 8001152:	2302      	movs	r3, #2
 8001154:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001156:	f107 0314 	add.w	r3, r7, #20
 800115a:	4619      	mov	r1, r3
 800115c:	4814      	ldr	r0, [pc, #80]	@ (80011b0 <MX_GPIO_Init+0x148>)
 800115e:	f001 fb81 	bl	8002864 <HAL_GPIO_Init>

  /*Configure GPIO pin : LCD_CE_Pin */
  GPIO_InitStruct.Pin = LCD_CE_Pin;
 8001162:	f44f 6300 	mov.w	r3, #2048	@ 0x800
 8001166:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001168:	2301      	movs	r3, #1
 800116a:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800116c:	2300      	movs	r3, #0
 800116e:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001170:	2300      	movs	r3, #0
 8001172:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(LCD_CE_GPIO_Port, &GPIO_InitStruct);
 8001174:	f107 0314 	add.w	r3, r7, #20
 8001178:	4619      	mov	r1, r3
 800117a:	480c      	ldr	r0, [pc, #48]	@ (80011ac <MX_GPIO_Init+0x144>)
 800117c:	f001 fb72 	bl	8002864 <HAL_GPIO_Init>

  /*Configure GPIO pin : MESTRE_MANDOU_Pin */
  GPIO_InitStruct.Pin = MESTRE_MANDOU_Pin;
 8001180:	2320      	movs	r3, #32
 8001182:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001184:	2301      	movs	r3, #1
 8001186:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001188:	2300      	movs	r3, #0
 800118a:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800118c:	2300      	movs	r3, #0
 800118e:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(MESTRE_MANDOU_GPIO_Port, &GPIO_InitStruct);
 8001190:	f107 0314 	add.w	r3, r7, #20
 8001194:	4619      	mov	r1, r3
 8001196:	4806      	ldr	r0, [pc, #24]	@ (80011b0 <MX_GPIO_Init+0x148>)
 8001198:	f001 fb64 	bl	8002864 <HAL_GPIO_Init>

}
 800119c:	bf00      	nop
 800119e:	3728      	adds	r7, #40	@ 0x28
 80011a0:	46bd      	mov	sp, r7
 80011a2:	bd80      	pop	{r7, pc}
 80011a4:	40023800 	.word	0x40023800
 80011a8:	40020000 	.word	0x40020000
 80011ac:	40020800 	.word	0x40020800
 80011b0:	40020400 	.word	0x40020400

080011b4 <MX_I2C1_Init>:

I2C_HandleTypeDef hi2c1;

/* I2C1 init function */
void MX_I2C1_Init(void)
{
 80011b4:	b580      	push	{r7, lr}
 80011b6:	af00      	add	r7, sp, #0
  /* USER CODE END I2C1_Init 0 */

  /* USER CODE BEGIN I2C1_Init 1 */

  /* USER CODE END I2C1_Init 1 */
  hi2c1.Instance = I2C1;
 80011b8:	4b12      	ldr	r3, [pc, #72]	@ (8001204 <MX_I2C1_Init+0x50>)
 80011ba:	4a13      	ldr	r2, [pc, #76]	@ (8001208 <MX_I2C1_Init+0x54>)
 80011bc:	601a      	str	r2, [r3, #0]
  hi2c1.Init.ClockSpeed = 100000;
 80011be:	4b11      	ldr	r3, [pc, #68]	@ (8001204 <MX_I2C1_Init+0x50>)
 80011c0:	4a12      	ldr	r2, [pc, #72]	@ (800120c <MX_I2C1_Init+0x58>)
 80011c2:	605a      	str	r2, [r3, #4]
  hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 80011c4:	4b0f      	ldr	r3, [pc, #60]	@ (8001204 <MX_I2C1_Init+0x50>)
 80011c6:	2200      	movs	r2, #0
 80011c8:	609a      	str	r2, [r3, #8]
  hi2c1.Init.OwnAddress1 = 0;
 80011ca:	4b0e      	ldr	r3, [pc, #56]	@ (8001204 <MX_I2C1_Init+0x50>)
 80011cc:	2200      	movs	r2, #0
 80011ce:	60da      	str	r2, [r3, #12]
  hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 80011d0:	4b0c      	ldr	r3, [pc, #48]	@ (8001204 <MX_I2C1_Init+0x50>)
 80011d2:	f44f 4280 	mov.w	r2, #16384	@ 0x4000
 80011d6:	611a      	str	r2, [r3, #16]
  hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 80011d8:	4b0a      	ldr	r3, [pc, #40]	@ (8001204 <MX_I2C1_Init+0x50>)
 80011da:	2200      	movs	r2, #0
 80011dc:	615a      	str	r2, [r3, #20]
  hi2c1.Init.OwnAddress2 = 0;
 80011de:	4b09      	ldr	r3, [pc, #36]	@ (8001204 <MX_I2C1_Init+0x50>)
 80011e0:	2200      	movs	r2, #0
 80011e2:	619a      	str	r2, [r3, #24]
  hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 80011e4:	4b07      	ldr	r3, [pc, #28]	@ (8001204 <MX_I2C1_Init+0x50>)
 80011e6:	2200      	movs	r2, #0
 80011e8:	61da      	str	r2, [r3, #28]
  hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 80011ea:	4b06      	ldr	r3, [pc, #24]	@ (8001204 <MX_I2C1_Init+0x50>)
 80011ec:	2200      	movs	r2, #0
 80011ee:	621a      	str	r2, [r3, #32]
  if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 80011f0:	4804      	ldr	r0, [pc, #16]	@ (8001204 <MX_I2C1_Init+0x50>)
 80011f2:	f001 fcfd 	bl	8002bf0 <HAL_I2C_Init>
 80011f6:	4603      	mov	r3, r0
 80011f8:	2b00      	cmp	r3, #0
 80011fa:	d001      	beq.n	8001200 <MX_I2C1_Init+0x4c>
  {
    Error_Handler();
 80011fc:	f000 fd22 	bl	8001c44 <Error_Handler>
  }
  /* USER CODE BEGIN I2C1_Init 2 */

  /* USER CODE END I2C1_Init 2 */

}
 8001200:	bf00      	nop
 8001202:	bd80      	pop	{r7, pc}
 8001204:	20000220 	.word	0x20000220
 8001208:	40005400 	.word	0x40005400
 800120c:	000186a0 	.word	0x000186a0

08001210 <HAL_I2C_MspInit>:

void HAL_I2C_MspInit(I2C_HandleTypeDef* i2cHandle)
{
 8001210:	b580      	push	{r7, lr}
 8001212:	b08a      	sub	sp, #40	@ 0x28
 8001214:	af00      	add	r7, sp, #0
 8001216:	6078      	str	r0, [r7, #4]

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001218:	f107 0314 	add.w	r3, r7, #20
 800121c:	2200      	movs	r2, #0
 800121e:	601a      	str	r2, [r3, #0]
 8001220:	605a      	str	r2, [r3, #4]
 8001222:	609a      	str	r2, [r3, #8]
 8001224:	60da      	str	r2, [r3, #12]
 8001226:	611a      	str	r2, [r3, #16]
  if(i2cHandle->Instance==I2C1)
 8001228:	687b      	ldr	r3, [r7, #4]
 800122a:	681b      	ldr	r3, [r3, #0]
 800122c:	4a19      	ldr	r2, [pc, #100]	@ (8001294 <HAL_I2C_MspInit+0x84>)
 800122e:	4293      	cmp	r3, r2
 8001230:	d12b      	bne.n	800128a <HAL_I2C_MspInit+0x7a>
  {
  /* USER CODE BEGIN I2C1_MspInit 0 */

  /* USER CODE END I2C1_MspInit 0 */

    __HAL_RCC_GPIOB_CLK_ENABLE();
 8001232:	2300      	movs	r3, #0
 8001234:	613b      	str	r3, [r7, #16]
 8001236:	4b18      	ldr	r3, [pc, #96]	@ (8001298 <HAL_I2C_MspInit+0x88>)
 8001238:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800123a:	4a17      	ldr	r2, [pc, #92]	@ (8001298 <HAL_I2C_MspInit+0x88>)
 800123c:	f043 0302 	orr.w	r3, r3, #2
 8001240:	6313      	str	r3, [r2, #48]	@ 0x30
 8001242:	4b15      	ldr	r3, [pc, #84]	@ (8001298 <HAL_I2C_MspInit+0x88>)
 8001244:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001246:	f003 0302 	and.w	r3, r3, #2
 800124a:	613b      	str	r3, [r7, #16]
 800124c:	693b      	ldr	r3, [r7, #16]
    /**I2C1 GPIO Configuration
    PB6     ------> I2C1_SCL
    PB7     ------> I2C1_SDA
    */
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 800124e:	23c0      	movs	r3, #192	@ 0xc0
 8001250:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8001252:	2312      	movs	r3, #18
 8001254:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001256:	2300      	movs	r3, #0
 8001258:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800125a:	2303      	movs	r3, #3
 800125c:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C1;
 800125e:	2304      	movs	r3, #4
 8001260:	627b      	str	r3, [r7, #36]	@ 0x24
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001262:	f107 0314 	add.w	r3, r7, #20
 8001266:	4619      	mov	r1, r3
 8001268:	480c      	ldr	r0, [pc, #48]	@ (800129c <HAL_I2C_MspInit+0x8c>)
 800126a:	f001 fafb 	bl	8002864 <HAL_GPIO_Init>

    /* I2C1 clock enable */
    __HAL_RCC_I2C1_CLK_ENABLE();
 800126e:	2300      	movs	r3, #0
 8001270:	60fb      	str	r3, [r7, #12]
 8001272:	4b09      	ldr	r3, [pc, #36]	@ (8001298 <HAL_I2C_MspInit+0x88>)
 8001274:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001276:	4a08      	ldr	r2, [pc, #32]	@ (8001298 <HAL_I2C_MspInit+0x88>)
 8001278:	f443 1300 	orr.w	r3, r3, #2097152	@ 0x200000
 800127c:	6413      	str	r3, [r2, #64]	@ 0x40
 800127e:	4b06      	ldr	r3, [pc, #24]	@ (8001298 <HAL_I2C_MspInit+0x88>)
 8001280:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001282:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 8001286:	60fb      	str	r3, [r7, #12]
 8001288:	68fb      	ldr	r3, [r7, #12]
  /* USER CODE BEGIN I2C1_MspInit 1 */

  /* USER CODE END I2C1_MspInit 1 */
  }
}
 800128a:	bf00      	nop
 800128c:	3728      	adds	r7, #40	@ 0x28
 800128e:	46bd      	mov	sp, r7
 8001290:	bd80      	pop	{r7, pc}
 8001292:	bf00      	nop
 8001294:	40005400 	.word	0x40005400
 8001298:	40023800 	.word	0x40023800
 800129c:	40020400 	.word	0x40020400

080012a0 <LCD5110_update>:
#include "direcao.h"
#include "main.h"

static uint8_t scrbuf[504];

void LCD5110_update(void) {
 80012a0:	b580      	push	{r7, lr}
 80012a2:	b082      	sub	sp, #8
 80012a4:	af00      	add	r7, sp, #0
    LCD5110_SetXY(0, 0);
 80012a6:	2100      	movs	r1, #0
 80012a8:	2000      	movs	r0, #0
 80012aa:	f000 fa30 	bl	800170e <LCD5110_SetXY>
    for (int i = 0; i < 504; i++) {
 80012ae:	2300      	movs	r3, #0
 80012b0:	607b      	str	r3, [r7, #4]
 80012b2:	e009      	b.n	80012c8 <LCD5110_update+0x28>
        LCD5110_SendData(scrbuf[i]);
 80012b4:	4a09      	ldr	r2, [pc, #36]	@ (80012dc <LCD5110_update+0x3c>)
 80012b6:	687b      	ldr	r3, [r7, #4]
 80012b8:	4413      	add	r3, r2
 80012ba:	781b      	ldrb	r3, [r3, #0]
 80012bc:	4618      	mov	r0, r3
 80012be:	f000 f9d7 	bl	8001670 <LCD5110_SendData>
    for (int i = 0; i < 504; i++) {
 80012c2:	687b      	ldr	r3, [r7, #4]
 80012c4:	3301      	adds	r3, #1
 80012c6:	607b      	str	r3, [r7, #4]
 80012c8:	687b      	ldr	r3, [r7, #4]
 80012ca:	f5b3 7ffc 	cmp.w	r3, #504	@ 0x1f8
 80012ce:	dbf1      	blt.n	80012b4 <LCD5110_update+0x14>
    }
}
 80012d0:	bf00      	nop
 80012d2:	bf00      	nop
 80012d4:	3708      	adds	r7, #8
 80012d6:	46bd      	mov	sp, r7
 80012d8:	bd80      	pop	{r7, pc}
 80012da:	bf00      	nop
 80012dc:	20000274 	.word	0x20000274

080012e0 <LCD5110_clrScr>:

void LCD5110_clrScr(void) {
 80012e0:	b580      	push	{r7, lr}
 80012e2:	b082      	sub	sp, #8
 80012e4:	af00      	add	r7, sp, #0
    for (int i = 0; i < 504; i++) {
 80012e6:	2300      	movs	r3, #0
 80012e8:	607b      	str	r3, [r7, #4]
 80012ea:	e007      	b.n	80012fc <LCD5110_clrScr+0x1c>
        scrbuf[i] = 0x00;
 80012ec:	4a08      	ldr	r2, [pc, #32]	@ (8001310 <LCD5110_clrScr+0x30>)
 80012ee:	687b      	ldr	r3, [r7, #4]
 80012f0:	4413      	add	r3, r2
 80012f2:	2200      	movs	r2, #0
 80012f4:	701a      	strb	r2, [r3, #0]
    for (int i = 0; i < 504; i++) {
 80012f6:	687b      	ldr	r3, [r7, #4]
 80012f8:	3301      	adds	r3, #1
 80012fa:	607b      	str	r3, [r7, #4]
 80012fc:	687b      	ldr	r3, [r7, #4]
 80012fe:	f5b3 7ffc 	cmp.w	r3, #504	@ 0x1f8
 8001302:	dbf3      	blt.n	80012ec <LCD5110_clrScr+0xc>
    }
    LCD5110_update();
 8001304:	f7ff ffcc 	bl	80012a0 <LCD5110_update>
}
 8001308:	bf00      	nop
 800130a:	3708      	adds	r7, #8
 800130c:	46bd      	mov	sp, r7
 800130e:	bd80      	pop	{r7, pc}
 8001310:	20000274 	.word	0x20000274

08001314 <LCD5110_setPixel>:
        scrbuf[i] = 0xFF;
    }
    LCD5110_update();
}

void LCD5110_setPixel(uint16_t x, uint16_t y) {
 8001314:	b480      	push	{r7}
 8001316:	b083      	sub	sp, #12
 8001318:	af00      	add	r7, sp, #0
 800131a:	4603      	mov	r3, r0
 800131c:	460a      	mov	r2, r1
 800131e:	80fb      	strh	r3, [r7, #6]
 8001320:	4613      	mov	r3, r2
 8001322:	80bb      	strh	r3, [r7, #4]
    if (x >= 84 || y >= 48) return;
 8001324:	88fb      	ldrh	r3, [r7, #6]
 8001326:	2b53      	cmp	r3, #83	@ 0x53
 8001328:	d821      	bhi.n	800136e <LCD5110_setPixel+0x5a>
 800132a:	88bb      	ldrh	r3, [r7, #4]
 800132c:	2b2f      	cmp	r3, #47	@ 0x2f
 800132e:	d81e      	bhi.n	800136e <LCD5110_setPixel+0x5a>
    scrbuf[(y/8)*84 + x] |= (1 << (y % 8));
 8001330:	88bb      	ldrh	r3, [r7, #4]
 8001332:	08db      	lsrs	r3, r3, #3
 8001334:	b298      	uxth	r0, r3
 8001336:	4602      	mov	r2, r0
 8001338:	2354      	movs	r3, #84	@ 0x54
 800133a:	fb03 f202 	mul.w	r2, r3, r2
 800133e:	88fb      	ldrh	r3, [r7, #6]
 8001340:	4413      	add	r3, r2
 8001342:	4a0e      	ldr	r2, [pc, #56]	@ (800137c <LCD5110_setPixel+0x68>)
 8001344:	5cd3      	ldrb	r3, [r2, r3]
 8001346:	b25a      	sxtb	r2, r3
 8001348:	88bb      	ldrh	r3, [r7, #4]
 800134a:	f003 0307 	and.w	r3, r3, #7
 800134e:	2101      	movs	r1, #1
 8001350:	fa01 f303 	lsl.w	r3, r1, r3
 8001354:	b25b      	sxtb	r3, r3
 8001356:	4313      	orrs	r3, r2
 8001358:	b259      	sxtb	r1, r3
 800135a:	4602      	mov	r2, r0
 800135c:	2354      	movs	r3, #84	@ 0x54
 800135e:	fb03 f202 	mul.w	r2, r3, r2
 8001362:	88fb      	ldrh	r3, [r7, #6]
 8001364:	4413      	add	r3, r2
 8001366:	b2c9      	uxtb	r1, r1
 8001368:	4a04      	ldr	r2, [pc, #16]	@ (800137c <LCD5110_setPixel+0x68>)
 800136a:	54d1      	strb	r1, [r2, r3]
 800136c:	e000      	b.n	8001370 <LCD5110_setPixel+0x5c>
    if (x >= 84 || y >= 48) return;
 800136e:	bf00      	nop
}
 8001370:	370c      	adds	r7, #12
 8001372:	46bd      	mov	sp, r7
 8001374:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001378:	4770      	bx	lr
 800137a:	bf00      	nop
 800137c:	20000274 	.word	0x20000274

08001380 <LCD5110_drawLine>:
        LCD5110_clrPixel(x, y+i);
    }
    LCD5110_update();
}

void LCD5110_drawLine(int x1, int y1, int x2, int y2) {
 8001380:	b580      	push	{r7, lr}
 8001382:	b08a      	sub	sp, #40	@ 0x28
 8001384:	af00      	add	r7, sp, #0
 8001386:	60f8      	str	r0, [r7, #12]
 8001388:	60b9      	str	r1, [r7, #8]
 800138a:	607a      	str	r2, [r7, #4]
 800138c:	603b      	str	r3, [r7, #0]
    int dx = abs(x2 - x1);
 800138e:	687a      	ldr	r2, [r7, #4]
 8001390:	68fb      	ldr	r3, [r7, #12]
 8001392:	1ad3      	subs	r3, r2, r3
 8001394:	2b00      	cmp	r3, #0
 8001396:	bfb8      	it	lt
 8001398:	425b      	neglt	r3, r3
 800139a:	623b      	str	r3, [r7, #32]
    int dy = abs(y2 - y1);
 800139c:	683a      	ldr	r2, [r7, #0]
 800139e:	68bb      	ldr	r3, [r7, #8]
 80013a0:	1ad3      	subs	r3, r2, r3
 80013a2:	2b00      	cmp	r3, #0
 80013a4:	bfb8      	it	lt
 80013a6:	425b      	neglt	r3, r3
 80013a8:	61fb      	str	r3, [r7, #28]
    int sx = (x1 < x2) ? 1 : -1;
 80013aa:	68fa      	ldr	r2, [r7, #12]
 80013ac:	687b      	ldr	r3, [r7, #4]
 80013ae:	429a      	cmp	r2, r3
 80013b0:	da01      	bge.n	80013b6 <LCD5110_drawLine+0x36>
 80013b2:	2301      	movs	r3, #1
 80013b4:	e001      	b.n	80013ba <LCD5110_drawLine+0x3a>
 80013b6:	f04f 33ff 	mov.w	r3, #4294967295
 80013ba:	61bb      	str	r3, [r7, #24]
    int sy = (y1 < y2) ? 1 : -1;
 80013bc:	68ba      	ldr	r2, [r7, #8]
 80013be:	683b      	ldr	r3, [r7, #0]
 80013c0:	429a      	cmp	r2, r3
 80013c2:	da01      	bge.n	80013c8 <LCD5110_drawLine+0x48>
 80013c4:	2301      	movs	r3, #1
 80013c6:	e001      	b.n	80013cc <LCD5110_drawLine+0x4c>
 80013c8:	f04f 33ff 	mov.w	r3, #4294967295
 80013cc:	617b      	str	r3, [r7, #20]
    int err = dx - dy;
 80013ce:	6a3a      	ldr	r2, [r7, #32]
 80013d0:	69fb      	ldr	r3, [r7, #28]
 80013d2:	1ad3      	subs	r3, r2, r3
 80013d4:	627b      	str	r3, [r7, #36]	@ 0x24

    while (1) {
        LCD5110_setPixel(x1, y1);
 80013d6:	68fb      	ldr	r3, [r7, #12]
 80013d8:	b29b      	uxth	r3, r3
 80013da:	68ba      	ldr	r2, [r7, #8]
 80013dc:	b292      	uxth	r2, r2
 80013de:	4611      	mov	r1, r2
 80013e0:	4618      	mov	r0, r3
 80013e2:	f7ff ff97 	bl	8001314 <LCD5110_setPixel>
        if (x1 == x2 && y1 == y2) break;
 80013e6:	68fa      	ldr	r2, [r7, #12]
 80013e8:	687b      	ldr	r3, [r7, #4]
 80013ea:	429a      	cmp	r2, r3
 80013ec:	d103      	bne.n	80013f6 <LCD5110_drawLine+0x76>
 80013ee:	68ba      	ldr	r2, [r7, #8]
 80013f0:	683b      	ldr	r3, [r7, #0]
 80013f2:	429a      	cmp	r2, r3
 80013f4:	d01c      	beq.n	8001430 <LCD5110_drawLine+0xb0>
        int e2 = 2 * err;
 80013f6:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80013f8:	005b      	lsls	r3, r3, #1
 80013fa:	613b      	str	r3, [r7, #16]
        if (e2 > -dy) { err -= dy; x1 += sx; }
 80013fc:	69fb      	ldr	r3, [r7, #28]
 80013fe:	425b      	negs	r3, r3
 8001400:	693a      	ldr	r2, [r7, #16]
 8001402:	429a      	cmp	r2, r3
 8001404:	dd07      	ble.n	8001416 <LCD5110_drawLine+0x96>
 8001406:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8001408:	69fb      	ldr	r3, [r7, #28]
 800140a:	1ad3      	subs	r3, r2, r3
 800140c:	627b      	str	r3, [r7, #36]	@ 0x24
 800140e:	68fa      	ldr	r2, [r7, #12]
 8001410:	69bb      	ldr	r3, [r7, #24]
 8001412:	4413      	add	r3, r2
 8001414:	60fb      	str	r3, [r7, #12]
        if (e2 < dx)  { err += dx; y1 += sy; }
 8001416:	693a      	ldr	r2, [r7, #16]
 8001418:	6a3b      	ldr	r3, [r7, #32]
 800141a:	429a      	cmp	r2, r3
 800141c:	dadb      	bge.n	80013d6 <LCD5110_drawLine+0x56>
 800141e:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8001420:	6a3b      	ldr	r3, [r7, #32]
 8001422:	4413      	add	r3, r2
 8001424:	627b      	str	r3, [r7, #36]	@ 0x24
 8001426:	68ba      	ldr	r2, [r7, #8]
 8001428:	697b      	ldr	r3, [r7, #20]
 800142a:	4413      	add	r3, r2
 800142c:	60bb      	str	r3, [r7, #8]
    while (1) {
 800142e:	e7d2      	b.n	80013d6 <LCD5110_drawLine+0x56>
        if (x1 == x2 && y1 == y2) break;
 8001430:	bf00      	nop
    }
    LCD5110_update();
 8001432:	f7ff ff35 	bl	80012a0 <LCD5110_update>
}
 8001436:	bf00      	nop
 8001438:	3728      	adds	r7, #40	@ 0x28
 800143a:	46bd      	mov	sp, r7
 800143c:	bd80      	pop	{r7, pc}
	...

08001440 <desenharSeta>:
        LCD5110_setPixel(x0 - y, y0 - x);
    }
    LCD5110_update();
}

void desenharSeta(Direcao dir) {
 8001440:	b580      	push	{r7, lr}
 8001442:	b082      	sub	sp, #8
 8001444:	af00      	add	r7, sp, #0
 8001446:	4603      	mov	r3, r0
 8001448:	71fb      	strb	r3, [r7, #7]
	LCD5110_clrScr();
 800144a:	f7ff ff49 	bl	80012e0 <LCD5110_clrScr>

    switch (dir) {
 800144e:	79fb      	ldrb	r3, [r7, #7]
 8001450:	2b03      	cmp	r3, #3
 8001452:	d857      	bhi.n	8001504 <desenharSeta+0xc4>
 8001454:	a201      	add	r2, pc, #4	@ (adr r2, 800145c <desenharSeta+0x1c>)
 8001456:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800145a:	bf00      	nop
 800145c:	0800146d 	.word	0x0800146d
 8001460:	08001493 	.word	0x08001493
 8001464:	080014b9 	.word	0x080014b9
 8001468:	080014df 	.word	0x080014df
        case DIR_CIMA:
        	LCD5110_drawLine(42, 30, 42, 10);
 800146c:	230a      	movs	r3, #10
 800146e:	222a      	movs	r2, #42	@ 0x2a
 8001470:	211e      	movs	r1, #30
 8001472:	202a      	movs	r0, #42	@ 0x2a
 8001474:	f7ff ff84 	bl	8001380 <LCD5110_drawLine>
			LCD5110_drawLine(42, 10, 36, 16);
 8001478:	2310      	movs	r3, #16
 800147a:	2224      	movs	r2, #36	@ 0x24
 800147c:	210a      	movs	r1, #10
 800147e:	202a      	movs	r0, #42	@ 0x2a
 8001480:	f7ff ff7e 	bl	8001380 <LCD5110_drawLine>
			LCD5110_drawLine(42, 10, 48, 16);
 8001484:	2310      	movs	r3, #16
 8001486:	2230      	movs	r2, #48	@ 0x30
 8001488:	210a      	movs	r1, #10
 800148a:	202a      	movs	r0, #42	@ 0x2a
 800148c:	f7ff ff78 	bl	8001380 <LCD5110_drawLine>
			break;
 8001490:	e039      	b.n	8001506 <desenharSeta+0xc6>
        case DIR_BAIXO:
			LCD5110_drawLine(42, 10, 42, 30);
 8001492:	231e      	movs	r3, #30
 8001494:	222a      	movs	r2, #42	@ 0x2a
 8001496:	210a      	movs	r1, #10
 8001498:	202a      	movs	r0, #42	@ 0x2a
 800149a:	f7ff ff71 	bl	8001380 <LCD5110_drawLine>
			LCD5110_drawLine(42, 30, 36, 24);
 800149e:	2318      	movs	r3, #24
 80014a0:	2224      	movs	r2, #36	@ 0x24
 80014a2:	211e      	movs	r1, #30
 80014a4:	202a      	movs	r0, #42	@ 0x2a
 80014a6:	f7ff ff6b 	bl	8001380 <LCD5110_drawLine>
			LCD5110_drawLine(42, 30, 48, 24);
 80014aa:	2318      	movs	r3, #24
 80014ac:	2230      	movs	r2, #48	@ 0x30
 80014ae:	211e      	movs	r1, #30
 80014b0:	202a      	movs	r0, #42	@ 0x2a
 80014b2:	f7ff ff65 	bl	8001380 <LCD5110_drawLine>
			break;
 80014b6:	e026      	b.n	8001506 <desenharSeta+0xc6>
        case DIR_ESQUERDA:
			LCD5110_drawLine(50, 24, 30, 24);
 80014b8:	2318      	movs	r3, #24
 80014ba:	221e      	movs	r2, #30
 80014bc:	2118      	movs	r1, #24
 80014be:	2032      	movs	r0, #50	@ 0x32
 80014c0:	f7ff ff5e 	bl	8001380 <LCD5110_drawLine>
			LCD5110_drawLine(30, 24, 36, 18);
 80014c4:	2312      	movs	r3, #18
 80014c6:	2224      	movs	r2, #36	@ 0x24
 80014c8:	2118      	movs	r1, #24
 80014ca:	201e      	movs	r0, #30
 80014cc:	f7ff ff58 	bl	8001380 <LCD5110_drawLine>
			LCD5110_drawLine(30, 24, 36, 30);
 80014d0:	231e      	movs	r3, #30
 80014d2:	2224      	movs	r2, #36	@ 0x24
 80014d4:	2118      	movs	r1, #24
 80014d6:	201e      	movs	r0, #30
 80014d8:	f7ff ff52 	bl	8001380 <LCD5110_drawLine>
			break;
 80014dc:	e013      	b.n	8001506 <desenharSeta+0xc6>
        case DIR_DIREITA:
			LCD5110_drawLine(30, 24, 50, 24);
 80014de:	2318      	movs	r3, #24
 80014e0:	2232      	movs	r2, #50	@ 0x32
 80014e2:	2118      	movs	r1, #24
 80014e4:	201e      	movs	r0, #30
 80014e6:	f7ff ff4b 	bl	8001380 <LCD5110_drawLine>
			LCD5110_drawLine(50, 24, 44, 18);
 80014ea:	2312      	movs	r3, #18
 80014ec:	222c      	movs	r2, #44	@ 0x2c
 80014ee:	2118      	movs	r1, #24
 80014f0:	2032      	movs	r0, #50	@ 0x32
 80014f2:	f7ff ff45 	bl	8001380 <LCD5110_drawLine>
			LCD5110_drawLine(50, 24, 44, 30);
 80014f6:	231e      	movs	r3, #30
 80014f8:	222c      	movs	r2, #44	@ 0x2c
 80014fa:	2118      	movs	r1, #24
 80014fc:	2032      	movs	r0, #50	@ 0x32
 80014fe:	f7ff ff3f 	bl	8001380 <LCD5110_drawLine>
			break;
 8001502:	e000      	b.n	8001506 <desenharSeta+0xc6>
        default:
            break;
 8001504:	bf00      	nop
    }
}
 8001506:	bf00      	nop
 8001508:	3708      	adds	r7, #8
 800150a:	46bd      	mov	sp, r7
 800150c:	bd80      	pop	{r7, pc}
 800150e:	bf00      	nop

08001510 <mostrarResultado>:

void mostrarResultado(uint8_t acertou) {
 8001510:	b580      	push	{r7, lr}
 8001512:	b082      	sub	sp, #8
 8001514:	af00      	add	r7, sp, #0
 8001516:	4603      	mov	r3, r0
 8001518:	71fb      	strb	r3, [r7, #7]
    LCD5110_Clear();
 800151a:	f000 f8e0 	bl	80016de <LCD5110_Clear>
    LCD5110_SetXY(0, 0);
 800151e:	2100      	movs	r1, #0
 8001520:	2000      	movs	r0, #0
 8001522:	f000 f8f4 	bl	800170e <LCD5110_SetXY>

    if (acertou == 1) {
 8001526:	79fb      	ldrb	r3, [r7, #7]
 8001528:	2b01      	cmp	r3, #1
 800152a:	d104      	bne.n	8001536 <mostrarResultado+0x26>
        LCD5110_WriteStringCentered("Acertou!", 2);
 800152c:	2102      	movs	r1, #2
 800152e:	4808      	ldr	r0, [pc, #32]	@ (8001550 <mostrarResultado+0x40>)
 8001530:	f000 f952 	bl	80017d8 <LCD5110_WriteStringCentered>
 8001534:	e003      	b.n	800153e <mostrarResultado+0x2e>
    } else {
        LCD5110_WriteStringCentered("Errou!", 2);
 8001536:	2102      	movs	r1, #2
 8001538:	4806      	ldr	r0, [pc, #24]	@ (8001554 <mostrarResultado+0x44>)
 800153a:	f000 f94d 	bl	80017d8 <LCD5110_WriteStringCentered>
    }

    HAL_Delay(1000);  // Dá tempo para ver o resultado
 800153e:	f44f 707a 	mov.w	r0, #1000	@ 0x3e8
 8001542:	f000 ffc7 	bl	80024d4 <HAL_Delay>
}
 8001546:	bf00      	nop
 8001548:	3708      	adds	r7, #8
 800154a:	46bd      	mov	sp, r7
 800154c:	bd80      	pop	{r7, pc}
 800154e:	bf00      	nop
 8001550:	08008fa8 	.word	0x08008fa8
 8001554:	08008fb4 	.word	0x08008fb4

08001558 <mostrarTelaInicial>:

void mostrarTelaInicial(void)
{
 8001558:	b580      	push	{r7, lr}
 800155a:	af00      	add	r7, sp, #0
	LCD5110_Clear();
 800155c:	f000 f8bf 	bl	80016de <LCD5110_Clear>
	LCD5110_SetXY(0, 0);
 8001560:	2100      	movs	r1, #0
 8001562:	2000      	movs	r0, #0
 8001564:	f000 f8d3 	bl	800170e <LCD5110_SetXY>
	LCD5110_WriteStringCentered("MESTRE MANDOU", 2);
 8001568:	2102      	movs	r1, #2
 800156a:	4802      	ldr	r0, [pc, #8]	@ (8001574 <mostrarTelaInicial+0x1c>)
 800156c:	f000 f934 	bl	80017d8 <LCD5110_WriteStringCentered>
}
 8001570:	bf00      	nop
 8001572:	bd80      	pop	{r7, pc}
 8001574:	08008fbc 	.word	0x08008fbc

08001578 <LCD5110_Delay>:
#include "lcd5110_hal.h"
#include "font6_8.h" // fonte 6x8

static void LCD5110_Delay(uint32_t ms) {
 8001578:	b580      	push	{r7, lr}
 800157a:	b082      	sub	sp, #8
 800157c:	af00      	add	r7, sp, #0
 800157e:	6078      	str	r0, [r7, #4]
    HAL_Delay(ms);
 8001580:	6878      	ldr	r0, [r7, #4]
 8001582:	f000 ffa7 	bl	80024d4 <HAL_Delay>
}
 8001586:	bf00      	nop
 8001588:	3708      	adds	r7, #8
 800158a:	46bd      	mov	sp, r7
 800158c:	bd80      	pop	{r7, pc}
	...

08001590 <LCD5110_DC>:

static void LCD5110_DC(uint8_t val) {
 8001590:	b580      	push	{r7, lr}
 8001592:	b082      	sub	sp, #8
 8001594:	af00      	add	r7, sp, #0
 8001596:	4603      	mov	r3, r0
 8001598:	71fb      	strb	r3, [r7, #7]
    HAL_GPIO_WritePin(LCD_DC_GPIO_Port, LCD_DC_Pin, val ? GPIO_PIN_SET : GPIO_PIN_RESET);
 800159a:	79fb      	ldrb	r3, [r7, #7]
 800159c:	2b00      	cmp	r3, #0
 800159e:	bf14      	ite	ne
 80015a0:	2301      	movne	r3, #1
 80015a2:	2300      	moveq	r3, #0
 80015a4:	b2db      	uxtb	r3, r3
 80015a6:	461a      	mov	r2, r3
 80015a8:	f44f 4100 	mov.w	r1, #32768	@ 0x8000
 80015ac:	4803      	ldr	r0, [pc, #12]	@ (80015bc <LCD5110_DC+0x2c>)
 80015ae:	f001 fb05 	bl	8002bbc <HAL_GPIO_WritePin>
}
 80015b2:	bf00      	nop
 80015b4:	3708      	adds	r7, #8
 80015b6:	46bd      	mov	sp, r7
 80015b8:	bd80      	pop	{r7, pc}
 80015ba:	bf00      	nop
 80015bc:	40020000 	.word	0x40020000

080015c0 <LCD5110_RST>:

static void LCD5110_RST(uint8_t val) {
 80015c0:	b580      	push	{r7, lr}
 80015c2:	b082      	sub	sp, #8
 80015c4:	af00      	add	r7, sp, #0
 80015c6:	4603      	mov	r3, r0
 80015c8:	71fb      	strb	r3, [r7, #7]
    HAL_GPIO_WritePin(LCD_RST_GPIO_Port, LCD_RST_Pin, val ? GPIO_PIN_SET : GPIO_PIN_RESET);
 80015ca:	79fb      	ldrb	r3, [r7, #7]
 80015cc:	2b00      	cmp	r3, #0
 80015ce:	bf14      	ite	ne
 80015d0:	2301      	movne	r3, #1
 80015d2:	2300      	moveq	r3, #0
 80015d4:	b2db      	uxtb	r3, r3
 80015d6:	461a      	mov	r2, r3
 80015d8:	f44f 5180 	mov.w	r1, #4096	@ 0x1000
 80015dc:	4803      	ldr	r0, [pc, #12]	@ (80015ec <LCD5110_RST+0x2c>)
 80015de:	f001 faed 	bl	8002bbc <HAL_GPIO_WritePin>
}
 80015e2:	bf00      	nop
 80015e4:	3708      	adds	r7, #8
 80015e6:	46bd      	mov	sp, r7
 80015e8:	bd80      	pop	{r7, pc}
 80015ea:	bf00      	nop
 80015ec:	40020000 	.word	0x40020000

080015f0 <LCD5110_CE>:

static void LCD5110_CE(uint8_t val) {
 80015f0:	b580      	push	{r7, lr}
 80015f2:	b082      	sub	sp, #8
 80015f4:	af00      	add	r7, sp, #0
 80015f6:	4603      	mov	r3, r0
 80015f8:	71fb      	strb	r3, [r7, #7]
    HAL_GPIO_WritePin(LCD_CE_GPIO_Port, LCD_CE_Pin, val ? GPIO_PIN_SET : GPIO_PIN_RESET);
 80015fa:	79fb      	ldrb	r3, [r7, #7]
 80015fc:	2b00      	cmp	r3, #0
 80015fe:	bf14      	ite	ne
 8001600:	2301      	movne	r3, #1
 8001602:	2300      	moveq	r3, #0
 8001604:	b2db      	uxtb	r3, r3
 8001606:	461a      	mov	r2, r3
 8001608:	f44f 6100 	mov.w	r1, #2048	@ 0x800
 800160c:	4803      	ldr	r0, [pc, #12]	@ (800161c <LCD5110_CE+0x2c>)
 800160e:	f001 fad5 	bl	8002bbc <HAL_GPIO_WritePin>
}
 8001612:	bf00      	nop
 8001614:	3708      	adds	r7, #8
 8001616:	46bd      	mov	sp, r7
 8001618:	bd80      	pop	{r7, pc}
 800161a:	bf00      	nop
 800161c:	40020800 	.word	0x40020800

08001620 <LCD5110_Send>:

void LCD5110_Send(uint8_t data) {
 8001620:	b580      	push	{r7, lr}
 8001622:	b082      	sub	sp, #8
 8001624:	af00      	add	r7, sp, #0
 8001626:	4603      	mov	r3, r0
 8001628:	71fb      	strb	r3, [r7, #7]
    HAL_SPI_Transmit(&hspi2, &data, 1, HAL_MAX_DELAY);
 800162a:	1df9      	adds	r1, r7, #7
 800162c:	f04f 33ff 	mov.w	r3, #4294967295
 8001630:	2201      	movs	r2, #1
 8001632:	4803      	ldr	r0, [pc, #12]	@ (8001640 <LCD5110_Send+0x20>)
 8001634:	f003 f971 	bl	800491a <HAL_SPI_Transmit>
}
 8001638:	bf00      	nop
 800163a:	3708      	adds	r7, #8
 800163c:	46bd      	mov	sp, r7
 800163e:	bd80      	pop	{r7, pc}
 8001640:	2000048c 	.word	0x2000048c

08001644 <LCD5110_SendCommand>:

void LCD5110_SendCommand(uint8_t cmd) {
 8001644:	b580      	push	{r7, lr}
 8001646:	b082      	sub	sp, #8
 8001648:	af00      	add	r7, sp, #0
 800164a:	4603      	mov	r3, r0
 800164c:	71fb      	strb	r3, [r7, #7]
    LCD5110_DC(0);
 800164e:	2000      	movs	r0, #0
 8001650:	f7ff ff9e 	bl	8001590 <LCD5110_DC>
    LCD5110_CE(0);
 8001654:	2000      	movs	r0, #0
 8001656:	f7ff ffcb 	bl	80015f0 <LCD5110_CE>
    LCD5110_Send(cmd);
 800165a:	79fb      	ldrb	r3, [r7, #7]
 800165c:	4618      	mov	r0, r3
 800165e:	f7ff ffdf 	bl	8001620 <LCD5110_Send>
    LCD5110_CE(1);
 8001662:	2001      	movs	r0, #1
 8001664:	f7ff ffc4 	bl	80015f0 <LCD5110_CE>
}
 8001668:	bf00      	nop
 800166a:	3708      	adds	r7, #8
 800166c:	46bd      	mov	sp, r7
 800166e:	bd80      	pop	{r7, pc}

08001670 <LCD5110_SendData>:

void LCD5110_SendData(uint8_t data) {
 8001670:	b580      	push	{r7, lr}
 8001672:	b082      	sub	sp, #8
 8001674:	af00      	add	r7, sp, #0
 8001676:	4603      	mov	r3, r0
 8001678:	71fb      	strb	r3, [r7, #7]
    LCD5110_DC(1);
 800167a:	2001      	movs	r0, #1
 800167c:	f7ff ff88 	bl	8001590 <LCD5110_DC>
    LCD5110_CE(0);
 8001680:	2000      	movs	r0, #0
 8001682:	f7ff ffb5 	bl	80015f0 <LCD5110_CE>
    LCD5110_Send(data);
 8001686:	79fb      	ldrb	r3, [r7, #7]
 8001688:	4618      	mov	r0, r3
 800168a:	f7ff ffc9 	bl	8001620 <LCD5110_Send>
    LCD5110_CE(1);
 800168e:	2001      	movs	r0, #1
 8001690:	f7ff ffae 	bl	80015f0 <LCD5110_CE>
}
 8001694:	bf00      	nop
 8001696:	3708      	adds	r7, #8
 8001698:	46bd      	mov	sp, r7
 800169a:	bd80      	pop	{r7, pc}

0800169c <LCD5110_Init>:

void LCD5110_Init(void) {
 800169c:	b580      	push	{r7, lr}
 800169e:	af00      	add	r7, sp, #0
    LCD5110_RST(0);
 80016a0:	2000      	movs	r0, #0
 80016a2:	f7ff ff8d 	bl	80015c0 <LCD5110_RST>
    LCD5110_Delay(10);
 80016a6:	200a      	movs	r0, #10
 80016a8:	f7ff ff66 	bl	8001578 <LCD5110_Delay>
    LCD5110_RST(1);
 80016ac:	2001      	movs	r0, #1
 80016ae:	f7ff ff87 	bl	80015c0 <LCD5110_RST>

    LCD5110_SendCommand(0x21); // Extended commands
 80016b2:	2021      	movs	r0, #33	@ 0x21
 80016b4:	f7ff ffc6 	bl	8001644 <LCD5110_SendCommand>
    LCD5110_SendCommand(0xC6); // Vop (contrast)
 80016b8:	20c6      	movs	r0, #198	@ 0xc6
 80016ba:	f7ff ffc3 	bl	8001644 <LCD5110_SendCommand>
    LCD5110_SendCommand(0x06); // Temp coef
 80016be:	2006      	movs	r0, #6
 80016c0:	f7ff ffc0 	bl	8001644 <LCD5110_SendCommand>
    LCD5110_SendCommand(0x13); // Bias
 80016c4:	2013      	movs	r0, #19
 80016c6:	f7ff ffbd 	bl	8001644 <LCD5110_SendCommand>
    LCD5110_SendCommand(0x20); // Basic commands
 80016ca:	2020      	movs	r0, #32
 80016cc:	f7ff ffba 	bl	8001644 <LCD5110_SendCommand>
    LCD5110_SendCommand(0x0C); // Normal display
 80016d0:	200c      	movs	r0, #12
 80016d2:	f7ff ffb7 	bl	8001644 <LCD5110_SendCommand>

    LCD5110_Clear();
 80016d6:	f000 f802 	bl	80016de <LCD5110_Clear>
}
 80016da:	bf00      	nop
 80016dc:	bd80      	pop	{r7, pc}

080016de <LCD5110_Clear>:

void LCD5110_Clear(void) {
 80016de:	b580      	push	{r7, lr}
 80016e0:	b082      	sub	sp, #8
 80016e2:	af00      	add	r7, sp, #0
    for (int i = 0; i < 504; i++)
 80016e4:	2300      	movs	r3, #0
 80016e6:	607b      	str	r3, [r7, #4]
 80016e8:	e005      	b.n	80016f6 <LCD5110_Clear+0x18>
        LCD5110_SendData(0x00);
 80016ea:	2000      	movs	r0, #0
 80016ec:	f7ff ffc0 	bl	8001670 <LCD5110_SendData>
    for (int i = 0; i < 504; i++)
 80016f0:	687b      	ldr	r3, [r7, #4]
 80016f2:	3301      	adds	r3, #1
 80016f4:	607b      	str	r3, [r7, #4]
 80016f6:	687b      	ldr	r3, [r7, #4]
 80016f8:	f5b3 7ffc 	cmp.w	r3, #504	@ 0x1f8
 80016fc:	dbf5      	blt.n	80016ea <LCD5110_Clear+0xc>
    LCD5110_SetXY(0, 0);
 80016fe:	2100      	movs	r1, #0
 8001700:	2000      	movs	r0, #0
 8001702:	f000 f804 	bl	800170e <LCD5110_SetXY>
}
 8001706:	bf00      	nop
 8001708:	3708      	adds	r7, #8
 800170a:	46bd      	mov	sp, r7
 800170c:	bd80      	pop	{r7, pc}

0800170e <LCD5110_SetXY>:

void LCD5110_SetXY(uint8_t x, uint8_t y) {
 800170e:	b580      	push	{r7, lr}
 8001710:	b082      	sub	sp, #8
 8001712:	af00      	add	r7, sp, #0
 8001714:	4603      	mov	r3, r0
 8001716:	460a      	mov	r2, r1
 8001718:	71fb      	strb	r3, [r7, #7]
 800171a:	4613      	mov	r3, r2
 800171c:	71bb      	strb	r3, [r7, #6]
    LCD5110_SendCommand(0x80 | (x * 6));
 800171e:	79fb      	ldrb	r3, [r7, #7]
 8001720:	461a      	mov	r2, r3
 8001722:	0052      	lsls	r2, r2, #1
 8001724:	4413      	add	r3, r2
 8001726:	005b      	lsls	r3, r3, #1
 8001728:	b2db      	uxtb	r3, r3
 800172a:	b25b      	sxtb	r3, r3
 800172c:	f063 037f 	orn	r3, r3, #127	@ 0x7f
 8001730:	b25b      	sxtb	r3, r3
 8001732:	b2db      	uxtb	r3, r3
 8001734:	4618      	mov	r0, r3
 8001736:	f7ff ff85 	bl	8001644 <LCD5110_SendCommand>
    LCD5110_SendCommand(0x40 | y);
 800173a:	79bb      	ldrb	r3, [r7, #6]
 800173c:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8001740:	b2db      	uxtb	r3, r3
 8001742:	4618      	mov	r0, r3
 8001744:	f7ff ff7e 	bl	8001644 <LCD5110_SendCommand>
}
 8001748:	bf00      	nop
 800174a:	3708      	adds	r7, #8
 800174c:	46bd      	mov	sp, r7
 800174e:	bd80      	pop	{r7, pc}

08001750 <LCD5110_WriteChar>:

void LCD5110_WriteChar(char c) {
 8001750:	b580      	push	{r7, lr}
 8001752:	b084      	sub	sp, #16
 8001754:	af00      	add	r7, sp, #0
 8001756:	4603      	mov	r3, r0
 8001758:	71fb      	strb	r3, [r7, #7]
    if (c < 32 || c > 127) c = '?';
 800175a:	79fb      	ldrb	r3, [r7, #7]
 800175c:	2b1f      	cmp	r3, #31
 800175e:	d903      	bls.n	8001768 <LCD5110_WriteChar+0x18>
 8001760:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001764:	2b00      	cmp	r3, #0
 8001766:	da01      	bge.n	800176c <LCD5110_WriteChar+0x1c>
 8001768:	233f      	movs	r3, #63	@ 0x3f
 800176a:	71fb      	strb	r3, [r7, #7]
    for (int i = 0; i < 6; i++)
 800176c:	2300      	movs	r3, #0
 800176e:	60fb      	str	r3, [r7, #12]
 8001770:	e011      	b.n	8001796 <LCD5110_WriteChar+0x46>
        LCD5110_SendData(font6_8[c - 32][i]);
 8001772:	79fb      	ldrb	r3, [r7, #7]
 8001774:	f1a3 0220 	sub.w	r2, r3, #32
 8001778:	490b      	ldr	r1, [pc, #44]	@ (80017a8 <LCD5110_WriteChar+0x58>)
 800177a:	4613      	mov	r3, r2
 800177c:	005b      	lsls	r3, r3, #1
 800177e:	4413      	add	r3, r2
 8001780:	005b      	lsls	r3, r3, #1
 8001782:	18ca      	adds	r2, r1, r3
 8001784:	68fb      	ldr	r3, [r7, #12]
 8001786:	4413      	add	r3, r2
 8001788:	781b      	ldrb	r3, [r3, #0]
 800178a:	4618      	mov	r0, r3
 800178c:	f7ff ff70 	bl	8001670 <LCD5110_SendData>
    for (int i = 0; i < 6; i++)
 8001790:	68fb      	ldr	r3, [r7, #12]
 8001792:	3301      	adds	r3, #1
 8001794:	60fb      	str	r3, [r7, #12]
 8001796:	68fb      	ldr	r3, [r7, #12]
 8001798:	2b05      	cmp	r3, #5
 800179a:	ddea      	ble.n	8001772 <LCD5110_WriteChar+0x22>
}
 800179c:	bf00      	nop
 800179e:	bf00      	nop
 80017a0:	3710      	adds	r7, #16
 80017a2:	46bd      	mov	sp, r7
 80017a4:	bd80      	pop	{r7, pc}
 80017a6:	bf00      	nop
 80017a8:	08008fcc 	.word	0x08008fcc

080017ac <LCD5110_WriteString>:

void LCD5110_WriteString(char *s) {
 80017ac:	b580      	push	{r7, lr}
 80017ae:	b082      	sub	sp, #8
 80017b0:	af00      	add	r7, sp, #0
 80017b2:	6078      	str	r0, [r7, #4]
    while (*s) {
 80017b4:	e006      	b.n	80017c4 <LCD5110_WriteString+0x18>
        LCD5110_WriteChar(*s++);
 80017b6:	687b      	ldr	r3, [r7, #4]
 80017b8:	1c5a      	adds	r2, r3, #1
 80017ba:	607a      	str	r2, [r7, #4]
 80017bc:	781b      	ldrb	r3, [r3, #0]
 80017be:	4618      	mov	r0, r3
 80017c0:	f7ff ffc6 	bl	8001750 <LCD5110_WriteChar>
    while (*s) {
 80017c4:	687b      	ldr	r3, [r7, #4]
 80017c6:	781b      	ldrb	r3, [r3, #0]
 80017c8:	2b00      	cmp	r3, #0
 80017ca:	d1f4      	bne.n	80017b6 <LCD5110_WriteString+0xa>
    }
}
 80017cc:	bf00      	nop
 80017ce:	bf00      	nop
 80017d0:	3708      	adds	r7, #8
 80017d2:	46bd      	mov	sp, r7
 80017d4:	bd80      	pop	{r7, pc}
	...

080017d8 <LCD5110_WriteStringCentered>:

void LCD5110_WriteStringCentered(char *str, uint8_t y) {
 80017d8:	b580      	push	{r7, lr}
 80017da:	b086      	sub	sp, #24
 80017dc:	af00      	add	r7, sp, #0
 80017de:	6078      	str	r0, [r7, #4]
 80017e0:	460b      	mov	r3, r1
 80017e2:	70fb      	strb	r3, [r7, #3]
    int len = strlen(str);             // número de caracteres
 80017e4:	6878      	ldr	r0, [r7, #4]
 80017e6:	f7fe fd63 	bl	80002b0 <strlen>
 80017ea:	4603      	mov	r3, r0
 80017ec:	617b      	str	r3, [r7, #20]
    int text_width = len * 6;          // 6 pixels por caractere
 80017ee:	697a      	ldr	r2, [r7, #20]
 80017f0:	4613      	mov	r3, r2
 80017f2:	005b      	lsls	r3, r3, #1
 80017f4:	4413      	add	r3, r2
 80017f6:	005b      	lsls	r3, r3, #1
 80017f8:	613b      	str	r3, [r7, #16]
    int x_pixel = (84 - text_width) / 2; // posição X centralizada em pixels
 80017fa:	693b      	ldr	r3, [r7, #16]
 80017fc:	f1c3 0354 	rsb	r3, r3, #84	@ 0x54
 8001800:	0fda      	lsrs	r2, r3, #31
 8001802:	4413      	add	r3, r2
 8001804:	105b      	asrs	r3, r3, #1
 8001806:	60fb      	str	r3, [r7, #12]
    int x_column = x_pixel / 6;        // converte para coluna
 8001808:	68fb      	ldr	r3, [r7, #12]
 800180a:	4a0a      	ldr	r2, [pc, #40]	@ (8001834 <LCD5110_WriteStringCentered+0x5c>)
 800180c:	fb82 1203 	smull	r1, r2, r2, r3
 8001810:	17db      	asrs	r3, r3, #31
 8001812:	1ad3      	subs	r3, r2, r3
 8001814:	60bb      	str	r3, [r7, #8]
    LCD5110_SetXY(x_column, y);
 8001816:	68bb      	ldr	r3, [r7, #8]
 8001818:	b2db      	uxtb	r3, r3
 800181a:	78fa      	ldrb	r2, [r7, #3]
 800181c:	4611      	mov	r1, r2
 800181e:	4618      	mov	r0, r3
 8001820:	f7ff ff75 	bl	800170e <LCD5110_SetXY>
    LCD5110_WriteString(str);
 8001824:	6878      	ldr	r0, [r7, #4]
 8001826:	f7ff ffc1 	bl	80017ac <LCD5110_WriteString>
}
 800182a:	bf00      	nop
 800182c:	3718      	adds	r7, #24
 800182e:	46bd      	mov	sp, r7
 8001830:	bd80      	pop	{r7, pc}
 8001832:	bf00      	nop
 8001834:	2aaaaaab 	.word	0x2aaaaaab

08001838 <main>:
/**
 * @brief  The application entry point.
 * @retval int
 */
int main(void)
{
 8001838:	b580      	push	{r7, lr}
 800183a:	b088      	sub	sp, #32
 800183c:	af00      	add	r7, sp, #0
	/* USER CODE BEGIN 1 */
	/* USER CODE END 1 */
	/* MCU Configuration--------------------------------------------------------*/
	/* Reset of all peripherals, Initializes the Flash interface and the Systick. */
	HAL_Init();
 800183e:	f000 fdd7 	bl	80023f0 <HAL_Init>
	/* USER CODE BEGIN Init */
	/* USER CODE END Init */
	/* Configure the system clock */
	SystemClock_Config();
 8001842:	f000 f991 	bl	8001b68 <SystemClock_Config>
	/* USER CODE BEGIN SysInit */
	/* USER CODE END SysInit */
	/* Initialize all configured peripherals */
	MX_GPIO_Init();
 8001846:	f7ff fc0f 	bl	8001068 <MX_GPIO_Init>
	MX_USART2_UART_Init();
 800184a:	f000 fd2d 	bl	80022a8 <MX_USART2_UART_Init>
	MX_SPI2_Init();
 800184e:	f000 fafd 	bl	8001e4c <MX_SPI2_Init>
	MX_I2C1_Init();
 8001852:	f7ff fcaf 	bl	80011b4 <MX_I2C1_Init>
	MX_TIM10_Init();
 8001856:	f000 fcdb 	bl	8002210 <MX_TIM10_Init>
	/* USER CODE BEGIN 2 */
	mpu6050Init(); // Inicializa o sensor
 800185a:	f000 f9f9 	bl	8001c50 <mpu6050Init>
	LCD5110_Init(); // Inicializa o display
 800185e:	f7ff ff1d 	bl	800169c <LCD5110_Init>
	LCD5110_clrScr();
 8001862:	f7ff fd3d 	bl	80012e0 <LCD5110_clrScr>
	srand(HAL_GetTick());
 8001866:	f000 fe29 	bl	80024bc <HAL_GetTick>
 800186a:	4603      	mov	r3, r0
 800186c:	4618      	mov	r0, r3
 800186e:	f004 fcb9 	bl	80061e4 <srand>
	mostrarTelaInicial();
 8001872:	f7ff fe71 	bl	8001558 <mostrarTelaInicial>
	/* USER CODE END 2 */
	/* Infinite loop */
	/* USER CODE BEGIN WHILE */
	while (1)
	{
		lerBotoes();
 8001876:	f7ff fb9d 	bl	8000fb4 <lerBotoes>
		if (stop && !tela_inicial_mostrada)
 800187a:	4bae      	ldr	r3, [pc, #696]	@ (8001b34 <main+0x2fc>)
 800187c:	681b      	ldr	r3, [r3, #0]
 800187e:	2b00      	cmp	r3, #0
 8001880:	d008      	beq.n	8001894 <main+0x5c>
 8001882:	4bad      	ldr	r3, [pc, #692]	@ (8001b38 <main+0x300>)
 8001884:	781b      	ldrb	r3, [r3, #0]
 8001886:	2b00      	cmp	r3, #0
 8001888:	d104      	bne.n	8001894 <main+0x5c>
		{
			mostrarTelaInicial();
 800188a:	f7ff fe65 	bl	8001558 <mostrarTelaInicial>
			tela_inicial_mostrada = 1;
 800188e:	4baa      	ldr	r3, [pc, #680]	@ (8001b38 <main+0x300>)
 8001890:	2201      	movs	r2, #1
 8001892:	701a      	strb	r2, [r3, #0]
		}
		if (start && !stop)
 8001894:	4ba9      	ldr	r3, [pc, #676]	@ (8001b3c <main+0x304>)
 8001896:	681b      	ldr	r3, [r3, #0]
 8001898:	2b00      	cmp	r3, #0
 800189a:	d0ec      	beq.n	8001876 <main+0x3e>
 800189c:	4ba5      	ldr	r3, [pc, #660]	@ (8001b34 <main+0x2fc>)
 800189e:	681b      	ldr	r3, [r3, #0]
 80018a0:	2b00      	cmp	r3, #0
 80018a2:	d1e8      	bne.n	8001876 <main+0x3e>
		{
			if (!aguardandoMovimento)
 80018a4:	4ba6      	ldr	r3, [pc, #664]	@ (8001b40 <main+0x308>)
 80018a6:	781b      	ldrb	r3, [r3, #0]
 80018a8:	2b00      	cmp	r3, #0
 80018aa:	f040 80ba 	bne.w	8001a22 <main+0x1ea>
			{
				mestre_mandou = rand() % 2;
 80018ae:	f004 fcc7 	bl	8006240 <rand>
 80018b2:	4603      	mov	r3, r0
 80018b4:	2b00      	cmp	r3, #0
 80018b6:	f003 0301 	and.w	r3, r3, #1
 80018ba:	bfb8      	it	lt
 80018bc:	425b      	neglt	r3, r3
 80018be:	4aa1      	ldr	r2, [pc, #644]	@ (8001b44 <main+0x30c>)
 80018c0:	6013      	str	r3, [r2, #0]
				if (mestre_mandou == 0)
 80018c2:	4ba0      	ldr	r3, [pc, #640]	@ (8001b44 <main+0x30c>)
 80018c4:	681b      	ldr	r3, [r3, #0]
 80018c6:	2b00      	cmp	r3, #0
 80018c8:	f040 8081 	bne.w	80019ce <main+0x196>
				{
					// NÃO mandei
					HAL_GPIO_WritePin(MESTRE_MANDOU_GPIO_Port, MESTRE_MANDOU_Pin, GPIO_PIN_RESET);
 80018cc:	2200      	movs	r2, #0
 80018ce:	2120      	movs	r1, #32
 80018d0:	489d      	ldr	r0, [pc, #628]	@ (8001b48 <main+0x310>)
 80018d2:	f001 f973 	bl	8002bbc <HAL_GPIO_WritePin>
					// Gera nova direção
					do
					{
						direcaoAtual = (Direcao)(rand() % 4);
 80018d6:	f004 fcb3 	bl	8006240 <rand>
 80018da:	4603      	mov	r3, r0
 80018dc:	425a      	negs	r2, r3
 80018de:	f003 0303 	and.w	r3, r3, #3
 80018e2:	f002 0203 	and.w	r2, r2, #3
 80018e6:	bf58      	it	pl
 80018e8:	4253      	negpl	r3, r2
 80018ea:	b2da      	uxtb	r2, r3
 80018ec:	4b97      	ldr	r3, [pc, #604]	@ (8001b4c <main+0x314>)
 80018ee:	701a      	strb	r2, [r3, #0]
					} while (direcaoAtual == direcaoAnterior);
 80018f0:	4b96      	ldr	r3, [pc, #600]	@ (8001b4c <main+0x314>)
 80018f2:	781a      	ldrb	r2, [r3, #0]
 80018f4:	4b96      	ldr	r3, [pc, #600]	@ (8001b50 <main+0x318>)
 80018f6:	781b      	ldrb	r3, [r3, #0]
 80018f8:	429a      	cmp	r2, r3
 80018fa:	d0ec      	beq.n	80018d6 <main+0x9e>
					direcaoAnterior = direcaoAtual;
 80018fc:	4b93      	ldr	r3, [pc, #588]	@ (8001b4c <main+0x314>)
 80018fe:	781a      	ldrb	r2, [r3, #0]
 8001900:	4b93      	ldr	r3, [pc, #588]	@ (8001b50 <main+0x318>)
 8001902:	701a      	strb	r2, [r3, #0]
					desenharSeta(direcaoAtual); // Exibe seta mesmo com mestre_mandou == 0
 8001904:	4b91      	ldr	r3, [pc, #580]	@ (8001b4c <main+0x314>)
 8001906:	781b      	ldrb	r3, [r3, #0]
 8001908:	4618      	mov	r0, r3
 800190a:	f7ff fd99 	bl	8001440 <desenharSeta>
					uint32_t tempoInicial = HAL_GetTick();
 800190e:	f000 fdd5 	bl	80024bc <HAL_GetTick>
 8001912:	6138      	str	r0, [r7, #16]
					while (HAL_GetTick() - tempoInicial < 3000) // observa por 3 segundos
 8001914:	e04d      	b.n	80019b2 <main+0x17a>
					{
						mpu6050ReadAccel(&leituraA);
 8001916:	488f      	ldr	r0, [pc, #572]	@ (8001b54 <main+0x31c>)
 8001918:	f000 fa1a 	bl	8001d50 <mpu6050ReadAccel>
						float ax = leituraA.accelX / 16384.0;
 800191c:	4b8d      	ldr	r3, [pc, #564]	@ (8001b54 <main+0x31c>)
 800191e:	f9b3 3000 	ldrsh.w	r3, [r3]
 8001922:	4618      	mov	r0, r3
 8001924:	f7fe fe1e 	bl	8000564 <__aeabi_i2d>
 8001928:	f04f 0200 	mov.w	r2, #0
 800192c:	4b8a      	ldr	r3, [pc, #552]	@ (8001b58 <main+0x320>)
 800192e:	f7fe ffad 	bl	800088c <__aeabi_ddiv>
 8001932:	4602      	mov	r2, r0
 8001934:	460b      	mov	r3, r1
 8001936:	4610      	mov	r0, r2
 8001938:	4619      	mov	r1, r3
 800193a:	f7ff f955 	bl	8000be8 <__aeabi_d2f>
 800193e:	4603      	mov	r3, r0
 8001940:	60fb      	str	r3, [r7, #12]
						float ay = leituraA.accelY / 16384.0;
 8001942:	4b84      	ldr	r3, [pc, #528]	@ (8001b54 <main+0x31c>)
 8001944:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8001948:	4618      	mov	r0, r3
 800194a:	f7fe fe0b 	bl	8000564 <__aeabi_i2d>
 800194e:	f04f 0200 	mov.w	r2, #0
 8001952:	4b81      	ldr	r3, [pc, #516]	@ (8001b58 <main+0x320>)
 8001954:	f7fe ff9a 	bl	800088c <__aeabi_ddiv>
 8001958:	4602      	mov	r2, r0
 800195a:	460b      	mov	r3, r1
 800195c:	4610      	mov	r0, r2
 800195e:	4619      	mov	r1, r3
 8001960:	f7ff f942 	bl	8000be8 <__aeabi_d2f>
 8001964:	4603      	mov	r3, r0
 8001966:	60bb      	str	r3, [r7, #8]
						Direcao mov = detectarMovimento(ax, ay, THRESHOLD);
 8001968:	4b7c      	ldr	r3, [pc, #496]	@ (8001b5c <main+0x324>)
 800196a:	edd3 7a00 	vldr	s15, [r3]
 800196e:	eeb0 1a67 	vmov.f32	s2, s15
 8001972:	edd7 0a02 	vldr	s1, [r7, #8]
 8001976:	ed97 0a03 	vldr	s0, [r7, #12]
 800197a:	f000 fa27 	bl	8001dcc <detectarMovimento>
 800197e:	4603      	mov	r3, r0
 8001980:	71fb      	strb	r3, [r7, #7]
						if (mov != DIR_NEUTRO)
 8001982:	79fb      	ldrb	r3, [r7, #7]
 8001984:	2b04      	cmp	r3, #4
 8001986:	d011      	beq.n	80019ac <main+0x174>
						{
							// Movimento foi detectado com LED apagado => erro!
							mostrarResultado(0);
 8001988:	2000      	movs	r0, #0
 800198a:	f7ff fdc1 	bl	8001510 <mostrarResultado>
							acertosSequencia = 0;
 800198e:	4b74      	ldr	r3, [pc, #464]	@ (8001b60 <main+0x328>)
 8001990:	2200      	movs	r2, #0
 8001992:	601a      	str	r2, [r3, #0]
							enviarAcertosSequencia();
 8001994:	f7ff fb4a 	bl	800102c <enviarAcertosSequencia>
							start = 0;
 8001998:	4b68      	ldr	r3, [pc, #416]	@ (8001b3c <main+0x304>)
 800199a:	2200      	movs	r2, #0
 800199c:	601a      	str	r2, [r3, #0]
							stop = 1;
 800199e:	4b65      	ldr	r3, [pc, #404]	@ (8001b34 <main+0x2fc>)
 80019a0:	2201      	movs	r2, #1
 80019a2:	601a      	str	r2, [r3, #0]
							tela_inicial_mostrada = 0;
 80019a4:	4b64      	ldr	r3, [pc, #400]	@ (8001b38 <main+0x300>)
 80019a6:	2200      	movs	r2, #0
 80019a8:	701a      	strb	r2, [r3, #0]
							break; // sai do while
 80019aa:	e00b      	b.n	80019c4 <main+0x18c>
						}
						HAL_Delay(50); // pequena pausa entre leituras
 80019ac:	2032      	movs	r0, #50	@ 0x32
 80019ae:	f000 fd91 	bl	80024d4 <HAL_Delay>
					while (HAL_GetTick() - tempoInicial < 3000) // observa por 3 segundos
 80019b2:	f000 fd83 	bl	80024bc <HAL_GetTick>
 80019b6:	4602      	mov	r2, r0
 80019b8:	693b      	ldr	r3, [r7, #16]
 80019ba:	1ad3      	subs	r3, r2, r3
 80019bc:	f640 32b7 	movw	r2, #2999	@ 0xbb7
 80019c0:	4293      	cmp	r3, r2
 80019c2:	d9a8      	bls.n	8001916 <main+0xde>
					}
					HAL_Delay(500); // pequena espera antes da próxima rodada (opcional)
 80019c4:	f44f 70fa 	mov.w	r0, #500	@ 0x1f4
 80019c8:	f000 fd84 	bl	80024d4 <HAL_Delay>
 80019cc:	e0ae      	b.n	8001b2c <main+0x2f4>
				}
				else
				{
					// MESTRE MANDOU
					HAL_GPIO_WritePin(MESTRE_MANDOU_GPIO_Port, MESTRE_MANDOU_Pin, GPIO_PIN_SET);
 80019ce:	2201      	movs	r2, #1
 80019d0:	2120      	movs	r1, #32
 80019d2:	485d      	ldr	r0, [pc, #372]	@ (8001b48 <main+0x310>)
 80019d4:	f001 f8f2 	bl	8002bbc <HAL_GPIO_WritePin>
					// Gera nova direção
					do
					{
						direcaoAtual = (Direcao)(rand() % 4);
 80019d8:	f004 fc32 	bl	8006240 <rand>
 80019dc:	4603      	mov	r3, r0
 80019de:	425a      	negs	r2, r3
 80019e0:	f003 0303 	and.w	r3, r3, #3
 80019e4:	f002 0203 	and.w	r2, r2, #3
 80019e8:	bf58      	it	pl
 80019ea:	4253      	negpl	r3, r2
 80019ec:	b2da      	uxtb	r2, r3
 80019ee:	4b57      	ldr	r3, [pc, #348]	@ (8001b4c <main+0x314>)
 80019f0:	701a      	strb	r2, [r3, #0]
					} while (direcaoAtual == direcaoAnterior);
 80019f2:	4b56      	ldr	r3, [pc, #344]	@ (8001b4c <main+0x314>)
 80019f4:	781a      	ldrb	r2, [r3, #0]
 80019f6:	4b56      	ldr	r3, [pc, #344]	@ (8001b50 <main+0x318>)
 80019f8:	781b      	ldrb	r3, [r3, #0]
 80019fa:	429a      	cmp	r2, r3
 80019fc:	d0ec      	beq.n	80019d8 <main+0x1a0>
					direcaoAnterior = direcaoAtual;
 80019fe:	4b53      	ldr	r3, [pc, #332]	@ (8001b4c <main+0x314>)
 8001a00:	781a      	ldrb	r2, [r3, #0]
 8001a02:	4b53      	ldr	r3, [pc, #332]	@ (8001b50 <main+0x318>)
 8001a04:	701a      	strb	r2, [r3, #0]
					desenharSeta(direcaoAtual);
 8001a06:	4b51      	ldr	r3, [pc, #324]	@ (8001b4c <main+0x314>)
 8001a08:	781b      	ldrb	r3, [r3, #0]
 8001a0a:	4618      	mov	r0, r3
 8001a0c:	f7ff fd18 	bl	8001440 <desenharSeta>
					tempoSeta = HAL_GetTick();
 8001a10:	f000 fd54 	bl	80024bc <HAL_GetTick>
 8001a14:	4603      	mov	r3, r0
 8001a16:	4a53      	ldr	r2, [pc, #332]	@ (8001b64 <main+0x32c>)
 8001a18:	6013      	str	r3, [r2, #0]
					aguardandoMovimento = 1;
 8001a1a:	4b49      	ldr	r3, [pc, #292]	@ (8001b40 <main+0x308>)
 8001a1c:	2201      	movs	r2, #1
 8001a1e:	701a      	strb	r2, [r3, #0]
 8001a20:	e084      	b.n	8001b2c <main+0x2f4>
				}
			}
			else
			{
				// Aguarda movimento por no máximo 3 segundos
				if (HAL_GetTick() - tempoSeta > 3000)
 8001a22:	f000 fd4b 	bl	80024bc <HAL_GetTick>
 8001a26:	4602      	mov	r2, r0
 8001a28:	4b4e      	ldr	r3, [pc, #312]	@ (8001b64 <main+0x32c>)
 8001a2a:	681b      	ldr	r3, [r3, #0]
 8001a2c:	1ad3      	subs	r3, r2, r3
 8001a2e:	f640 32b8 	movw	r2, #3000	@ 0xbb8
 8001a32:	4293      	cmp	r3, r2
 8001a34:	d912      	bls.n	8001a5c <main+0x224>
				{
					// Timeout
					mostrarResultado(0);
 8001a36:	2000      	movs	r0, #0
 8001a38:	f7ff fd6a 	bl	8001510 <mostrarResultado>
					acertosSequencia = 0;
 8001a3c:	4b48      	ldr	r3, [pc, #288]	@ (8001b60 <main+0x328>)
 8001a3e:	2200      	movs	r2, #0
 8001a40:	601a      	str	r2, [r3, #0]
					start = 0;
 8001a42:	4b3e      	ldr	r3, [pc, #248]	@ (8001b3c <main+0x304>)
 8001a44:	2200      	movs	r2, #0
 8001a46:	601a      	str	r2, [r3, #0]
					stop = 1;
 8001a48:	4b3a      	ldr	r3, [pc, #232]	@ (8001b34 <main+0x2fc>)
 8001a4a:	2201      	movs	r2, #1
 8001a4c:	601a      	str	r2, [r3, #0]
					tela_inicial_mostrada = 0;
 8001a4e:	4b3a      	ldr	r3, [pc, #232]	@ (8001b38 <main+0x300>)
 8001a50:	2200      	movs	r2, #0
 8001a52:	701a      	strb	r2, [r3, #0]
					aguardandoMovimento = 0;
 8001a54:	4b3a      	ldr	r3, [pc, #232]	@ (8001b40 <main+0x308>)
 8001a56:	2200      	movs	r2, #0
 8001a58:	701a      	strb	r2, [r3, #0]
 8001a5a:	e067      	b.n	8001b2c <main+0x2f4>
				}
				else if (HAL_GetTick() - tempoSeta > 1000) // só começa a verificar após 1s
 8001a5c:	f000 fd2e 	bl	80024bc <HAL_GetTick>
 8001a60:	4602      	mov	r2, r0
 8001a62:	4b40      	ldr	r3, [pc, #256]	@ (8001b64 <main+0x32c>)
 8001a64:	681b      	ldr	r3, [r3, #0]
 8001a66:	1ad3      	subs	r3, r2, r3
 8001a68:	f5b3 7f7a 	cmp.w	r3, #1000	@ 0x3e8
 8001a6c:	d95e      	bls.n	8001b2c <main+0x2f4>
				{
					mpu6050ReadAccel(&leituraA);
 8001a6e:	4839      	ldr	r0, [pc, #228]	@ (8001b54 <main+0x31c>)
 8001a70:	f000 f96e 	bl	8001d50 <mpu6050ReadAccel>
					float ax = leituraA.accelX / 16384.0;
 8001a74:	4b37      	ldr	r3, [pc, #220]	@ (8001b54 <main+0x31c>)
 8001a76:	f9b3 3000 	ldrsh.w	r3, [r3]
 8001a7a:	4618      	mov	r0, r3
 8001a7c:	f7fe fd72 	bl	8000564 <__aeabi_i2d>
 8001a80:	f04f 0200 	mov.w	r2, #0
 8001a84:	4b34      	ldr	r3, [pc, #208]	@ (8001b58 <main+0x320>)
 8001a86:	f7fe ff01 	bl	800088c <__aeabi_ddiv>
 8001a8a:	4602      	mov	r2, r0
 8001a8c:	460b      	mov	r3, r1
 8001a8e:	4610      	mov	r0, r2
 8001a90:	4619      	mov	r1, r3
 8001a92:	f7ff f8a9 	bl	8000be8 <__aeabi_d2f>
 8001a96:	4603      	mov	r3, r0
 8001a98:	61fb      	str	r3, [r7, #28]
					float ay = leituraA.accelY / 16384.0;
 8001a9a:	4b2e      	ldr	r3, [pc, #184]	@ (8001b54 <main+0x31c>)
 8001a9c:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8001aa0:	4618      	mov	r0, r3
 8001aa2:	f7fe fd5f 	bl	8000564 <__aeabi_i2d>
 8001aa6:	f04f 0200 	mov.w	r2, #0
 8001aaa:	4b2b      	ldr	r3, [pc, #172]	@ (8001b58 <main+0x320>)
 8001aac:	f7fe feee 	bl	800088c <__aeabi_ddiv>
 8001ab0:	4602      	mov	r2, r0
 8001ab2:	460b      	mov	r3, r1
 8001ab4:	4610      	mov	r0, r2
 8001ab6:	4619      	mov	r1, r3
 8001ab8:	f7ff f896 	bl	8000be8 <__aeabi_d2f>
 8001abc:	4603      	mov	r3, r0
 8001abe:	61bb      	str	r3, [r7, #24]
					Direcao mov = detectarMovimento(ax, ay, THRESHOLD);
 8001ac0:	4b26      	ldr	r3, [pc, #152]	@ (8001b5c <main+0x324>)
 8001ac2:	edd3 7a00 	vldr	s15, [r3]
 8001ac6:	eeb0 1a67 	vmov.f32	s2, s15
 8001aca:	edd7 0a06 	vldr	s1, [r7, #24]
 8001ace:	ed97 0a07 	vldr	s0, [r7, #28]
 8001ad2:	f000 f97b 	bl	8001dcc <detectarMovimento>
 8001ad6:	4603      	mov	r3, r0
 8001ad8:	75fb      	strb	r3, [r7, #23]
					if (mov != DIR_NEUTRO)
 8001ada:	7dfb      	ldrb	r3, [r7, #23]
 8001adc:	2b04      	cmp	r3, #4
 8001ade:	d025      	beq.n	8001b2c <main+0x2f4>
					{
						if (mov == direcaoAtual)
 8001ae0:	4b1a      	ldr	r3, [pc, #104]	@ (8001b4c <main+0x314>)
 8001ae2:	781b      	ldrb	r3, [r3, #0]
 8001ae4:	7dfa      	ldrb	r2, [r7, #23]
 8001ae6:	429a      	cmp	r2, r3
 8001ae8:	d108      	bne.n	8001afc <main+0x2c4>
						{
							mostrarResultado(1);
 8001aea:	2001      	movs	r0, #1
 8001aec:	f7ff fd10 	bl	8001510 <mostrarResultado>
							acertosSequencia++;
 8001af0:	4b1b      	ldr	r3, [pc, #108]	@ (8001b60 <main+0x328>)
 8001af2:	681b      	ldr	r3, [r3, #0]
 8001af4:	3301      	adds	r3, #1
 8001af6:	4a1a      	ldr	r2, [pc, #104]	@ (8001b60 <main+0x328>)
 8001af8:	6013      	str	r3, [r2, #0]
 8001afa:	e00e      	b.n	8001b1a <main+0x2e2>
						}
						else
						{
							mostrarResultado(0);
 8001afc:	2000      	movs	r0, #0
 8001afe:	f7ff fd07 	bl	8001510 <mostrarResultado>
							acertosSequencia = 0;
 8001b02:	4b17      	ldr	r3, [pc, #92]	@ (8001b60 <main+0x328>)
 8001b04:	2200      	movs	r2, #0
 8001b06:	601a      	str	r2, [r3, #0]
							start = 0;
 8001b08:	4b0c      	ldr	r3, [pc, #48]	@ (8001b3c <main+0x304>)
 8001b0a:	2200      	movs	r2, #0
 8001b0c:	601a      	str	r2, [r3, #0]
							stop = 1;
 8001b0e:	4b09      	ldr	r3, [pc, #36]	@ (8001b34 <main+0x2fc>)
 8001b10:	2201      	movs	r2, #1
 8001b12:	601a      	str	r2, [r3, #0]
							tela_inicial_mostrada = 0;
 8001b14:	4b08      	ldr	r3, [pc, #32]	@ (8001b38 <main+0x300>)
 8001b16:	2200      	movs	r2, #0
 8001b18:	701a      	strb	r2, [r3, #0]
						}
						enviarAcertosSequencia();
 8001b1a:	f7ff fa87 	bl	800102c <enviarAcertosSequencia>
						aguardandoMovimento = 0;
 8001b1e:	4b08      	ldr	r3, [pc, #32]	@ (8001b40 <main+0x308>)
 8001b20:	2200      	movs	r2, #0
 8001b22:	701a      	strb	r2, [r3, #0]
						HAL_Delay(1000); // Pausa após resposta
 8001b24:	f44f 707a 	mov.w	r0, #1000	@ 0x3e8
 8001b28:	f000 fcd4 	bl	80024d4 <HAL_Delay>
					}
				}
			}
			HAL_Delay(50); // Suavização
 8001b2c:	2032      	movs	r0, #50	@ 0x32
 8001b2e:	f000 fcd1 	bl	80024d4 <HAL_Delay>
		lerBotoes();
 8001b32:	e6a0      	b.n	8001876 <main+0x3e>
 8001b34:	20000004 	.word	0x20000004
 8001b38:	20000488 	.word	0x20000488
 8001b3c:	20000478 	.word	0x20000478
 8001b40:	20000480 	.word	0x20000480
 8001b44:	20000484 	.word	0x20000484
 8001b48:	40020400 	.word	0x40020400
 8001b4c:	20000008 	.word	0x20000008
 8001b50:	20000009 	.word	0x20000009
 8001b54:	2000046c 	.word	0x2000046c
 8001b58:	40d00000 	.word	0x40d00000
 8001b5c:	20000000 	.word	0x20000000
 8001b60:	20000474 	.word	0x20000474
 8001b64:	2000047c 	.word	0x2000047c

08001b68 <SystemClock_Config>:
/**
 * @brief System Clock Configuration
 * @retval None
 */
void SystemClock_Config(void)
{
 8001b68:	b580      	push	{r7, lr}
 8001b6a:	b094      	sub	sp, #80	@ 0x50
 8001b6c:	af00      	add	r7, sp, #0
 RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8001b6e:	f107 031c 	add.w	r3, r7, #28
 8001b72:	2234      	movs	r2, #52	@ 0x34
 8001b74:	2100      	movs	r1, #0
 8001b76:	4618      	mov	r0, r3
 8001b78:	f005 f931 	bl	8006dde <memset>
 RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8001b7c:	f107 0308 	add.w	r3, r7, #8
 8001b80:	2200      	movs	r2, #0
 8001b82:	601a      	str	r2, [r3, #0]
 8001b84:	605a      	str	r2, [r3, #4]
 8001b86:	609a      	str	r2, [r3, #8]
 8001b88:	60da      	str	r2, [r3, #12]
 8001b8a:	611a      	str	r2, [r3, #16]
 /** Configure the main internal regulator output voltage
 */
 __HAL_RCC_PWR_CLK_ENABLE();
 8001b8c:	2300      	movs	r3, #0
 8001b8e:	607b      	str	r3, [r7, #4]
 8001b90:	4b2a      	ldr	r3, [pc, #168]	@ (8001c3c <SystemClock_Config+0xd4>)
 8001b92:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001b94:	4a29      	ldr	r2, [pc, #164]	@ (8001c3c <SystemClock_Config+0xd4>)
 8001b96:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8001b9a:	6413      	str	r3, [r2, #64]	@ 0x40
 8001b9c:	4b27      	ldr	r3, [pc, #156]	@ (8001c3c <SystemClock_Config+0xd4>)
 8001b9e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001ba0:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8001ba4:	607b      	str	r3, [r7, #4]
 8001ba6:	687b      	ldr	r3, [r7, #4]
 __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 8001ba8:	2300      	movs	r3, #0
 8001baa:	603b      	str	r3, [r7, #0]
 8001bac:	4b24      	ldr	r3, [pc, #144]	@ (8001c40 <SystemClock_Config+0xd8>)
 8001bae:	681b      	ldr	r3, [r3, #0]
 8001bb0:	f423 4340 	bic.w	r3, r3, #49152	@ 0xc000
 8001bb4:	4a22      	ldr	r2, [pc, #136]	@ (8001c40 <SystemClock_Config+0xd8>)
 8001bb6:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8001bba:	6013      	str	r3, [r2, #0]
 8001bbc:	4b20      	ldr	r3, [pc, #128]	@ (8001c40 <SystemClock_Config+0xd8>)
 8001bbe:	681b      	ldr	r3, [r3, #0]
 8001bc0:	f403 4340 	and.w	r3, r3, #49152	@ 0xc000
 8001bc4:	603b      	str	r3, [r7, #0]
 8001bc6:	683b      	ldr	r3, [r7, #0]
 /** Initializes the RCC Oscillators according to the specified parameters
 * in the RCC_OscInitTypeDef structure.
 */
 RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 8001bc8:	2302      	movs	r3, #2
 8001bca:	61fb      	str	r3, [r7, #28]
 RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 8001bcc:	2301      	movs	r3, #1
 8001bce:	62bb      	str	r3, [r7, #40]	@ 0x28
 RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 8001bd0:	2310      	movs	r3, #16
 8001bd2:	62fb      	str	r3, [r7, #44]	@ 0x2c
 RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 8001bd4:	2302      	movs	r3, #2
 8001bd6:	637b      	str	r3, [r7, #52]	@ 0x34
 RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 8001bd8:	2300      	movs	r3, #0
 8001bda:	63bb      	str	r3, [r7, #56]	@ 0x38
 RCC_OscInitStruct.PLL.PLLM = 16;
 8001bdc:	2310      	movs	r3, #16
 8001bde:	63fb      	str	r3, [r7, #60]	@ 0x3c
 RCC_OscInitStruct.PLL.PLLN = 336;
 8001be0:	f44f 73a8 	mov.w	r3, #336	@ 0x150
 8001be4:	643b      	str	r3, [r7, #64]	@ 0x40
 RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV4;
 8001be6:	2304      	movs	r3, #4
 8001be8:	647b      	str	r3, [r7, #68]	@ 0x44
 RCC_OscInitStruct.PLL.PLLQ = 2;
 8001bea:	2302      	movs	r3, #2
 8001bec:	64bb      	str	r3, [r7, #72]	@ 0x48
 RCC_OscInitStruct.PLL.PLLR = 2;
 8001bee:	2302      	movs	r3, #2
 8001bf0:	64fb      	str	r3, [r7, #76]	@ 0x4c
 if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8001bf2:	f107 031c 	add.w	r3, r7, #28
 8001bf6:	4618      	mov	r0, r3
 8001bf8:	f002 fb68 	bl	80042cc <HAL_RCC_OscConfig>
 8001bfc:	4603      	mov	r3, r0
 8001bfe:	2b00      	cmp	r3, #0
 8001c00:	d001      	beq.n	8001c06 <SystemClock_Config+0x9e>
 {
   Error_Handler();
 8001c02:	f000 f81f 	bl	8001c44 <Error_Handler>
 }
 /** Initializes the CPU, AHB and APB buses clocks
 */
 RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8001c06:	230f      	movs	r3, #15
 8001c08:	60bb      	str	r3, [r7, #8]
                             |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8001c0a:	2302      	movs	r3, #2
 8001c0c:	60fb      	str	r3, [r7, #12]
 RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8001c0e:	2300      	movs	r3, #0
 8001c10:	613b      	str	r3, [r7, #16]
 RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 8001c12:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 8001c16:	617b      	str	r3, [r7, #20]
 RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 8001c18:	2300      	movs	r3, #0
 8001c1a:	61bb      	str	r3, [r7, #24]
 if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 8001c1c:	f107 0308 	add.w	r3, r7, #8
 8001c20:	2102      	movs	r1, #2
 8001c22:	4618      	mov	r0, r3
 8001c24:	f002 f808 	bl	8003c38 <HAL_RCC_ClockConfig>
 8001c28:	4603      	mov	r3, r0
 8001c2a:	2b00      	cmp	r3, #0
 8001c2c:	d001      	beq.n	8001c32 <SystemClock_Config+0xca>
 {
   Error_Handler();
 8001c2e:	f000 f809 	bl	8001c44 <Error_Handler>
 }
}
 8001c32:	bf00      	nop
 8001c34:	3750      	adds	r7, #80	@ 0x50
 8001c36:	46bd      	mov	sp, r7
 8001c38:	bd80      	pop	{r7, pc}
 8001c3a:	bf00      	nop
 8001c3c:	40023800 	.word	0x40023800
 8001c40:	40007000 	.word	0x40007000

08001c44 <Error_Handler>:
/**
 * @brief  This function is executed in case of error occurrence.
 * @retval None
 */
void Error_Handler(void)
{
 8001c44:	b480      	push	{r7}
 8001c46:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting special-purpose register PRIMASK.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8001c48:	b672      	cpsid	i
}
 8001c4a:	bf00      	nop
 /* USER CODE BEGIN Error_Handler_Debug */
 /* User can add his own implementation to report the HAL error return state */
 __disable_irq();
 while (1)
 8001c4c:	bf00      	nop
 8001c4e:	e7fd      	b.n	8001c4c <Error_Handler+0x8>

08001c50 <mpu6050Init>:
#include "usart.h"
#include "direcao.h"

static uint8_t mpu6050Addr = (0x68 << 1);

void mpu6050Init(void) {
 8001c50:	b580      	push	{r7, lr}
 8001c52:	b086      	sub	sp, #24
 8001c54:	af04      	add	r7, sp, #16
    static const uint8_t gyroConfigReg = 0x1B;
    static unsigned char msgErro[] = "Erro na inicializacao do MPU6050";
    uint8_t check;
    uint8_t data;

    HAL_I2C_Mem_Read(&hi2c1, mpu6050Addr, whoAmIReg, 1, &check, 1, 1000);
 8001c56:	4b35      	ldr	r3, [pc, #212]	@ (8001d2c <mpu6050Init+0xdc>)
 8001c58:	781b      	ldrb	r3, [r3, #0]
 8001c5a:	4619      	mov	r1, r3
 8001c5c:	4b34      	ldr	r3, [pc, #208]	@ (8001d30 <mpu6050Init+0xe0>)
 8001c5e:	781b      	ldrb	r3, [r3, #0]
 8001c60:	461a      	mov	r2, r3
 8001c62:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 8001c66:	9302      	str	r3, [sp, #8]
 8001c68:	2301      	movs	r3, #1
 8001c6a:	9301      	str	r3, [sp, #4]
 8001c6c:	1dfb      	adds	r3, r7, #7
 8001c6e:	9300      	str	r3, [sp, #0]
 8001c70:	2301      	movs	r3, #1
 8001c72:	4830      	ldr	r0, [pc, #192]	@ (8001d34 <mpu6050Init+0xe4>)
 8001c74:	f001 f9fa 	bl	800306c <HAL_I2C_Mem_Read>
    if(check == 0x68) {
 8001c78:	79fb      	ldrb	r3, [r7, #7]
 8001c7a:	2b68      	cmp	r3, #104	@ 0x68
 8001c7c:	d14c      	bne.n	8001d18 <mpu6050Init+0xc8>
        data = 0x08;
 8001c7e:	2308      	movs	r3, #8
 8001c80:	71bb      	strb	r3, [r7, #6]
        HAL_I2C_Mem_Write(&hi2c1, mpu6050Addr, pwrMgmt1Reg, 1, &data, 1, 1000);
 8001c82:	4b2a      	ldr	r3, [pc, #168]	@ (8001d2c <mpu6050Init+0xdc>)
 8001c84:	781b      	ldrb	r3, [r3, #0]
 8001c86:	4619      	mov	r1, r3
 8001c88:	4b2b      	ldr	r3, [pc, #172]	@ (8001d38 <mpu6050Init+0xe8>)
 8001c8a:	781b      	ldrb	r3, [r3, #0]
 8001c8c:	461a      	mov	r2, r3
 8001c8e:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 8001c92:	9302      	str	r3, [sp, #8]
 8001c94:	2301      	movs	r3, #1
 8001c96:	9301      	str	r3, [sp, #4]
 8001c98:	1dbb      	adds	r3, r7, #6
 8001c9a:	9300      	str	r3, [sp, #0]
 8001c9c:	2301      	movs	r3, #1
 8001c9e:	4825      	ldr	r0, [pc, #148]	@ (8001d34 <mpu6050Init+0xe4>)
 8001ca0:	f001 f8ea 	bl	8002e78 <HAL_I2C_Mem_Write>
        data = 0x06;
 8001ca4:	2306      	movs	r3, #6
 8001ca6:	71bb      	strb	r3, [r7, #6]
        HAL_I2C_Mem_Write(&hi2c1, mpu6050Addr, configReg, 1, &data, 1, 1000);
 8001ca8:	4b20      	ldr	r3, [pc, #128]	@ (8001d2c <mpu6050Init+0xdc>)
 8001caa:	781b      	ldrb	r3, [r3, #0]
 8001cac:	4619      	mov	r1, r3
 8001cae:	4b23      	ldr	r3, [pc, #140]	@ (8001d3c <mpu6050Init+0xec>)
 8001cb0:	781b      	ldrb	r3, [r3, #0]
 8001cb2:	461a      	mov	r2, r3
 8001cb4:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 8001cb8:	9302      	str	r3, [sp, #8]
 8001cba:	2301      	movs	r3, #1
 8001cbc:	9301      	str	r3, [sp, #4]
 8001cbe:	1dbb      	adds	r3, r7, #6
 8001cc0:	9300      	str	r3, [sp, #0]
 8001cc2:	2301      	movs	r3, #1
 8001cc4:	481b      	ldr	r0, [pc, #108]	@ (8001d34 <mpu6050Init+0xe4>)
 8001cc6:	f001 f8d7 	bl	8002e78 <HAL_I2C_Mem_Write>
        data = 0x00;
 8001cca:	2300      	movs	r3, #0
 8001ccc:	71bb      	strb	r3, [r7, #6]
        HAL_I2C_Mem_Write(&hi2c1, mpu6050Addr, accelConfigReg, 1, &data, 1, 1000);
 8001cce:	4b17      	ldr	r3, [pc, #92]	@ (8001d2c <mpu6050Init+0xdc>)
 8001cd0:	781b      	ldrb	r3, [r3, #0]
 8001cd2:	4619      	mov	r1, r3
 8001cd4:	4b1a      	ldr	r3, [pc, #104]	@ (8001d40 <mpu6050Init+0xf0>)
 8001cd6:	781b      	ldrb	r3, [r3, #0]
 8001cd8:	461a      	mov	r2, r3
 8001cda:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 8001cde:	9302      	str	r3, [sp, #8]
 8001ce0:	2301      	movs	r3, #1
 8001ce2:	9301      	str	r3, [sp, #4]
 8001ce4:	1dbb      	adds	r3, r7, #6
 8001ce6:	9300      	str	r3, [sp, #0]
 8001ce8:	2301      	movs	r3, #1
 8001cea:	4812      	ldr	r0, [pc, #72]	@ (8001d34 <mpu6050Init+0xe4>)
 8001cec:	f001 f8c4 	bl	8002e78 <HAL_I2C_Mem_Write>
        data = 0x00;
 8001cf0:	2300      	movs	r3, #0
 8001cf2:	71bb      	strb	r3, [r7, #6]
        HAL_I2C_Mem_Write(&hi2c1, mpu6050Addr, gyroConfigReg, 1, &data, 1, 1000);
 8001cf4:	4b0d      	ldr	r3, [pc, #52]	@ (8001d2c <mpu6050Init+0xdc>)
 8001cf6:	781b      	ldrb	r3, [r3, #0]
 8001cf8:	4619      	mov	r1, r3
 8001cfa:	4b12      	ldr	r3, [pc, #72]	@ (8001d44 <mpu6050Init+0xf4>)
 8001cfc:	781b      	ldrb	r3, [r3, #0]
 8001cfe:	461a      	mov	r2, r3
 8001d00:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 8001d04:	9302      	str	r3, [sp, #8]
 8001d06:	2301      	movs	r3, #1
 8001d08:	9301      	str	r3, [sp, #4]
 8001d0a:	1dbb      	adds	r3, r7, #6
 8001d0c:	9300      	str	r3, [sp, #0]
 8001d0e:	2301      	movs	r3, #1
 8001d10:	4808      	ldr	r0, [pc, #32]	@ (8001d34 <mpu6050Init+0xe4>)
 8001d12:	f001 f8b1 	bl	8002e78 <HAL_I2C_Mem_Write>
    } else {
        HAL_UART_Transmit(&huart2, msgErro, sizeof(msgErro), 100);
    }
}
 8001d16:	e005      	b.n	8001d24 <mpu6050Init+0xd4>
        HAL_UART_Transmit(&huart2, msgErro, sizeof(msgErro), 100);
 8001d18:	2364      	movs	r3, #100	@ 0x64
 8001d1a:	2221      	movs	r2, #33	@ 0x21
 8001d1c:	490a      	ldr	r1, [pc, #40]	@ (8001d48 <mpu6050Init+0xf8>)
 8001d1e:	480b      	ldr	r0, [pc, #44]	@ (8001d4c <mpu6050Init+0xfc>)
 8001d20:	f003 fa98 	bl	8005254 <HAL_UART_Transmit>
}
 8001d24:	bf00      	nop
 8001d26:	3708      	adds	r7, #8
 8001d28:	46bd      	mov	sp, r7
 8001d2a:	bd80      	pop	{r7, pc}
 8001d2c:	2000000a 	.word	0x2000000a
 8001d30:	0800920c 	.word	0x0800920c
 8001d34:	20000220 	.word	0x20000220
 8001d38:	0800920d 	.word	0x0800920d
 8001d3c:	0800920e 	.word	0x0800920e
 8001d40:	0800920f 	.word	0x0800920f
 8001d44:	08009210 	.word	0x08009210
 8001d48:	2000000c 	.word	0x2000000c
 8001d4c:	20000530 	.word	0x20000530

08001d50 <mpu6050ReadAccel>:

void mpu6050ReadAccel(leituraAcel *leitura) {
 8001d50:	b580      	push	{r7, lr}
 8001d52:	b088      	sub	sp, #32
 8001d54:	af04      	add	r7, sp, #16
 8001d56:	6078      	str	r0, [r7, #4]
    static const uint8_t accelXoutHReg = 0x3B;
    uint8_t recData[6];
    HAL_I2C_Mem_Read(&hi2c1, mpu6050Addr, accelXoutHReg, 1, recData, 6, 1000);
 8001d58:	4b19      	ldr	r3, [pc, #100]	@ (8001dc0 <mpu6050ReadAccel+0x70>)
 8001d5a:	781b      	ldrb	r3, [r3, #0]
 8001d5c:	4619      	mov	r1, r3
 8001d5e:	4b19      	ldr	r3, [pc, #100]	@ (8001dc4 <mpu6050ReadAccel+0x74>)
 8001d60:	781b      	ldrb	r3, [r3, #0]
 8001d62:	461a      	mov	r2, r3
 8001d64:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 8001d68:	9302      	str	r3, [sp, #8]
 8001d6a:	2306      	movs	r3, #6
 8001d6c:	9301      	str	r3, [sp, #4]
 8001d6e:	f107 0308 	add.w	r3, r7, #8
 8001d72:	9300      	str	r3, [sp, #0]
 8001d74:	2301      	movs	r3, #1
 8001d76:	4814      	ldr	r0, [pc, #80]	@ (8001dc8 <mpu6050ReadAccel+0x78>)
 8001d78:	f001 f978 	bl	800306c <HAL_I2C_Mem_Read>
    leitura->accelX = (int16_t)(recData[0] << 8 | recData[1]);
 8001d7c:	7a3b      	ldrb	r3, [r7, #8]
 8001d7e:	b21b      	sxth	r3, r3
 8001d80:	021b      	lsls	r3, r3, #8
 8001d82:	b21a      	sxth	r2, r3
 8001d84:	7a7b      	ldrb	r3, [r7, #9]
 8001d86:	b21b      	sxth	r3, r3
 8001d88:	4313      	orrs	r3, r2
 8001d8a:	b21a      	sxth	r2, r3
 8001d8c:	687b      	ldr	r3, [r7, #4]
 8001d8e:	801a      	strh	r2, [r3, #0]
    leitura->accelY = (int16_t)(recData[2] << 8 | recData[3]);
 8001d90:	7abb      	ldrb	r3, [r7, #10]
 8001d92:	b21b      	sxth	r3, r3
 8001d94:	021b      	lsls	r3, r3, #8
 8001d96:	b21a      	sxth	r2, r3
 8001d98:	7afb      	ldrb	r3, [r7, #11]
 8001d9a:	b21b      	sxth	r3, r3
 8001d9c:	4313      	orrs	r3, r2
 8001d9e:	b21a      	sxth	r2, r3
 8001da0:	687b      	ldr	r3, [r7, #4]
 8001da2:	805a      	strh	r2, [r3, #2]
    leitura->accelZ = (int16_t)(recData[4] << 8 | recData[5]);
 8001da4:	7b3b      	ldrb	r3, [r7, #12]
 8001da6:	b21b      	sxth	r3, r3
 8001da8:	021b      	lsls	r3, r3, #8
 8001daa:	b21a      	sxth	r2, r3
 8001dac:	7b7b      	ldrb	r3, [r7, #13]
 8001dae:	b21b      	sxth	r3, r3
 8001db0:	4313      	orrs	r3, r2
 8001db2:	b21a      	sxth	r2, r3
 8001db4:	687b      	ldr	r3, [r7, #4]
 8001db6:	809a      	strh	r2, [r3, #4]
}
 8001db8:	bf00      	nop
 8001dba:	3710      	adds	r7, #16
 8001dbc:	46bd      	mov	sp, r7
 8001dbe:	bd80      	pop	{r7, pc}
 8001dc0:	2000000a 	.word	0x2000000a
 8001dc4:	08009211 	.word	0x08009211
 8001dc8:	20000220 	.word	0x20000220

08001dcc <detectarMovimento>:
    leitura->gyroY = (int16_t) (recData[2] << 8 | recData [3]);
    leitura->gyroZ = (int16_t) (recData[4] << 8 | recData [5]);
}

Direcao detectarMovimento(float ax, float ay, float threshold)
{
 8001dcc:	b480      	push	{r7}
 8001dce:	b085      	sub	sp, #20
 8001dd0:	af00      	add	r7, sp, #0
 8001dd2:	ed87 0a03 	vstr	s0, [r7, #12]
 8001dd6:	edc7 0a02 	vstr	s1, [r7, #8]
 8001dda:	ed87 1a01 	vstr	s2, [r7, #4]
	if (ay < -threshold) return DIR_ESQUERDA;
 8001dde:	edd7 7a01 	vldr	s15, [r7, #4]
 8001de2:	eef1 7a67 	vneg.f32	s15, s15
 8001de6:	ed97 7a02 	vldr	s14, [r7, #8]
 8001dea:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8001dee:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001df2:	d501      	bpl.n	8001df8 <detectarMovimento+0x2c>
 8001df4:	2302      	movs	r3, #2
 8001df6:	e023      	b.n	8001e40 <detectarMovimento+0x74>
	if (ay > threshold) return DIR_DIREITA;
 8001df8:	ed97 7a02 	vldr	s14, [r7, #8]
 8001dfc:	edd7 7a01 	vldr	s15, [r7, #4]
 8001e00:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8001e04:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001e08:	dd01      	ble.n	8001e0e <detectarMovimento+0x42>
 8001e0a:	2303      	movs	r3, #3
 8001e0c:	e018      	b.n	8001e40 <detectarMovimento+0x74>
	if (ax > threshold) return DIR_BAIXO;
 8001e0e:	ed97 7a03 	vldr	s14, [r7, #12]
 8001e12:	edd7 7a01 	vldr	s15, [r7, #4]
 8001e16:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8001e1a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001e1e:	dd01      	ble.n	8001e24 <detectarMovimento+0x58>
 8001e20:	2301      	movs	r3, #1
 8001e22:	e00d      	b.n	8001e40 <detectarMovimento+0x74>
	if (ax < -threshold) return DIR_CIMA;
 8001e24:	edd7 7a01 	vldr	s15, [r7, #4]
 8001e28:	eef1 7a67 	vneg.f32	s15, s15
 8001e2c:	ed97 7a03 	vldr	s14, [r7, #12]
 8001e30:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8001e34:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001e38:	d501      	bpl.n	8001e3e <detectarMovimento+0x72>
 8001e3a:	2300      	movs	r3, #0
 8001e3c:	e000      	b.n	8001e40 <detectarMovimento+0x74>
	return DIR_NEUTRO;
 8001e3e:	2304      	movs	r3, #4
}
 8001e40:	4618      	mov	r0, r3
 8001e42:	3714      	adds	r7, #20
 8001e44:	46bd      	mov	sp, r7
 8001e46:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001e4a:	4770      	bx	lr

08001e4c <MX_SPI2_Init>:

SPI_HandleTypeDef hspi2;

/* SPI2 init function */
void MX_SPI2_Init(void)
{
 8001e4c:	b580      	push	{r7, lr}
 8001e4e:	af00      	add	r7, sp, #0
  /* USER CODE END SPI2_Init 0 */

  /* USER CODE BEGIN SPI2_Init 1 */

  /* USER CODE END SPI2_Init 1 */
  hspi2.Instance = SPI2;
 8001e50:	4b17      	ldr	r3, [pc, #92]	@ (8001eb0 <MX_SPI2_Init+0x64>)
 8001e52:	4a18      	ldr	r2, [pc, #96]	@ (8001eb4 <MX_SPI2_Init+0x68>)
 8001e54:	601a      	str	r2, [r3, #0]
  hspi2.Init.Mode = SPI_MODE_MASTER;
 8001e56:	4b16      	ldr	r3, [pc, #88]	@ (8001eb0 <MX_SPI2_Init+0x64>)
 8001e58:	f44f 7282 	mov.w	r2, #260	@ 0x104
 8001e5c:	605a      	str	r2, [r3, #4]
  hspi2.Init.Direction = SPI_DIRECTION_2LINES;
 8001e5e:	4b14      	ldr	r3, [pc, #80]	@ (8001eb0 <MX_SPI2_Init+0x64>)
 8001e60:	2200      	movs	r2, #0
 8001e62:	609a      	str	r2, [r3, #8]
  hspi2.Init.DataSize = SPI_DATASIZE_8BIT;
 8001e64:	4b12      	ldr	r3, [pc, #72]	@ (8001eb0 <MX_SPI2_Init+0x64>)
 8001e66:	2200      	movs	r2, #0
 8001e68:	60da      	str	r2, [r3, #12]
  hspi2.Init.CLKPolarity = SPI_POLARITY_LOW;
 8001e6a:	4b11      	ldr	r3, [pc, #68]	@ (8001eb0 <MX_SPI2_Init+0x64>)
 8001e6c:	2200      	movs	r2, #0
 8001e6e:	611a      	str	r2, [r3, #16]
  hspi2.Init.CLKPhase = SPI_PHASE_1EDGE;
 8001e70:	4b0f      	ldr	r3, [pc, #60]	@ (8001eb0 <MX_SPI2_Init+0x64>)
 8001e72:	2200      	movs	r2, #0
 8001e74:	615a      	str	r2, [r3, #20]
  hspi2.Init.NSS = SPI_NSS_SOFT;
 8001e76:	4b0e      	ldr	r3, [pc, #56]	@ (8001eb0 <MX_SPI2_Init+0x64>)
 8001e78:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8001e7c:	619a      	str	r2, [r3, #24]
  hspi2.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_32;
 8001e7e:	4b0c      	ldr	r3, [pc, #48]	@ (8001eb0 <MX_SPI2_Init+0x64>)
 8001e80:	2220      	movs	r2, #32
 8001e82:	61da      	str	r2, [r3, #28]
  hspi2.Init.FirstBit = SPI_FIRSTBIT_MSB;
 8001e84:	4b0a      	ldr	r3, [pc, #40]	@ (8001eb0 <MX_SPI2_Init+0x64>)
 8001e86:	2200      	movs	r2, #0
 8001e88:	621a      	str	r2, [r3, #32]
  hspi2.Init.TIMode = SPI_TIMODE_DISABLE;
 8001e8a:	4b09      	ldr	r3, [pc, #36]	@ (8001eb0 <MX_SPI2_Init+0x64>)
 8001e8c:	2200      	movs	r2, #0
 8001e8e:	625a      	str	r2, [r3, #36]	@ 0x24
  hspi2.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8001e90:	4b07      	ldr	r3, [pc, #28]	@ (8001eb0 <MX_SPI2_Init+0x64>)
 8001e92:	2200      	movs	r2, #0
 8001e94:	629a      	str	r2, [r3, #40]	@ 0x28
  hspi2.Init.CRCPolynomial = 10;
 8001e96:	4b06      	ldr	r3, [pc, #24]	@ (8001eb0 <MX_SPI2_Init+0x64>)
 8001e98:	220a      	movs	r2, #10
 8001e9a:	62da      	str	r2, [r3, #44]	@ 0x2c
  if (HAL_SPI_Init(&hspi2) != HAL_OK)
 8001e9c:	4804      	ldr	r0, [pc, #16]	@ (8001eb0 <MX_SPI2_Init+0x64>)
 8001e9e:	f002 fcb3 	bl	8004808 <HAL_SPI_Init>
 8001ea2:	4603      	mov	r3, r0
 8001ea4:	2b00      	cmp	r3, #0
 8001ea6:	d001      	beq.n	8001eac <MX_SPI2_Init+0x60>
  {
    Error_Handler();
 8001ea8:	f7ff fecc 	bl	8001c44 <Error_Handler>
  }
  /* USER CODE BEGIN SPI2_Init 2 */

  /* USER CODE END SPI2_Init 2 */

}
 8001eac:	bf00      	nop
 8001eae:	bd80      	pop	{r7, pc}
 8001eb0:	2000048c 	.word	0x2000048c
 8001eb4:	40003800 	.word	0x40003800

08001eb8 <HAL_SPI_MspInit>:

void HAL_SPI_MspInit(SPI_HandleTypeDef* spiHandle)
{
 8001eb8:	b580      	push	{r7, lr}
 8001eba:	b08a      	sub	sp, #40	@ 0x28
 8001ebc:	af00      	add	r7, sp, #0
 8001ebe:	6078      	str	r0, [r7, #4]

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001ec0:	f107 0314 	add.w	r3, r7, #20
 8001ec4:	2200      	movs	r2, #0
 8001ec6:	601a      	str	r2, [r3, #0]
 8001ec8:	605a      	str	r2, [r3, #4]
 8001eca:	609a      	str	r2, [r3, #8]
 8001ecc:	60da      	str	r2, [r3, #12]
 8001ece:	611a      	str	r2, [r3, #16]
  if(spiHandle->Instance==SPI2)
 8001ed0:	687b      	ldr	r3, [r7, #4]
 8001ed2:	681b      	ldr	r3, [r3, #0]
 8001ed4:	4a28      	ldr	r2, [pc, #160]	@ (8001f78 <HAL_SPI_MspInit+0xc0>)
 8001ed6:	4293      	cmp	r3, r2
 8001ed8:	d14a      	bne.n	8001f70 <HAL_SPI_MspInit+0xb8>
  {
  /* USER CODE BEGIN SPI2_MspInit 0 */

  /* USER CODE END SPI2_MspInit 0 */
    /* SPI2 clock enable */
    __HAL_RCC_SPI2_CLK_ENABLE();
 8001eda:	2300      	movs	r3, #0
 8001edc:	613b      	str	r3, [r7, #16]
 8001ede:	4b27      	ldr	r3, [pc, #156]	@ (8001f7c <HAL_SPI_MspInit+0xc4>)
 8001ee0:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001ee2:	4a26      	ldr	r2, [pc, #152]	@ (8001f7c <HAL_SPI_MspInit+0xc4>)
 8001ee4:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8001ee8:	6413      	str	r3, [r2, #64]	@ 0x40
 8001eea:	4b24      	ldr	r3, [pc, #144]	@ (8001f7c <HAL_SPI_MspInit+0xc4>)
 8001eec:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001eee:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 8001ef2:	613b      	str	r3, [r7, #16]
 8001ef4:	693b      	ldr	r3, [r7, #16]

    __HAL_RCC_GPIOC_CLK_ENABLE();
 8001ef6:	2300      	movs	r3, #0
 8001ef8:	60fb      	str	r3, [r7, #12]
 8001efa:	4b20      	ldr	r3, [pc, #128]	@ (8001f7c <HAL_SPI_MspInit+0xc4>)
 8001efc:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001efe:	4a1f      	ldr	r2, [pc, #124]	@ (8001f7c <HAL_SPI_MspInit+0xc4>)
 8001f00:	f043 0304 	orr.w	r3, r3, #4
 8001f04:	6313      	str	r3, [r2, #48]	@ 0x30
 8001f06:	4b1d      	ldr	r3, [pc, #116]	@ (8001f7c <HAL_SPI_MspInit+0xc4>)
 8001f08:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001f0a:	f003 0304 	and.w	r3, r3, #4
 8001f0e:	60fb      	str	r3, [r7, #12]
 8001f10:	68fb      	ldr	r3, [r7, #12]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8001f12:	2300      	movs	r3, #0
 8001f14:	60bb      	str	r3, [r7, #8]
 8001f16:	4b19      	ldr	r3, [pc, #100]	@ (8001f7c <HAL_SPI_MspInit+0xc4>)
 8001f18:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001f1a:	4a18      	ldr	r2, [pc, #96]	@ (8001f7c <HAL_SPI_MspInit+0xc4>)
 8001f1c:	f043 0302 	orr.w	r3, r3, #2
 8001f20:	6313      	str	r3, [r2, #48]	@ 0x30
 8001f22:	4b16      	ldr	r3, [pc, #88]	@ (8001f7c <HAL_SPI_MspInit+0xc4>)
 8001f24:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001f26:	f003 0302 	and.w	r3, r3, #2
 8001f2a:	60bb      	str	r3, [r7, #8]
 8001f2c:	68bb      	ldr	r3, [r7, #8]
    /**SPI2 GPIO Configuration
    PC2     ------> SPI2_MISO
    PB13     ------> SPI2_SCK
    PB15     ------> SPI2_MOSI
    */
    GPIO_InitStruct.Pin = GPIO_PIN_2;
 8001f2e:	2304      	movs	r3, #4
 8001f30:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001f32:	2302      	movs	r3, #2
 8001f34:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001f36:	2300      	movs	r3, #0
 8001f38:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001f3a:	2303      	movs	r3, #3
 8001f3c:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI2;
 8001f3e:	2305      	movs	r3, #5
 8001f40:	627b      	str	r3, [r7, #36]	@ 0x24
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001f42:	f107 0314 	add.w	r3, r7, #20
 8001f46:	4619      	mov	r1, r3
 8001f48:	480d      	ldr	r0, [pc, #52]	@ (8001f80 <HAL_SPI_MspInit+0xc8>)
 8001f4a:	f000 fc8b 	bl	8002864 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_13|GPIO_PIN_15;
 8001f4e:	f44f 4320 	mov.w	r3, #40960	@ 0xa000
 8001f52:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001f54:	2302      	movs	r3, #2
 8001f56:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001f58:	2300      	movs	r3, #0
 8001f5a:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001f5c:	2303      	movs	r3, #3
 8001f5e:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI2;
 8001f60:	2305      	movs	r3, #5
 8001f62:	627b      	str	r3, [r7, #36]	@ 0x24
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001f64:	f107 0314 	add.w	r3, r7, #20
 8001f68:	4619      	mov	r1, r3
 8001f6a:	4806      	ldr	r0, [pc, #24]	@ (8001f84 <HAL_SPI_MspInit+0xcc>)
 8001f6c:	f000 fc7a 	bl	8002864 <HAL_GPIO_Init>

  /* USER CODE BEGIN SPI2_MspInit 1 */

  /* USER CODE END SPI2_MspInit 1 */
  }
}
 8001f70:	bf00      	nop
 8001f72:	3728      	adds	r7, #40	@ 0x28
 8001f74:	46bd      	mov	sp, r7
 8001f76:	bd80      	pop	{r7, pc}
 8001f78:	40003800 	.word	0x40003800
 8001f7c:	40023800 	.word	0x40023800
 8001f80:	40020800 	.word	0x40020800
 8001f84:	40020400 	.word	0x40020400

08001f88 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8001f88:	b580      	push	{r7, lr}
 8001f8a:	b082      	sub	sp, #8
 8001f8c:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8001f8e:	2300      	movs	r3, #0
 8001f90:	607b      	str	r3, [r7, #4]
 8001f92:	4b10      	ldr	r3, [pc, #64]	@ (8001fd4 <HAL_MspInit+0x4c>)
 8001f94:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8001f96:	4a0f      	ldr	r2, [pc, #60]	@ (8001fd4 <HAL_MspInit+0x4c>)
 8001f98:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8001f9c:	6453      	str	r3, [r2, #68]	@ 0x44
 8001f9e:	4b0d      	ldr	r3, [pc, #52]	@ (8001fd4 <HAL_MspInit+0x4c>)
 8001fa0:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8001fa2:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 8001fa6:	607b      	str	r3, [r7, #4]
 8001fa8:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_PWR_CLK_ENABLE();
 8001faa:	2300      	movs	r3, #0
 8001fac:	603b      	str	r3, [r7, #0]
 8001fae:	4b09      	ldr	r3, [pc, #36]	@ (8001fd4 <HAL_MspInit+0x4c>)
 8001fb0:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001fb2:	4a08      	ldr	r2, [pc, #32]	@ (8001fd4 <HAL_MspInit+0x4c>)
 8001fb4:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8001fb8:	6413      	str	r3, [r2, #64]	@ 0x40
 8001fba:	4b06      	ldr	r3, [pc, #24]	@ (8001fd4 <HAL_MspInit+0x4c>)
 8001fbc:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001fbe:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8001fc2:	603b      	str	r3, [r7, #0]
 8001fc4:	683b      	ldr	r3, [r7, #0]

  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_0);
 8001fc6:	2007      	movs	r0, #7
 8001fc8:	f000 fb78 	bl	80026bc <HAL_NVIC_SetPriorityGrouping>
  /* System interrupt init*/

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8001fcc:	bf00      	nop
 8001fce:	3708      	adds	r7, #8
 8001fd0:	46bd      	mov	sp, r7
 8001fd2:	bd80      	pop	{r7, pc}
 8001fd4:	40023800 	.word	0x40023800

08001fd8 <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 8001fd8:	b480      	push	{r7}
 8001fda:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
   while (1)
 8001fdc:	bf00      	nop
 8001fde:	e7fd      	b.n	8001fdc <NMI_Handler+0x4>

08001fe0 <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 8001fe0:	b480      	push	{r7}
 8001fe2:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8001fe4:	bf00      	nop
 8001fe6:	e7fd      	b.n	8001fe4 <HardFault_Handler+0x4>

08001fe8 <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 8001fe8:	b480      	push	{r7}
 8001fea:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8001fec:	bf00      	nop
 8001fee:	e7fd      	b.n	8001fec <MemManage_Handler+0x4>

08001ff0 <BusFault_Handler>:

/**
  * @brief This function handles Pre-fetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 8001ff0:	b480      	push	{r7}
 8001ff2:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8001ff4:	bf00      	nop
 8001ff6:	e7fd      	b.n	8001ff4 <BusFault_Handler+0x4>

08001ff8 <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 8001ff8:	b480      	push	{r7}
 8001ffa:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8001ffc:	bf00      	nop
 8001ffe:	e7fd      	b.n	8001ffc <UsageFault_Handler+0x4>

08002000 <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 8002000:	b480      	push	{r7}
 8002002:	af00      	add	r7, sp, #0

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 8002004:	bf00      	nop
 8002006:	46bd      	mov	sp, r7
 8002008:	f85d 7b04 	ldr.w	r7, [sp], #4
 800200c:	4770      	bx	lr

0800200e <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 800200e:	b480      	push	{r7}
 8002010:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 8002012:	bf00      	nop
 8002014:	46bd      	mov	sp, r7
 8002016:	f85d 7b04 	ldr.w	r7, [sp], #4
 800201a:	4770      	bx	lr

0800201c <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 800201c:	b480      	push	{r7}
 800201e:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 8002020:	bf00      	nop
 8002022:	46bd      	mov	sp, r7
 8002024:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002028:	4770      	bx	lr

0800202a <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 800202a:	b580      	push	{r7, lr}
 800202c:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 800202e:	f000 fa31 	bl	8002494 <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 8002032:	bf00      	nop
 8002034:	bd80      	pop	{r7, pc}
	...

08002038 <TIM1_UP_TIM10_IRQHandler>:

/**
  * @brief This function handles TIM1 update interrupt and TIM10 global interrupt.
  */
void TIM1_UP_TIM10_IRQHandler(void)
{
 8002038:	b580      	push	{r7, lr}
 800203a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN TIM1_UP_TIM10_IRQn 0 */

  /* USER CODE END TIM1_UP_TIM10_IRQn 0 */
  HAL_TIM_IRQHandler(&htim10);
 800203c:	4802      	ldr	r0, [pc, #8]	@ (8002048 <TIM1_UP_TIM10_IRQHandler+0x10>)
 800203e:	f002 fedc 	bl	8004dfa <HAL_TIM_IRQHandler>
  /* USER CODE BEGIN TIM1_UP_TIM10_IRQn 1 */

  /* USER CODE END TIM1_UP_TIM10_IRQn 1 */
}
 8002042:	bf00      	nop
 8002044:	bd80      	pop	{r7, pc}
 8002046:	bf00      	nop
 8002048:	200004e8 	.word	0x200004e8

0800204c <USART2_IRQHandler>:

/**
  * @brief This function handles USART2 global interrupt.
  */
void USART2_IRQHandler(void)
{
 800204c:	b580      	push	{r7, lr}
 800204e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN USART2_IRQn 0 */

  /* USER CODE END USART2_IRQn 0 */
  HAL_UART_IRQHandler(&huart2);
 8002050:	4802      	ldr	r0, [pc, #8]	@ (800205c <USART2_IRQHandler+0x10>)
 8002052:	f003 f98b 	bl	800536c <HAL_UART_IRQHandler>
  /* USER CODE BEGIN USART2_IRQn 1 */

  /* USER CODE END USART2_IRQn 1 */
}
 8002056:	bf00      	nop
 8002058:	bd80      	pop	{r7, pc}
 800205a:	bf00      	nop
 800205c:	20000530 	.word	0x20000530

08002060 <_getpid>:
void initialise_monitor_handles()
{
}

int _getpid(void)
{
 8002060:	b480      	push	{r7}
 8002062:	af00      	add	r7, sp, #0
  return 1;
 8002064:	2301      	movs	r3, #1
}
 8002066:	4618      	mov	r0, r3
 8002068:	46bd      	mov	sp, r7
 800206a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800206e:	4770      	bx	lr

08002070 <_kill>:

int _kill(int pid, int sig)
{
 8002070:	b580      	push	{r7, lr}
 8002072:	b082      	sub	sp, #8
 8002074:	af00      	add	r7, sp, #0
 8002076:	6078      	str	r0, [r7, #4]
 8002078:	6039      	str	r1, [r7, #0]
  (void)pid;
  (void)sig;
  errno = EINVAL;
 800207a:	f004 ff03 	bl	8006e84 <__errno>
 800207e:	4603      	mov	r3, r0
 8002080:	2216      	movs	r2, #22
 8002082:	601a      	str	r2, [r3, #0]
  return -1;
 8002084:	f04f 33ff 	mov.w	r3, #4294967295
}
 8002088:	4618      	mov	r0, r3
 800208a:	3708      	adds	r7, #8
 800208c:	46bd      	mov	sp, r7
 800208e:	bd80      	pop	{r7, pc}

08002090 <_exit>:

void _exit (int status)
{
 8002090:	b580      	push	{r7, lr}
 8002092:	b082      	sub	sp, #8
 8002094:	af00      	add	r7, sp, #0
 8002096:	6078      	str	r0, [r7, #4]
  _kill(status, -1);
 8002098:	f04f 31ff 	mov.w	r1, #4294967295
 800209c:	6878      	ldr	r0, [r7, #4]
 800209e:	f7ff ffe7 	bl	8002070 <_kill>
  while (1) {}    /* Make sure we hang here */
 80020a2:	bf00      	nop
 80020a4:	e7fd      	b.n	80020a2 <_exit+0x12>

080020a6 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 80020a6:	b580      	push	{r7, lr}
 80020a8:	b086      	sub	sp, #24
 80020aa:	af00      	add	r7, sp, #0
 80020ac:	60f8      	str	r0, [r7, #12]
 80020ae:	60b9      	str	r1, [r7, #8]
 80020b0:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80020b2:	2300      	movs	r3, #0
 80020b4:	617b      	str	r3, [r7, #20]
 80020b6:	e00a      	b.n	80020ce <_read+0x28>
  {
    *ptr++ = __io_getchar();
 80020b8:	f3af 8000 	nop.w
 80020bc:	4601      	mov	r1, r0
 80020be:	68bb      	ldr	r3, [r7, #8]
 80020c0:	1c5a      	adds	r2, r3, #1
 80020c2:	60ba      	str	r2, [r7, #8]
 80020c4:	b2ca      	uxtb	r2, r1
 80020c6:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80020c8:	697b      	ldr	r3, [r7, #20]
 80020ca:	3301      	adds	r3, #1
 80020cc:	617b      	str	r3, [r7, #20]
 80020ce:	697a      	ldr	r2, [r7, #20]
 80020d0:	687b      	ldr	r3, [r7, #4]
 80020d2:	429a      	cmp	r2, r3
 80020d4:	dbf0      	blt.n	80020b8 <_read+0x12>
  }

  return len;
 80020d6:	687b      	ldr	r3, [r7, #4]
}
 80020d8:	4618      	mov	r0, r3
 80020da:	3718      	adds	r7, #24
 80020dc:	46bd      	mov	sp, r7
 80020de:	bd80      	pop	{r7, pc}

080020e0 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 80020e0:	b580      	push	{r7, lr}
 80020e2:	b086      	sub	sp, #24
 80020e4:	af00      	add	r7, sp, #0
 80020e6:	60f8      	str	r0, [r7, #12]
 80020e8:	60b9      	str	r1, [r7, #8]
 80020ea:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80020ec:	2300      	movs	r3, #0
 80020ee:	617b      	str	r3, [r7, #20]
 80020f0:	e009      	b.n	8002106 <_write+0x26>
  {
    __io_putchar(*ptr++);
 80020f2:	68bb      	ldr	r3, [r7, #8]
 80020f4:	1c5a      	adds	r2, r3, #1
 80020f6:	60ba      	str	r2, [r7, #8]
 80020f8:	781b      	ldrb	r3, [r3, #0]
 80020fa:	4618      	mov	r0, r3
 80020fc:	f3af 8000 	nop.w
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002100:	697b      	ldr	r3, [r7, #20]
 8002102:	3301      	adds	r3, #1
 8002104:	617b      	str	r3, [r7, #20]
 8002106:	697a      	ldr	r2, [r7, #20]
 8002108:	687b      	ldr	r3, [r7, #4]
 800210a:	429a      	cmp	r2, r3
 800210c:	dbf1      	blt.n	80020f2 <_write+0x12>
  }
  return len;
 800210e:	687b      	ldr	r3, [r7, #4]
}
 8002110:	4618      	mov	r0, r3
 8002112:	3718      	adds	r7, #24
 8002114:	46bd      	mov	sp, r7
 8002116:	bd80      	pop	{r7, pc}

08002118 <_close>:

int _close(int file)
{
 8002118:	b480      	push	{r7}
 800211a:	b083      	sub	sp, #12
 800211c:	af00      	add	r7, sp, #0
 800211e:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 8002120:	f04f 33ff 	mov.w	r3, #4294967295
}
 8002124:	4618      	mov	r0, r3
 8002126:	370c      	adds	r7, #12
 8002128:	46bd      	mov	sp, r7
 800212a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800212e:	4770      	bx	lr

08002130 <_fstat>:


int _fstat(int file, struct stat *st)
{
 8002130:	b480      	push	{r7}
 8002132:	b083      	sub	sp, #12
 8002134:	af00      	add	r7, sp, #0
 8002136:	6078      	str	r0, [r7, #4]
 8002138:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 800213a:	683b      	ldr	r3, [r7, #0]
 800213c:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 8002140:	605a      	str	r2, [r3, #4]
  return 0;
 8002142:	2300      	movs	r3, #0
}
 8002144:	4618      	mov	r0, r3
 8002146:	370c      	adds	r7, #12
 8002148:	46bd      	mov	sp, r7
 800214a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800214e:	4770      	bx	lr

08002150 <_isatty>:

int _isatty(int file)
{
 8002150:	b480      	push	{r7}
 8002152:	b083      	sub	sp, #12
 8002154:	af00      	add	r7, sp, #0
 8002156:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 8002158:	2301      	movs	r3, #1
}
 800215a:	4618      	mov	r0, r3
 800215c:	370c      	adds	r7, #12
 800215e:	46bd      	mov	sp, r7
 8002160:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002164:	4770      	bx	lr

08002166 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 8002166:	b480      	push	{r7}
 8002168:	b085      	sub	sp, #20
 800216a:	af00      	add	r7, sp, #0
 800216c:	60f8      	str	r0, [r7, #12]
 800216e:	60b9      	str	r1, [r7, #8]
 8002170:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 8002172:	2300      	movs	r3, #0
}
 8002174:	4618      	mov	r0, r3
 8002176:	3714      	adds	r7, #20
 8002178:	46bd      	mov	sp, r7
 800217a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800217e:	4770      	bx	lr

08002180 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 8002180:	b580      	push	{r7, lr}
 8002182:	b086      	sub	sp, #24
 8002184:	af00      	add	r7, sp, #0
 8002186:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8002188:	4a14      	ldr	r2, [pc, #80]	@ (80021dc <_sbrk+0x5c>)
 800218a:	4b15      	ldr	r3, [pc, #84]	@ (80021e0 <_sbrk+0x60>)
 800218c:	1ad3      	subs	r3, r2, r3
 800218e:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 8002190:	697b      	ldr	r3, [r7, #20]
 8002192:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8002194:	4b13      	ldr	r3, [pc, #76]	@ (80021e4 <_sbrk+0x64>)
 8002196:	681b      	ldr	r3, [r3, #0]
 8002198:	2b00      	cmp	r3, #0
 800219a:	d102      	bne.n	80021a2 <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 800219c:	4b11      	ldr	r3, [pc, #68]	@ (80021e4 <_sbrk+0x64>)
 800219e:	4a12      	ldr	r2, [pc, #72]	@ (80021e8 <_sbrk+0x68>)
 80021a0:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 80021a2:	4b10      	ldr	r3, [pc, #64]	@ (80021e4 <_sbrk+0x64>)
 80021a4:	681a      	ldr	r2, [r3, #0]
 80021a6:	687b      	ldr	r3, [r7, #4]
 80021a8:	4413      	add	r3, r2
 80021aa:	693a      	ldr	r2, [r7, #16]
 80021ac:	429a      	cmp	r2, r3
 80021ae:	d207      	bcs.n	80021c0 <_sbrk+0x40>
  {
    errno = ENOMEM;
 80021b0:	f004 fe68 	bl	8006e84 <__errno>
 80021b4:	4603      	mov	r3, r0
 80021b6:	220c      	movs	r2, #12
 80021b8:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 80021ba:	f04f 33ff 	mov.w	r3, #4294967295
 80021be:	e009      	b.n	80021d4 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 80021c0:	4b08      	ldr	r3, [pc, #32]	@ (80021e4 <_sbrk+0x64>)
 80021c2:	681b      	ldr	r3, [r3, #0]
 80021c4:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 80021c6:	4b07      	ldr	r3, [pc, #28]	@ (80021e4 <_sbrk+0x64>)
 80021c8:	681a      	ldr	r2, [r3, #0]
 80021ca:	687b      	ldr	r3, [r7, #4]
 80021cc:	4413      	add	r3, r2
 80021ce:	4a05      	ldr	r2, [pc, #20]	@ (80021e4 <_sbrk+0x64>)
 80021d0:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 80021d2:	68fb      	ldr	r3, [r7, #12]
}
 80021d4:	4618      	mov	r0, r3
 80021d6:	3718      	adds	r7, #24
 80021d8:	46bd      	mov	sp, r7
 80021da:	bd80      	pop	{r7, pc}
 80021dc:	20020000 	.word	0x20020000
 80021e0:	00000400 	.word	0x00000400
 80021e4:	200004e4 	.word	0x200004e4
 80021e8:	200006c8 	.word	0x200006c8

080021ec <SystemInit>:
  *         configuration.
  * @param  None
  * @retval None
  */
void SystemInit(void)
{
 80021ec:	b480      	push	{r7}
 80021ee:	af00      	add	r7, sp, #0
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 80021f0:	4b06      	ldr	r3, [pc, #24]	@ (800220c <SystemInit+0x20>)
 80021f2:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 80021f6:	4a05      	ldr	r2, [pc, #20]	@ (800220c <SystemInit+0x20>)
 80021f8:	f443 0370 	orr.w	r3, r3, #15728640	@ 0xf00000
 80021fc:	f8c2 3088 	str.w	r3, [r2, #136]	@ 0x88

  /* Configure the Vector Table location -------------------------------------*/
#if defined(USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#endif /* USER_VECT_TAB_ADDRESS */
}
 8002200:	bf00      	nop
 8002202:	46bd      	mov	sp, r7
 8002204:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002208:	4770      	bx	lr
 800220a:	bf00      	nop
 800220c:	e000ed00 	.word	0xe000ed00

08002210 <MX_TIM10_Init>:

TIM_HandleTypeDef htim10;

/* TIM10 init function */
void MX_TIM10_Init(void)
{
 8002210:	b580      	push	{r7, lr}
 8002212:	af00      	add	r7, sp, #0
  /* USER CODE END TIM10_Init 0 */

  /* USER CODE BEGIN TIM10_Init 1 */

  /* USER CODE END TIM10_Init 1 */
  htim10.Instance = TIM10;
 8002214:	4b0e      	ldr	r3, [pc, #56]	@ (8002250 <MX_TIM10_Init+0x40>)
 8002216:	4a0f      	ldr	r2, [pc, #60]	@ (8002254 <MX_TIM10_Init+0x44>)
 8002218:	601a      	str	r2, [r3, #0]
  htim10.Init.Prescaler = 2499;
 800221a:	4b0d      	ldr	r3, [pc, #52]	@ (8002250 <MX_TIM10_Init+0x40>)
 800221c:	f640 12c3 	movw	r2, #2499	@ 0x9c3
 8002220:	605a      	str	r2, [r3, #4]
  htim10.Init.CounterMode = TIM_COUNTERMODE_UP;
 8002222:	4b0b      	ldr	r3, [pc, #44]	@ (8002250 <MX_TIM10_Init+0x40>)
 8002224:	2200      	movs	r2, #0
 8002226:	609a      	str	r2, [r3, #8]
  htim10.Init.Period = 8399;
 8002228:	4b09      	ldr	r3, [pc, #36]	@ (8002250 <MX_TIM10_Init+0x40>)
 800222a:	f242 02cf 	movw	r2, #8399	@ 0x20cf
 800222e:	60da      	str	r2, [r3, #12]
  htim10.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8002230:	4b07      	ldr	r3, [pc, #28]	@ (8002250 <MX_TIM10_Init+0x40>)
 8002232:	2200      	movs	r2, #0
 8002234:	611a      	str	r2, [r3, #16]
  htim10.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8002236:	4b06      	ldr	r3, [pc, #24]	@ (8002250 <MX_TIM10_Init+0x40>)
 8002238:	2200      	movs	r2, #0
 800223a:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim10) != HAL_OK)
 800223c:	4804      	ldr	r0, [pc, #16]	@ (8002250 <MX_TIM10_Init+0x40>)
 800223e:	f002 fd8d 	bl	8004d5c <HAL_TIM_Base_Init>
 8002242:	4603      	mov	r3, r0
 8002244:	2b00      	cmp	r3, #0
 8002246:	d001      	beq.n	800224c <MX_TIM10_Init+0x3c>
  {
    Error_Handler();
 8002248:	f7ff fcfc 	bl	8001c44 <Error_Handler>
  }
  /* USER CODE BEGIN TIM10_Init 2 */

  /* USER CODE END TIM10_Init 2 */

}
 800224c:	bf00      	nop
 800224e:	bd80      	pop	{r7, pc}
 8002250:	200004e8 	.word	0x200004e8
 8002254:	40014400 	.word	0x40014400

08002258 <HAL_TIM_Base_MspInit>:

void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* tim_baseHandle)
{
 8002258:	b580      	push	{r7, lr}
 800225a:	b084      	sub	sp, #16
 800225c:	af00      	add	r7, sp, #0
 800225e:	6078      	str	r0, [r7, #4]

  if(tim_baseHandle->Instance==TIM10)
 8002260:	687b      	ldr	r3, [r7, #4]
 8002262:	681b      	ldr	r3, [r3, #0]
 8002264:	4a0e      	ldr	r2, [pc, #56]	@ (80022a0 <HAL_TIM_Base_MspInit+0x48>)
 8002266:	4293      	cmp	r3, r2
 8002268:	d115      	bne.n	8002296 <HAL_TIM_Base_MspInit+0x3e>
  {
  /* USER CODE BEGIN TIM10_MspInit 0 */

  /* USER CODE END TIM10_MspInit 0 */
    /* TIM10 clock enable */
    __HAL_RCC_TIM10_CLK_ENABLE();
 800226a:	2300      	movs	r3, #0
 800226c:	60fb      	str	r3, [r7, #12]
 800226e:	4b0d      	ldr	r3, [pc, #52]	@ (80022a4 <HAL_TIM_Base_MspInit+0x4c>)
 8002270:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8002272:	4a0c      	ldr	r2, [pc, #48]	@ (80022a4 <HAL_TIM_Base_MspInit+0x4c>)
 8002274:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8002278:	6453      	str	r3, [r2, #68]	@ 0x44
 800227a:	4b0a      	ldr	r3, [pc, #40]	@ (80022a4 <HAL_TIM_Base_MspInit+0x4c>)
 800227c:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800227e:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8002282:	60fb      	str	r3, [r7, #12]
 8002284:	68fb      	ldr	r3, [r7, #12]

    /* TIM10 interrupt Init */
    HAL_NVIC_SetPriority(TIM1_UP_TIM10_IRQn, 0, 0);
 8002286:	2200      	movs	r2, #0
 8002288:	2100      	movs	r1, #0
 800228a:	2019      	movs	r0, #25
 800228c:	f000 fa21 	bl	80026d2 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM1_UP_TIM10_IRQn);
 8002290:	2019      	movs	r0, #25
 8002292:	f000 fa3a 	bl	800270a <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN TIM10_MspInit 1 */

  /* USER CODE END TIM10_MspInit 1 */
  }
}
 8002296:	bf00      	nop
 8002298:	3710      	adds	r7, #16
 800229a:	46bd      	mov	sp, r7
 800229c:	bd80      	pop	{r7, pc}
 800229e:	bf00      	nop
 80022a0:	40014400 	.word	0x40014400
 80022a4:	40023800 	.word	0x40023800

080022a8 <MX_USART2_UART_Init>:
UART_HandleTypeDef huart2;

/* USART2 init function */

void MX_USART2_UART_Init(void)
{
 80022a8:	b580      	push	{r7, lr}
 80022aa:	af00      	add	r7, sp, #0
  /* USER CODE END USART2_Init 0 */

  /* USER CODE BEGIN USART2_Init 1 */

  /* USER CODE END USART2_Init 1 */
  huart2.Instance = USART2;
 80022ac:	4b11      	ldr	r3, [pc, #68]	@ (80022f4 <MX_USART2_UART_Init+0x4c>)
 80022ae:	4a12      	ldr	r2, [pc, #72]	@ (80022f8 <MX_USART2_UART_Init+0x50>)
 80022b0:	601a      	str	r2, [r3, #0]
  huart2.Init.BaudRate = 115200;
 80022b2:	4b10      	ldr	r3, [pc, #64]	@ (80022f4 <MX_USART2_UART_Init+0x4c>)
 80022b4:	f44f 32e1 	mov.w	r2, #115200	@ 0x1c200
 80022b8:	605a      	str	r2, [r3, #4]
  huart2.Init.WordLength = UART_WORDLENGTH_8B;
 80022ba:	4b0e      	ldr	r3, [pc, #56]	@ (80022f4 <MX_USART2_UART_Init+0x4c>)
 80022bc:	2200      	movs	r2, #0
 80022be:	609a      	str	r2, [r3, #8]
  huart2.Init.StopBits = UART_STOPBITS_1;
 80022c0:	4b0c      	ldr	r3, [pc, #48]	@ (80022f4 <MX_USART2_UART_Init+0x4c>)
 80022c2:	2200      	movs	r2, #0
 80022c4:	60da      	str	r2, [r3, #12]
  huart2.Init.Parity = UART_PARITY_NONE;
 80022c6:	4b0b      	ldr	r3, [pc, #44]	@ (80022f4 <MX_USART2_UART_Init+0x4c>)
 80022c8:	2200      	movs	r2, #0
 80022ca:	611a      	str	r2, [r3, #16]
  huart2.Init.Mode = UART_MODE_TX_RX;
 80022cc:	4b09      	ldr	r3, [pc, #36]	@ (80022f4 <MX_USART2_UART_Init+0x4c>)
 80022ce:	220c      	movs	r2, #12
 80022d0:	615a      	str	r2, [r3, #20]
  huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 80022d2:	4b08      	ldr	r3, [pc, #32]	@ (80022f4 <MX_USART2_UART_Init+0x4c>)
 80022d4:	2200      	movs	r2, #0
 80022d6:	619a      	str	r2, [r3, #24]
  huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 80022d8:	4b06      	ldr	r3, [pc, #24]	@ (80022f4 <MX_USART2_UART_Init+0x4c>)
 80022da:	2200      	movs	r2, #0
 80022dc:	61da      	str	r2, [r3, #28]
  if (HAL_UART_Init(&huart2) != HAL_OK)
 80022de:	4805      	ldr	r0, [pc, #20]	@ (80022f4 <MX_USART2_UART_Init+0x4c>)
 80022e0:	f002 ff68 	bl	80051b4 <HAL_UART_Init>
 80022e4:	4603      	mov	r3, r0
 80022e6:	2b00      	cmp	r3, #0
 80022e8:	d001      	beq.n	80022ee <MX_USART2_UART_Init+0x46>
  {
    Error_Handler();
 80022ea:	f7ff fcab 	bl	8001c44 <Error_Handler>
  }
  /* USER CODE BEGIN USART2_Init 2 */

  /* USER CODE END USART2_Init 2 */

}
 80022ee:	bf00      	nop
 80022f0:	bd80      	pop	{r7, pc}
 80022f2:	bf00      	nop
 80022f4:	20000530 	.word	0x20000530
 80022f8:	40004400 	.word	0x40004400

080022fc <HAL_UART_MspInit>:

void HAL_UART_MspInit(UART_HandleTypeDef* uartHandle)
{
 80022fc:	b580      	push	{r7, lr}
 80022fe:	b08a      	sub	sp, #40	@ 0x28
 8002300:	af00      	add	r7, sp, #0
 8002302:	6078      	str	r0, [r7, #4]

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002304:	f107 0314 	add.w	r3, r7, #20
 8002308:	2200      	movs	r2, #0
 800230a:	601a      	str	r2, [r3, #0]
 800230c:	605a      	str	r2, [r3, #4]
 800230e:	609a      	str	r2, [r3, #8]
 8002310:	60da      	str	r2, [r3, #12]
 8002312:	611a      	str	r2, [r3, #16]
  if(uartHandle->Instance==USART2)
 8002314:	687b      	ldr	r3, [r7, #4]
 8002316:	681b      	ldr	r3, [r3, #0]
 8002318:	4a1d      	ldr	r2, [pc, #116]	@ (8002390 <HAL_UART_MspInit+0x94>)
 800231a:	4293      	cmp	r3, r2
 800231c:	d133      	bne.n	8002386 <HAL_UART_MspInit+0x8a>
  {
  /* USER CODE BEGIN USART2_MspInit 0 */

  /* USER CODE END USART2_MspInit 0 */
    /* USART2 clock enable */
    __HAL_RCC_USART2_CLK_ENABLE();
 800231e:	2300      	movs	r3, #0
 8002320:	613b      	str	r3, [r7, #16]
 8002322:	4b1c      	ldr	r3, [pc, #112]	@ (8002394 <HAL_UART_MspInit+0x98>)
 8002324:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002326:	4a1b      	ldr	r2, [pc, #108]	@ (8002394 <HAL_UART_MspInit+0x98>)
 8002328:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 800232c:	6413      	str	r3, [r2, #64]	@ 0x40
 800232e:	4b19      	ldr	r3, [pc, #100]	@ (8002394 <HAL_UART_MspInit+0x98>)
 8002330:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002332:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8002336:	613b      	str	r3, [r7, #16]
 8002338:	693b      	ldr	r3, [r7, #16]

    __HAL_RCC_GPIOA_CLK_ENABLE();
 800233a:	2300      	movs	r3, #0
 800233c:	60fb      	str	r3, [r7, #12]
 800233e:	4b15      	ldr	r3, [pc, #84]	@ (8002394 <HAL_UART_MspInit+0x98>)
 8002340:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002342:	4a14      	ldr	r2, [pc, #80]	@ (8002394 <HAL_UART_MspInit+0x98>)
 8002344:	f043 0301 	orr.w	r3, r3, #1
 8002348:	6313      	str	r3, [r2, #48]	@ 0x30
 800234a:	4b12      	ldr	r3, [pc, #72]	@ (8002394 <HAL_UART_MspInit+0x98>)
 800234c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800234e:	f003 0301 	and.w	r3, r3, #1
 8002352:	60fb      	str	r3, [r7, #12]
 8002354:	68fb      	ldr	r3, [r7, #12]
    /**USART2 GPIO Configuration
    PA2     ------> USART2_TX
    PA3     ------> USART2_RX
    */
    GPIO_InitStruct.Pin = USART_TX_Pin|USART_RX_Pin;
 8002356:	230c      	movs	r3, #12
 8002358:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800235a:	2302      	movs	r3, #2
 800235c:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 800235e:	2300      	movs	r3, #0
 8002360:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002362:	2303      	movs	r3, #3
 8002364:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF7_USART2;
 8002366:	2307      	movs	r3, #7
 8002368:	627b      	str	r3, [r7, #36]	@ 0x24
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800236a:	f107 0314 	add.w	r3, r7, #20
 800236e:	4619      	mov	r1, r3
 8002370:	4809      	ldr	r0, [pc, #36]	@ (8002398 <HAL_UART_MspInit+0x9c>)
 8002372:	f000 fa77 	bl	8002864 <HAL_GPIO_Init>

    /* USART2 interrupt Init */
    HAL_NVIC_SetPriority(USART2_IRQn, 0, 0);
 8002376:	2200      	movs	r2, #0
 8002378:	2100      	movs	r1, #0
 800237a:	2026      	movs	r0, #38	@ 0x26
 800237c:	f000 f9a9 	bl	80026d2 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(USART2_IRQn);
 8002380:	2026      	movs	r0, #38	@ 0x26
 8002382:	f000 f9c2 	bl	800270a <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN USART2_MspInit 1 */

  /* USER CODE END USART2_MspInit 1 */
  }
}
 8002386:	bf00      	nop
 8002388:	3728      	adds	r7, #40	@ 0x28
 800238a:	46bd      	mov	sp, r7
 800238c:	bd80      	pop	{r7, pc}
 800238e:	bf00      	nop
 8002390:	40004400 	.word	0x40004400
 8002394:	40023800 	.word	0x40023800
 8002398:	40020000 	.word	0x40020000

0800239c <Reset_Handler>:
 800239c:	f8df d034 	ldr.w	sp, [pc, #52]	@ 80023d4 <LoopFillZerobss+0xe>
 80023a0:	f7ff ff24 	bl	80021ec <SystemInit>
 80023a4:	480c      	ldr	r0, [pc, #48]	@ (80023d8 <LoopFillZerobss+0x12>)
 80023a6:	490d      	ldr	r1, [pc, #52]	@ (80023dc <LoopFillZerobss+0x16>)
 80023a8:	4a0d      	ldr	r2, [pc, #52]	@ (80023e0 <LoopFillZerobss+0x1a>)
 80023aa:	2300      	movs	r3, #0
 80023ac:	e002      	b.n	80023b4 <LoopCopyDataInit>

080023ae <CopyDataInit>:
 80023ae:	58d4      	ldr	r4, [r2, r3]
 80023b0:	50c4      	str	r4, [r0, r3]
 80023b2:	3304      	adds	r3, #4

080023b4 <LoopCopyDataInit>:
 80023b4:	18c4      	adds	r4, r0, r3
 80023b6:	428c      	cmp	r4, r1
 80023b8:	d3f9      	bcc.n	80023ae <CopyDataInit>
 80023ba:	4a0a      	ldr	r2, [pc, #40]	@ (80023e4 <LoopFillZerobss+0x1e>)
 80023bc:	4c0a      	ldr	r4, [pc, #40]	@ (80023e8 <LoopFillZerobss+0x22>)
 80023be:	2300      	movs	r3, #0
 80023c0:	e001      	b.n	80023c6 <LoopFillZerobss>

080023c2 <FillZerobss>:
 80023c2:	6013      	str	r3, [r2, #0]
 80023c4:	3204      	adds	r2, #4

080023c6 <LoopFillZerobss>:
 80023c6:	42a2      	cmp	r2, r4
 80023c8:	d3fb      	bcc.n	80023c2 <FillZerobss>
 80023ca:	f004 fd61 	bl	8006e90 <__libc_init_array>
 80023ce:	f7ff fa33 	bl	8001838 <main>
 80023d2:	4770      	bx	lr
 80023d4:	20020000 	.word	0x20020000
 80023d8:	20000000 	.word	0x20000000
 80023dc:	20000204 	.word	0x20000204
 80023e0:	0800960c 	.word	0x0800960c
 80023e4:	20000204 	.word	0x20000204
 80023e8:	200006c8 	.word	0x200006c8

080023ec <ADC_IRQHandler>:
 80023ec:	e7fe      	b.n	80023ec <ADC_IRQHandler>
	...

080023f0 <HAL_Init>:
 80023f0:	b580      	push	{r7, lr}
 80023f2:	af00      	add	r7, sp, #0
 80023f4:	4b0e      	ldr	r3, [pc, #56]	@ (8002430 <HAL_Init+0x40>)
 80023f6:	681b      	ldr	r3, [r3, #0]
 80023f8:	4a0d      	ldr	r2, [pc, #52]	@ (8002430 <HAL_Init+0x40>)
 80023fa:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 80023fe:	6013      	str	r3, [r2, #0]
 8002400:	4b0b      	ldr	r3, [pc, #44]	@ (8002430 <HAL_Init+0x40>)
 8002402:	681b      	ldr	r3, [r3, #0]
 8002404:	4a0a      	ldr	r2, [pc, #40]	@ (8002430 <HAL_Init+0x40>)
 8002406:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 800240a:	6013      	str	r3, [r2, #0]
 800240c:	4b08      	ldr	r3, [pc, #32]	@ (8002430 <HAL_Init+0x40>)
 800240e:	681b      	ldr	r3, [r3, #0]
 8002410:	4a07      	ldr	r2, [pc, #28]	@ (8002430 <HAL_Init+0x40>)
 8002412:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8002416:	6013      	str	r3, [r2, #0]
 8002418:	2003      	movs	r0, #3
 800241a:	f000 f94f 	bl	80026bc <HAL_NVIC_SetPriorityGrouping>
 800241e:	2000      	movs	r0, #0
 8002420:	f000 f808 	bl	8002434 <HAL_InitTick>
 8002424:	f7ff fdb0 	bl	8001f88 <HAL_MspInit>
 8002428:	2300      	movs	r3, #0
 800242a:	4618      	mov	r0, r3
 800242c:	bd80      	pop	{r7, pc}
 800242e:	bf00      	nop
 8002430:	40023c00 	.word	0x40023c00

08002434 <HAL_InitTick>:
 8002434:	b580      	push	{r7, lr}
 8002436:	b082      	sub	sp, #8
 8002438:	af00      	add	r7, sp, #0
 800243a:	6078      	str	r0, [r7, #4]
 800243c:	4b12      	ldr	r3, [pc, #72]	@ (8002488 <HAL_InitTick+0x54>)
 800243e:	681a      	ldr	r2, [r3, #0]
 8002440:	4b12      	ldr	r3, [pc, #72]	@ (800248c <HAL_InitTick+0x58>)
 8002442:	781b      	ldrb	r3, [r3, #0]
 8002444:	4619      	mov	r1, r3
 8002446:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 800244a:	fbb3 f3f1 	udiv	r3, r3, r1
 800244e:	fbb2 f3f3 	udiv	r3, r2, r3
 8002452:	4618      	mov	r0, r3
 8002454:	f000 f967 	bl	8002726 <HAL_SYSTICK_Config>
 8002458:	4603      	mov	r3, r0
 800245a:	2b00      	cmp	r3, #0
 800245c:	d001      	beq.n	8002462 <HAL_InitTick+0x2e>
 800245e:	2301      	movs	r3, #1
 8002460:	e00e      	b.n	8002480 <HAL_InitTick+0x4c>
 8002462:	687b      	ldr	r3, [r7, #4]
 8002464:	2b0f      	cmp	r3, #15
 8002466:	d80a      	bhi.n	800247e <HAL_InitTick+0x4a>
 8002468:	2200      	movs	r2, #0
 800246a:	6879      	ldr	r1, [r7, #4]
 800246c:	f04f 30ff 	mov.w	r0, #4294967295
 8002470:	f000 f92f 	bl	80026d2 <HAL_NVIC_SetPriority>
 8002474:	4a06      	ldr	r2, [pc, #24]	@ (8002490 <HAL_InitTick+0x5c>)
 8002476:	687b      	ldr	r3, [r7, #4]
 8002478:	6013      	str	r3, [r2, #0]
 800247a:	2300      	movs	r3, #0
 800247c:	e000      	b.n	8002480 <HAL_InitTick+0x4c>
 800247e:	2301      	movs	r3, #1
 8002480:	4618      	mov	r0, r3
 8002482:	3708      	adds	r7, #8
 8002484:	46bd      	mov	sp, r7
 8002486:	bd80      	pop	{r7, pc}
 8002488:	20000030 	.word	0x20000030
 800248c:	20000038 	.word	0x20000038
 8002490:	20000034 	.word	0x20000034

08002494 <HAL_IncTick>:
 8002494:	b480      	push	{r7}
 8002496:	af00      	add	r7, sp, #0
 8002498:	4b06      	ldr	r3, [pc, #24]	@ (80024b4 <HAL_IncTick+0x20>)
 800249a:	781b      	ldrb	r3, [r3, #0]
 800249c:	461a      	mov	r2, r3
 800249e:	4b06      	ldr	r3, [pc, #24]	@ (80024b8 <HAL_IncTick+0x24>)
 80024a0:	681b      	ldr	r3, [r3, #0]
 80024a2:	4413      	add	r3, r2
 80024a4:	4a04      	ldr	r2, [pc, #16]	@ (80024b8 <HAL_IncTick+0x24>)
 80024a6:	6013      	str	r3, [r2, #0]
 80024a8:	bf00      	nop
 80024aa:	46bd      	mov	sp, r7
 80024ac:	f85d 7b04 	ldr.w	r7, [sp], #4
 80024b0:	4770      	bx	lr
 80024b2:	bf00      	nop
 80024b4:	20000038 	.word	0x20000038
 80024b8:	20000578 	.word	0x20000578

080024bc <HAL_GetTick>:
 80024bc:	b480      	push	{r7}
 80024be:	af00      	add	r7, sp, #0
 80024c0:	4b03      	ldr	r3, [pc, #12]	@ (80024d0 <HAL_GetTick+0x14>)
 80024c2:	681b      	ldr	r3, [r3, #0]
 80024c4:	4618      	mov	r0, r3
 80024c6:	46bd      	mov	sp, r7
 80024c8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80024cc:	4770      	bx	lr
 80024ce:	bf00      	nop
 80024d0:	20000578 	.word	0x20000578

080024d4 <HAL_Delay>:
 80024d4:	b580      	push	{r7, lr}
 80024d6:	b084      	sub	sp, #16
 80024d8:	af00      	add	r7, sp, #0
 80024da:	6078      	str	r0, [r7, #4]
 80024dc:	f7ff ffee 	bl	80024bc <HAL_GetTick>
 80024e0:	60b8      	str	r0, [r7, #8]
 80024e2:	687b      	ldr	r3, [r7, #4]
 80024e4:	60fb      	str	r3, [r7, #12]
 80024e6:	68fb      	ldr	r3, [r7, #12]
 80024e8:	f1b3 3fff 	cmp.w	r3, #4294967295
 80024ec:	d005      	beq.n	80024fa <HAL_Delay+0x26>
 80024ee:	4b0a      	ldr	r3, [pc, #40]	@ (8002518 <HAL_Delay+0x44>)
 80024f0:	781b      	ldrb	r3, [r3, #0]
 80024f2:	461a      	mov	r2, r3
 80024f4:	68fb      	ldr	r3, [r7, #12]
 80024f6:	4413      	add	r3, r2
 80024f8:	60fb      	str	r3, [r7, #12]
 80024fa:	bf00      	nop
 80024fc:	f7ff ffde 	bl	80024bc <HAL_GetTick>
 8002500:	4602      	mov	r2, r0
 8002502:	68bb      	ldr	r3, [r7, #8]
 8002504:	1ad3      	subs	r3, r2, r3
 8002506:	68fa      	ldr	r2, [r7, #12]
 8002508:	429a      	cmp	r2, r3
 800250a:	d8f7      	bhi.n	80024fc <HAL_Delay+0x28>
 800250c:	bf00      	nop
 800250e:	bf00      	nop
 8002510:	3710      	adds	r7, #16
 8002512:	46bd      	mov	sp, r7
 8002514:	bd80      	pop	{r7, pc}
 8002516:	bf00      	nop
 8002518:	20000038 	.word	0x20000038

0800251c <__NVIC_SetPriorityGrouping>:
 800251c:	b480      	push	{r7}
 800251e:	b085      	sub	sp, #20
 8002520:	af00      	add	r7, sp, #0
 8002522:	6078      	str	r0, [r7, #4]
 8002524:	687b      	ldr	r3, [r7, #4]
 8002526:	f003 0307 	and.w	r3, r3, #7
 800252a:	60fb      	str	r3, [r7, #12]
 800252c:	4b0c      	ldr	r3, [pc, #48]	@ (8002560 <__NVIC_SetPriorityGrouping+0x44>)
 800252e:	68db      	ldr	r3, [r3, #12]
 8002530:	60bb      	str	r3, [r7, #8]
 8002532:	68ba      	ldr	r2, [r7, #8]
 8002534:	f64f 03ff 	movw	r3, #63743	@ 0xf8ff
 8002538:	4013      	ands	r3, r2
 800253a:	60bb      	str	r3, [r7, #8]
 800253c:	68fb      	ldr	r3, [r7, #12]
 800253e:	021a      	lsls	r2, r3, #8
 8002540:	68bb      	ldr	r3, [r7, #8]
 8002542:	4313      	orrs	r3, r2
 8002544:	f043 63bf 	orr.w	r3, r3, #100139008	@ 0x5f80000
 8002548:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 800254c:	60bb      	str	r3, [r7, #8]
 800254e:	4a04      	ldr	r2, [pc, #16]	@ (8002560 <__NVIC_SetPriorityGrouping+0x44>)
 8002550:	68bb      	ldr	r3, [r7, #8]
 8002552:	60d3      	str	r3, [r2, #12]
 8002554:	bf00      	nop
 8002556:	3714      	adds	r7, #20
 8002558:	46bd      	mov	sp, r7
 800255a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800255e:	4770      	bx	lr
 8002560:	e000ed00 	.word	0xe000ed00

08002564 <__NVIC_GetPriorityGrouping>:
 8002564:	b480      	push	{r7}
 8002566:	af00      	add	r7, sp, #0
 8002568:	4b04      	ldr	r3, [pc, #16]	@ (800257c <__NVIC_GetPriorityGrouping+0x18>)
 800256a:	68db      	ldr	r3, [r3, #12]
 800256c:	0a1b      	lsrs	r3, r3, #8
 800256e:	f003 0307 	and.w	r3, r3, #7
 8002572:	4618      	mov	r0, r3
 8002574:	46bd      	mov	sp, r7
 8002576:	f85d 7b04 	ldr.w	r7, [sp], #4
 800257a:	4770      	bx	lr
 800257c:	e000ed00 	.word	0xe000ed00

08002580 <__NVIC_EnableIRQ>:
 8002580:	b480      	push	{r7}
 8002582:	b083      	sub	sp, #12
 8002584:	af00      	add	r7, sp, #0
 8002586:	4603      	mov	r3, r0
 8002588:	71fb      	strb	r3, [r7, #7]
 800258a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800258e:	2b00      	cmp	r3, #0
 8002590:	db0b      	blt.n	80025aa <__NVIC_EnableIRQ+0x2a>
 8002592:	79fb      	ldrb	r3, [r7, #7]
 8002594:	f003 021f 	and.w	r2, r3, #31
 8002598:	4907      	ldr	r1, [pc, #28]	@ (80025b8 <__NVIC_EnableIRQ+0x38>)
 800259a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800259e:	095b      	lsrs	r3, r3, #5
 80025a0:	2001      	movs	r0, #1
 80025a2:	fa00 f202 	lsl.w	r2, r0, r2
 80025a6:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 80025aa:	bf00      	nop
 80025ac:	370c      	adds	r7, #12
 80025ae:	46bd      	mov	sp, r7
 80025b0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80025b4:	4770      	bx	lr
 80025b6:	bf00      	nop
 80025b8:	e000e100 	.word	0xe000e100

080025bc <__NVIC_SetPriority>:
 80025bc:	b480      	push	{r7}
 80025be:	b083      	sub	sp, #12
 80025c0:	af00      	add	r7, sp, #0
 80025c2:	4603      	mov	r3, r0
 80025c4:	6039      	str	r1, [r7, #0]
 80025c6:	71fb      	strb	r3, [r7, #7]
 80025c8:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80025cc:	2b00      	cmp	r3, #0
 80025ce:	db0a      	blt.n	80025e6 <__NVIC_SetPriority+0x2a>
 80025d0:	683b      	ldr	r3, [r7, #0]
 80025d2:	b2da      	uxtb	r2, r3
 80025d4:	490c      	ldr	r1, [pc, #48]	@ (8002608 <__NVIC_SetPriority+0x4c>)
 80025d6:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80025da:	0112      	lsls	r2, r2, #4
 80025dc:	b2d2      	uxtb	r2, r2
 80025de:	440b      	add	r3, r1
 80025e0:	f883 2300 	strb.w	r2, [r3, #768]	@ 0x300
 80025e4:	e00a      	b.n	80025fc <__NVIC_SetPriority+0x40>
 80025e6:	683b      	ldr	r3, [r7, #0]
 80025e8:	b2da      	uxtb	r2, r3
 80025ea:	4908      	ldr	r1, [pc, #32]	@ (800260c <__NVIC_SetPriority+0x50>)
 80025ec:	79fb      	ldrb	r3, [r7, #7]
 80025ee:	f003 030f 	and.w	r3, r3, #15
 80025f2:	3b04      	subs	r3, #4
 80025f4:	0112      	lsls	r2, r2, #4
 80025f6:	b2d2      	uxtb	r2, r2
 80025f8:	440b      	add	r3, r1
 80025fa:	761a      	strb	r2, [r3, #24]
 80025fc:	bf00      	nop
 80025fe:	370c      	adds	r7, #12
 8002600:	46bd      	mov	sp, r7
 8002602:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002606:	4770      	bx	lr
 8002608:	e000e100 	.word	0xe000e100
 800260c:	e000ed00 	.word	0xe000ed00

08002610 <NVIC_EncodePriority>:
 8002610:	b480      	push	{r7}
 8002612:	b089      	sub	sp, #36	@ 0x24
 8002614:	af00      	add	r7, sp, #0
 8002616:	60f8      	str	r0, [r7, #12]
 8002618:	60b9      	str	r1, [r7, #8]
 800261a:	607a      	str	r2, [r7, #4]
 800261c:	68fb      	ldr	r3, [r7, #12]
 800261e:	f003 0307 	and.w	r3, r3, #7
 8002622:	61fb      	str	r3, [r7, #28]
 8002624:	69fb      	ldr	r3, [r7, #28]
 8002626:	f1c3 0307 	rsb	r3, r3, #7
 800262a:	2b04      	cmp	r3, #4
 800262c:	bf28      	it	cs
 800262e:	2304      	movcs	r3, #4
 8002630:	61bb      	str	r3, [r7, #24]
 8002632:	69fb      	ldr	r3, [r7, #28]
 8002634:	3304      	adds	r3, #4
 8002636:	2b06      	cmp	r3, #6
 8002638:	d902      	bls.n	8002640 <NVIC_EncodePriority+0x30>
 800263a:	69fb      	ldr	r3, [r7, #28]
 800263c:	3b03      	subs	r3, #3
 800263e:	e000      	b.n	8002642 <NVIC_EncodePriority+0x32>
 8002640:	2300      	movs	r3, #0
 8002642:	617b      	str	r3, [r7, #20]
 8002644:	f04f 32ff 	mov.w	r2, #4294967295
 8002648:	69bb      	ldr	r3, [r7, #24]
 800264a:	fa02 f303 	lsl.w	r3, r2, r3
 800264e:	43da      	mvns	r2, r3
 8002650:	68bb      	ldr	r3, [r7, #8]
 8002652:	401a      	ands	r2, r3
 8002654:	697b      	ldr	r3, [r7, #20]
 8002656:	409a      	lsls	r2, r3
 8002658:	f04f 31ff 	mov.w	r1, #4294967295
 800265c:	697b      	ldr	r3, [r7, #20]
 800265e:	fa01 f303 	lsl.w	r3, r1, r3
 8002662:	43d9      	mvns	r1, r3
 8002664:	687b      	ldr	r3, [r7, #4]
 8002666:	400b      	ands	r3, r1
 8002668:	4313      	orrs	r3, r2
 800266a:	4618      	mov	r0, r3
 800266c:	3724      	adds	r7, #36	@ 0x24
 800266e:	46bd      	mov	sp, r7
 8002670:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002674:	4770      	bx	lr
	...

08002678 <SysTick_Config>:
 8002678:	b580      	push	{r7, lr}
 800267a:	b082      	sub	sp, #8
 800267c:	af00      	add	r7, sp, #0
 800267e:	6078      	str	r0, [r7, #4]
 8002680:	687b      	ldr	r3, [r7, #4]
 8002682:	3b01      	subs	r3, #1
 8002684:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 8002688:	d301      	bcc.n	800268e <SysTick_Config+0x16>
 800268a:	2301      	movs	r3, #1
 800268c:	e00f      	b.n	80026ae <SysTick_Config+0x36>
 800268e:	4a0a      	ldr	r2, [pc, #40]	@ (80026b8 <SysTick_Config+0x40>)
 8002690:	687b      	ldr	r3, [r7, #4]
 8002692:	3b01      	subs	r3, #1
 8002694:	6053      	str	r3, [r2, #4]
 8002696:	210f      	movs	r1, #15
 8002698:	f04f 30ff 	mov.w	r0, #4294967295
 800269c:	f7ff ff8e 	bl	80025bc <__NVIC_SetPriority>
 80026a0:	4b05      	ldr	r3, [pc, #20]	@ (80026b8 <SysTick_Config+0x40>)
 80026a2:	2200      	movs	r2, #0
 80026a4:	609a      	str	r2, [r3, #8]
 80026a6:	4b04      	ldr	r3, [pc, #16]	@ (80026b8 <SysTick_Config+0x40>)
 80026a8:	2207      	movs	r2, #7
 80026aa:	601a      	str	r2, [r3, #0]
 80026ac:	2300      	movs	r3, #0
 80026ae:	4618      	mov	r0, r3
 80026b0:	3708      	adds	r7, #8
 80026b2:	46bd      	mov	sp, r7
 80026b4:	bd80      	pop	{r7, pc}
 80026b6:	bf00      	nop
 80026b8:	e000e010 	.word	0xe000e010

080026bc <HAL_NVIC_SetPriorityGrouping>:
 80026bc:	b580      	push	{r7, lr}
 80026be:	b082      	sub	sp, #8
 80026c0:	af00      	add	r7, sp, #0
 80026c2:	6078      	str	r0, [r7, #4]
 80026c4:	6878      	ldr	r0, [r7, #4]
 80026c6:	f7ff ff29 	bl	800251c <__NVIC_SetPriorityGrouping>
 80026ca:	bf00      	nop
 80026cc:	3708      	adds	r7, #8
 80026ce:	46bd      	mov	sp, r7
 80026d0:	bd80      	pop	{r7, pc}

080026d2 <HAL_NVIC_SetPriority>:
 80026d2:	b580      	push	{r7, lr}
 80026d4:	b086      	sub	sp, #24
 80026d6:	af00      	add	r7, sp, #0
 80026d8:	4603      	mov	r3, r0
 80026da:	60b9      	str	r1, [r7, #8]
 80026dc:	607a      	str	r2, [r7, #4]
 80026de:	73fb      	strb	r3, [r7, #15]
 80026e0:	2300      	movs	r3, #0
 80026e2:	617b      	str	r3, [r7, #20]
 80026e4:	f7ff ff3e 	bl	8002564 <__NVIC_GetPriorityGrouping>
 80026e8:	6178      	str	r0, [r7, #20]
 80026ea:	687a      	ldr	r2, [r7, #4]
 80026ec:	68b9      	ldr	r1, [r7, #8]
 80026ee:	6978      	ldr	r0, [r7, #20]
 80026f0:	f7ff ff8e 	bl	8002610 <NVIC_EncodePriority>
 80026f4:	4602      	mov	r2, r0
 80026f6:	f997 300f 	ldrsb.w	r3, [r7, #15]
 80026fa:	4611      	mov	r1, r2
 80026fc:	4618      	mov	r0, r3
 80026fe:	f7ff ff5d 	bl	80025bc <__NVIC_SetPriority>
 8002702:	bf00      	nop
 8002704:	3718      	adds	r7, #24
 8002706:	46bd      	mov	sp, r7
 8002708:	bd80      	pop	{r7, pc}

0800270a <HAL_NVIC_EnableIRQ>:
 800270a:	b580      	push	{r7, lr}
 800270c:	b082      	sub	sp, #8
 800270e:	af00      	add	r7, sp, #0
 8002710:	4603      	mov	r3, r0
 8002712:	71fb      	strb	r3, [r7, #7]
 8002714:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8002718:	4618      	mov	r0, r3
 800271a:	f7ff ff31 	bl	8002580 <__NVIC_EnableIRQ>
 800271e:	bf00      	nop
 8002720:	3708      	adds	r7, #8
 8002722:	46bd      	mov	sp, r7
 8002724:	bd80      	pop	{r7, pc}

08002726 <HAL_SYSTICK_Config>:
 8002726:	b580      	push	{r7, lr}
 8002728:	b082      	sub	sp, #8
 800272a:	af00      	add	r7, sp, #0
 800272c:	6078      	str	r0, [r7, #4]
 800272e:	6878      	ldr	r0, [r7, #4]
 8002730:	f7ff ffa2 	bl	8002678 <SysTick_Config>
 8002734:	4603      	mov	r3, r0
 8002736:	4618      	mov	r0, r3
 8002738:	3708      	adds	r7, #8
 800273a:	46bd      	mov	sp, r7
 800273c:	bd80      	pop	{r7, pc}

0800273e <HAL_DMA_Abort>:
 800273e:	b580      	push	{r7, lr}
 8002740:	b084      	sub	sp, #16
 8002742:	af00      	add	r7, sp, #0
 8002744:	6078      	str	r0, [r7, #4]
 8002746:	687b      	ldr	r3, [r7, #4]
 8002748:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 800274a:	60fb      	str	r3, [r7, #12]
 800274c:	f7ff feb6 	bl	80024bc <HAL_GetTick>
 8002750:	60b8      	str	r0, [r7, #8]
 8002752:	687b      	ldr	r3, [r7, #4]
 8002754:	f893 3035 	ldrb.w	r3, [r3, #53]	@ 0x35
 8002758:	b2db      	uxtb	r3, r3
 800275a:	2b02      	cmp	r3, #2
 800275c:	d008      	beq.n	8002770 <HAL_DMA_Abort+0x32>
 800275e:	687b      	ldr	r3, [r7, #4]
 8002760:	2280      	movs	r2, #128	@ 0x80
 8002762:	655a      	str	r2, [r3, #84]	@ 0x54
 8002764:	687b      	ldr	r3, [r7, #4]
 8002766:	2200      	movs	r2, #0
 8002768:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 800276c:	2301      	movs	r3, #1
 800276e:	e052      	b.n	8002816 <HAL_DMA_Abort+0xd8>
 8002770:	687b      	ldr	r3, [r7, #4]
 8002772:	681b      	ldr	r3, [r3, #0]
 8002774:	681a      	ldr	r2, [r3, #0]
 8002776:	687b      	ldr	r3, [r7, #4]
 8002778:	681b      	ldr	r3, [r3, #0]
 800277a:	f022 0216 	bic.w	r2, r2, #22
 800277e:	601a      	str	r2, [r3, #0]
 8002780:	687b      	ldr	r3, [r7, #4]
 8002782:	681b      	ldr	r3, [r3, #0]
 8002784:	695a      	ldr	r2, [r3, #20]
 8002786:	687b      	ldr	r3, [r7, #4]
 8002788:	681b      	ldr	r3, [r3, #0]
 800278a:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
 800278e:	615a      	str	r2, [r3, #20]
 8002790:	687b      	ldr	r3, [r7, #4]
 8002792:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002794:	2b00      	cmp	r3, #0
 8002796:	d103      	bne.n	80027a0 <HAL_DMA_Abort+0x62>
 8002798:	687b      	ldr	r3, [r7, #4]
 800279a:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 800279c:	2b00      	cmp	r3, #0
 800279e:	d007      	beq.n	80027b0 <HAL_DMA_Abort+0x72>
 80027a0:	687b      	ldr	r3, [r7, #4]
 80027a2:	681b      	ldr	r3, [r3, #0]
 80027a4:	681a      	ldr	r2, [r3, #0]
 80027a6:	687b      	ldr	r3, [r7, #4]
 80027a8:	681b      	ldr	r3, [r3, #0]
 80027aa:	f022 0208 	bic.w	r2, r2, #8
 80027ae:	601a      	str	r2, [r3, #0]
 80027b0:	687b      	ldr	r3, [r7, #4]
 80027b2:	681b      	ldr	r3, [r3, #0]
 80027b4:	681a      	ldr	r2, [r3, #0]
 80027b6:	687b      	ldr	r3, [r7, #4]
 80027b8:	681b      	ldr	r3, [r3, #0]
 80027ba:	f022 0201 	bic.w	r2, r2, #1
 80027be:	601a      	str	r2, [r3, #0]
 80027c0:	e013      	b.n	80027ea <HAL_DMA_Abort+0xac>
 80027c2:	f7ff fe7b 	bl	80024bc <HAL_GetTick>
 80027c6:	4602      	mov	r2, r0
 80027c8:	68bb      	ldr	r3, [r7, #8]
 80027ca:	1ad3      	subs	r3, r2, r3
 80027cc:	2b05      	cmp	r3, #5
 80027ce:	d90c      	bls.n	80027ea <HAL_DMA_Abort+0xac>
 80027d0:	687b      	ldr	r3, [r7, #4]
 80027d2:	2220      	movs	r2, #32
 80027d4:	655a      	str	r2, [r3, #84]	@ 0x54
 80027d6:	687b      	ldr	r3, [r7, #4]
 80027d8:	2203      	movs	r2, #3
 80027da:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 80027de:	687b      	ldr	r3, [r7, #4]
 80027e0:	2200      	movs	r2, #0
 80027e2:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 80027e6:	2303      	movs	r3, #3
 80027e8:	e015      	b.n	8002816 <HAL_DMA_Abort+0xd8>
 80027ea:	687b      	ldr	r3, [r7, #4]
 80027ec:	681b      	ldr	r3, [r3, #0]
 80027ee:	681b      	ldr	r3, [r3, #0]
 80027f0:	f003 0301 	and.w	r3, r3, #1
 80027f4:	2b00      	cmp	r3, #0
 80027f6:	d1e4      	bne.n	80027c2 <HAL_DMA_Abort+0x84>
 80027f8:	687b      	ldr	r3, [r7, #4]
 80027fa:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 80027fc:	223f      	movs	r2, #63	@ 0x3f
 80027fe:	409a      	lsls	r2, r3
 8002800:	68fb      	ldr	r3, [r7, #12]
 8002802:	609a      	str	r2, [r3, #8]
 8002804:	687b      	ldr	r3, [r7, #4]
 8002806:	2201      	movs	r2, #1
 8002808:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 800280c:	687b      	ldr	r3, [r7, #4]
 800280e:	2200      	movs	r2, #0
 8002810:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 8002814:	2300      	movs	r3, #0
 8002816:	4618      	mov	r0, r3
 8002818:	3710      	adds	r7, #16
 800281a:	46bd      	mov	sp, r7
 800281c:	bd80      	pop	{r7, pc}

0800281e <HAL_DMA_Abort_IT>:
 800281e:	b480      	push	{r7}
 8002820:	b083      	sub	sp, #12
 8002822:	af00      	add	r7, sp, #0
 8002824:	6078      	str	r0, [r7, #4]
 8002826:	687b      	ldr	r3, [r7, #4]
 8002828:	f893 3035 	ldrb.w	r3, [r3, #53]	@ 0x35
 800282c:	b2db      	uxtb	r3, r3
 800282e:	2b02      	cmp	r3, #2
 8002830:	d004      	beq.n	800283c <HAL_DMA_Abort_IT+0x1e>
 8002832:	687b      	ldr	r3, [r7, #4]
 8002834:	2280      	movs	r2, #128	@ 0x80
 8002836:	655a      	str	r2, [r3, #84]	@ 0x54
 8002838:	2301      	movs	r3, #1
 800283a:	e00c      	b.n	8002856 <HAL_DMA_Abort_IT+0x38>
 800283c:	687b      	ldr	r3, [r7, #4]
 800283e:	2205      	movs	r2, #5
 8002840:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 8002844:	687b      	ldr	r3, [r7, #4]
 8002846:	681b      	ldr	r3, [r3, #0]
 8002848:	681a      	ldr	r2, [r3, #0]
 800284a:	687b      	ldr	r3, [r7, #4]
 800284c:	681b      	ldr	r3, [r3, #0]
 800284e:	f022 0201 	bic.w	r2, r2, #1
 8002852:	601a      	str	r2, [r3, #0]
 8002854:	2300      	movs	r3, #0
 8002856:	4618      	mov	r0, r3
 8002858:	370c      	adds	r7, #12
 800285a:	46bd      	mov	sp, r7
 800285c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002860:	4770      	bx	lr
	...

08002864 <HAL_GPIO_Init>:
 8002864:	b480      	push	{r7}
 8002866:	b089      	sub	sp, #36	@ 0x24
 8002868:	af00      	add	r7, sp, #0
 800286a:	6078      	str	r0, [r7, #4]
 800286c:	6039      	str	r1, [r7, #0]
 800286e:	2300      	movs	r3, #0
 8002870:	617b      	str	r3, [r7, #20]
 8002872:	2300      	movs	r3, #0
 8002874:	613b      	str	r3, [r7, #16]
 8002876:	2300      	movs	r3, #0
 8002878:	61bb      	str	r3, [r7, #24]
 800287a:	2300      	movs	r3, #0
 800287c:	61fb      	str	r3, [r7, #28]
 800287e:	e165      	b.n	8002b4c <HAL_GPIO_Init+0x2e8>
 8002880:	2201      	movs	r2, #1
 8002882:	69fb      	ldr	r3, [r7, #28]
 8002884:	fa02 f303 	lsl.w	r3, r2, r3
 8002888:	617b      	str	r3, [r7, #20]
 800288a:	683b      	ldr	r3, [r7, #0]
 800288c:	681b      	ldr	r3, [r3, #0]
 800288e:	697a      	ldr	r2, [r7, #20]
 8002890:	4013      	ands	r3, r2
 8002892:	613b      	str	r3, [r7, #16]
 8002894:	693a      	ldr	r2, [r7, #16]
 8002896:	697b      	ldr	r3, [r7, #20]
 8002898:	429a      	cmp	r2, r3
 800289a:	f040 8154 	bne.w	8002b46 <HAL_GPIO_Init+0x2e2>
 800289e:	683b      	ldr	r3, [r7, #0]
 80028a0:	685b      	ldr	r3, [r3, #4]
 80028a2:	f003 0303 	and.w	r3, r3, #3
 80028a6:	2b01      	cmp	r3, #1
 80028a8:	d005      	beq.n	80028b6 <HAL_GPIO_Init+0x52>
 80028aa:	683b      	ldr	r3, [r7, #0]
 80028ac:	685b      	ldr	r3, [r3, #4]
 80028ae:	f003 0303 	and.w	r3, r3, #3
 80028b2:	2b02      	cmp	r3, #2
 80028b4:	d130      	bne.n	8002918 <HAL_GPIO_Init+0xb4>
 80028b6:	687b      	ldr	r3, [r7, #4]
 80028b8:	689b      	ldr	r3, [r3, #8]
 80028ba:	61bb      	str	r3, [r7, #24]
 80028bc:	69fb      	ldr	r3, [r7, #28]
 80028be:	005b      	lsls	r3, r3, #1
 80028c0:	2203      	movs	r2, #3
 80028c2:	fa02 f303 	lsl.w	r3, r2, r3
 80028c6:	43db      	mvns	r3, r3
 80028c8:	69ba      	ldr	r2, [r7, #24]
 80028ca:	4013      	ands	r3, r2
 80028cc:	61bb      	str	r3, [r7, #24]
 80028ce:	683b      	ldr	r3, [r7, #0]
 80028d0:	68da      	ldr	r2, [r3, #12]
 80028d2:	69fb      	ldr	r3, [r7, #28]
 80028d4:	005b      	lsls	r3, r3, #1
 80028d6:	fa02 f303 	lsl.w	r3, r2, r3
 80028da:	69ba      	ldr	r2, [r7, #24]
 80028dc:	4313      	orrs	r3, r2
 80028de:	61bb      	str	r3, [r7, #24]
 80028e0:	687b      	ldr	r3, [r7, #4]
 80028e2:	69ba      	ldr	r2, [r7, #24]
 80028e4:	609a      	str	r2, [r3, #8]
 80028e6:	687b      	ldr	r3, [r7, #4]
 80028e8:	685b      	ldr	r3, [r3, #4]
 80028ea:	61bb      	str	r3, [r7, #24]
 80028ec:	2201      	movs	r2, #1
 80028ee:	69fb      	ldr	r3, [r7, #28]
 80028f0:	fa02 f303 	lsl.w	r3, r2, r3
 80028f4:	43db      	mvns	r3, r3
 80028f6:	69ba      	ldr	r2, [r7, #24]
 80028f8:	4013      	ands	r3, r2
 80028fa:	61bb      	str	r3, [r7, #24]
 80028fc:	683b      	ldr	r3, [r7, #0]
 80028fe:	685b      	ldr	r3, [r3, #4]
 8002900:	091b      	lsrs	r3, r3, #4
 8002902:	f003 0201 	and.w	r2, r3, #1
 8002906:	69fb      	ldr	r3, [r7, #28]
 8002908:	fa02 f303 	lsl.w	r3, r2, r3
 800290c:	69ba      	ldr	r2, [r7, #24]
 800290e:	4313      	orrs	r3, r2
 8002910:	61bb      	str	r3, [r7, #24]
 8002912:	687b      	ldr	r3, [r7, #4]
 8002914:	69ba      	ldr	r2, [r7, #24]
 8002916:	605a      	str	r2, [r3, #4]
 8002918:	683b      	ldr	r3, [r7, #0]
 800291a:	685b      	ldr	r3, [r3, #4]
 800291c:	f003 0303 	and.w	r3, r3, #3
 8002920:	2b03      	cmp	r3, #3
 8002922:	d017      	beq.n	8002954 <HAL_GPIO_Init+0xf0>
 8002924:	687b      	ldr	r3, [r7, #4]
 8002926:	68db      	ldr	r3, [r3, #12]
 8002928:	61bb      	str	r3, [r7, #24]
 800292a:	69fb      	ldr	r3, [r7, #28]
 800292c:	005b      	lsls	r3, r3, #1
 800292e:	2203      	movs	r2, #3
 8002930:	fa02 f303 	lsl.w	r3, r2, r3
 8002934:	43db      	mvns	r3, r3
 8002936:	69ba      	ldr	r2, [r7, #24]
 8002938:	4013      	ands	r3, r2
 800293a:	61bb      	str	r3, [r7, #24]
 800293c:	683b      	ldr	r3, [r7, #0]
 800293e:	689a      	ldr	r2, [r3, #8]
 8002940:	69fb      	ldr	r3, [r7, #28]
 8002942:	005b      	lsls	r3, r3, #1
 8002944:	fa02 f303 	lsl.w	r3, r2, r3
 8002948:	69ba      	ldr	r2, [r7, #24]
 800294a:	4313      	orrs	r3, r2
 800294c:	61bb      	str	r3, [r7, #24]
 800294e:	687b      	ldr	r3, [r7, #4]
 8002950:	69ba      	ldr	r2, [r7, #24]
 8002952:	60da      	str	r2, [r3, #12]
 8002954:	683b      	ldr	r3, [r7, #0]
 8002956:	685b      	ldr	r3, [r3, #4]
 8002958:	f003 0303 	and.w	r3, r3, #3
 800295c:	2b02      	cmp	r3, #2
 800295e:	d123      	bne.n	80029a8 <HAL_GPIO_Init+0x144>
 8002960:	69fb      	ldr	r3, [r7, #28]
 8002962:	08da      	lsrs	r2, r3, #3
 8002964:	687b      	ldr	r3, [r7, #4]
 8002966:	3208      	adds	r2, #8
 8002968:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800296c:	61bb      	str	r3, [r7, #24]
 800296e:	69fb      	ldr	r3, [r7, #28]
 8002970:	f003 0307 	and.w	r3, r3, #7
 8002974:	009b      	lsls	r3, r3, #2
 8002976:	220f      	movs	r2, #15
 8002978:	fa02 f303 	lsl.w	r3, r2, r3
 800297c:	43db      	mvns	r3, r3
 800297e:	69ba      	ldr	r2, [r7, #24]
 8002980:	4013      	ands	r3, r2
 8002982:	61bb      	str	r3, [r7, #24]
 8002984:	683b      	ldr	r3, [r7, #0]
 8002986:	691a      	ldr	r2, [r3, #16]
 8002988:	69fb      	ldr	r3, [r7, #28]
 800298a:	f003 0307 	and.w	r3, r3, #7
 800298e:	009b      	lsls	r3, r3, #2
 8002990:	fa02 f303 	lsl.w	r3, r2, r3
 8002994:	69ba      	ldr	r2, [r7, #24]
 8002996:	4313      	orrs	r3, r2
 8002998:	61bb      	str	r3, [r7, #24]
 800299a:	69fb      	ldr	r3, [r7, #28]
 800299c:	08da      	lsrs	r2, r3, #3
 800299e:	687b      	ldr	r3, [r7, #4]
 80029a0:	3208      	adds	r2, #8
 80029a2:	69b9      	ldr	r1, [r7, #24]
 80029a4:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 80029a8:	687b      	ldr	r3, [r7, #4]
 80029aa:	681b      	ldr	r3, [r3, #0]
 80029ac:	61bb      	str	r3, [r7, #24]
 80029ae:	69fb      	ldr	r3, [r7, #28]
 80029b0:	005b      	lsls	r3, r3, #1
 80029b2:	2203      	movs	r2, #3
 80029b4:	fa02 f303 	lsl.w	r3, r2, r3
 80029b8:	43db      	mvns	r3, r3
 80029ba:	69ba      	ldr	r2, [r7, #24]
 80029bc:	4013      	ands	r3, r2
 80029be:	61bb      	str	r3, [r7, #24]
 80029c0:	683b      	ldr	r3, [r7, #0]
 80029c2:	685b      	ldr	r3, [r3, #4]
 80029c4:	f003 0203 	and.w	r2, r3, #3
 80029c8:	69fb      	ldr	r3, [r7, #28]
 80029ca:	005b      	lsls	r3, r3, #1
 80029cc:	fa02 f303 	lsl.w	r3, r2, r3
 80029d0:	69ba      	ldr	r2, [r7, #24]
 80029d2:	4313      	orrs	r3, r2
 80029d4:	61bb      	str	r3, [r7, #24]
 80029d6:	687b      	ldr	r3, [r7, #4]
 80029d8:	69ba      	ldr	r2, [r7, #24]
 80029da:	601a      	str	r2, [r3, #0]
 80029dc:	683b      	ldr	r3, [r7, #0]
 80029de:	685b      	ldr	r3, [r3, #4]
 80029e0:	f403 3340 	and.w	r3, r3, #196608	@ 0x30000
 80029e4:	2b00      	cmp	r3, #0
 80029e6:	f000 80ae 	beq.w	8002b46 <HAL_GPIO_Init+0x2e2>
 80029ea:	2300      	movs	r3, #0
 80029ec:	60fb      	str	r3, [r7, #12]
 80029ee:	4b5d      	ldr	r3, [pc, #372]	@ (8002b64 <HAL_GPIO_Init+0x300>)
 80029f0:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80029f2:	4a5c      	ldr	r2, [pc, #368]	@ (8002b64 <HAL_GPIO_Init+0x300>)
 80029f4:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 80029f8:	6453      	str	r3, [r2, #68]	@ 0x44
 80029fa:	4b5a      	ldr	r3, [pc, #360]	@ (8002b64 <HAL_GPIO_Init+0x300>)
 80029fc:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80029fe:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 8002a02:	60fb      	str	r3, [r7, #12]
 8002a04:	68fb      	ldr	r3, [r7, #12]
 8002a06:	4a58      	ldr	r2, [pc, #352]	@ (8002b68 <HAL_GPIO_Init+0x304>)
 8002a08:	69fb      	ldr	r3, [r7, #28]
 8002a0a:	089b      	lsrs	r3, r3, #2
 8002a0c:	3302      	adds	r3, #2
 8002a0e:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8002a12:	61bb      	str	r3, [r7, #24]
 8002a14:	69fb      	ldr	r3, [r7, #28]
 8002a16:	f003 0303 	and.w	r3, r3, #3
 8002a1a:	009b      	lsls	r3, r3, #2
 8002a1c:	220f      	movs	r2, #15
 8002a1e:	fa02 f303 	lsl.w	r3, r2, r3
 8002a22:	43db      	mvns	r3, r3
 8002a24:	69ba      	ldr	r2, [r7, #24]
 8002a26:	4013      	ands	r3, r2
 8002a28:	61bb      	str	r3, [r7, #24]
 8002a2a:	687b      	ldr	r3, [r7, #4]
 8002a2c:	4a4f      	ldr	r2, [pc, #316]	@ (8002b6c <HAL_GPIO_Init+0x308>)
 8002a2e:	4293      	cmp	r3, r2
 8002a30:	d025      	beq.n	8002a7e <HAL_GPIO_Init+0x21a>
 8002a32:	687b      	ldr	r3, [r7, #4]
 8002a34:	4a4e      	ldr	r2, [pc, #312]	@ (8002b70 <HAL_GPIO_Init+0x30c>)
 8002a36:	4293      	cmp	r3, r2
 8002a38:	d01f      	beq.n	8002a7a <HAL_GPIO_Init+0x216>
 8002a3a:	687b      	ldr	r3, [r7, #4]
 8002a3c:	4a4d      	ldr	r2, [pc, #308]	@ (8002b74 <HAL_GPIO_Init+0x310>)
 8002a3e:	4293      	cmp	r3, r2
 8002a40:	d019      	beq.n	8002a76 <HAL_GPIO_Init+0x212>
 8002a42:	687b      	ldr	r3, [r7, #4]
 8002a44:	4a4c      	ldr	r2, [pc, #304]	@ (8002b78 <HAL_GPIO_Init+0x314>)
 8002a46:	4293      	cmp	r3, r2
 8002a48:	d013      	beq.n	8002a72 <HAL_GPIO_Init+0x20e>
 8002a4a:	687b      	ldr	r3, [r7, #4]
 8002a4c:	4a4b      	ldr	r2, [pc, #300]	@ (8002b7c <HAL_GPIO_Init+0x318>)
 8002a4e:	4293      	cmp	r3, r2
 8002a50:	d00d      	beq.n	8002a6e <HAL_GPIO_Init+0x20a>
 8002a52:	687b      	ldr	r3, [r7, #4]
 8002a54:	4a4a      	ldr	r2, [pc, #296]	@ (8002b80 <HAL_GPIO_Init+0x31c>)
 8002a56:	4293      	cmp	r3, r2
 8002a58:	d007      	beq.n	8002a6a <HAL_GPIO_Init+0x206>
 8002a5a:	687b      	ldr	r3, [r7, #4]
 8002a5c:	4a49      	ldr	r2, [pc, #292]	@ (8002b84 <HAL_GPIO_Init+0x320>)
 8002a5e:	4293      	cmp	r3, r2
 8002a60:	d101      	bne.n	8002a66 <HAL_GPIO_Init+0x202>
 8002a62:	2306      	movs	r3, #6
 8002a64:	e00c      	b.n	8002a80 <HAL_GPIO_Init+0x21c>
 8002a66:	2307      	movs	r3, #7
 8002a68:	e00a      	b.n	8002a80 <HAL_GPIO_Init+0x21c>
 8002a6a:	2305      	movs	r3, #5
 8002a6c:	e008      	b.n	8002a80 <HAL_GPIO_Init+0x21c>
 8002a6e:	2304      	movs	r3, #4
 8002a70:	e006      	b.n	8002a80 <HAL_GPIO_Init+0x21c>
 8002a72:	2303      	movs	r3, #3
 8002a74:	e004      	b.n	8002a80 <HAL_GPIO_Init+0x21c>
 8002a76:	2302      	movs	r3, #2
 8002a78:	e002      	b.n	8002a80 <HAL_GPIO_Init+0x21c>
 8002a7a:	2301      	movs	r3, #1
 8002a7c:	e000      	b.n	8002a80 <HAL_GPIO_Init+0x21c>
 8002a7e:	2300      	movs	r3, #0
 8002a80:	69fa      	ldr	r2, [r7, #28]
 8002a82:	f002 0203 	and.w	r2, r2, #3
 8002a86:	0092      	lsls	r2, r2, #2
 8002a88:	4093      	lsls	r3, r2
 8002a8a:	69ba      	ldr	r2, [r7, #24]
 8002a8c:	4313      	orrs	r3, r2
 8002a8e:	61bb      	str	r3, [r7, #24]
 8002a90:	4935      	ldr	r1, [pc, #212]	@ (8002b68 <HAL_GPIO_Init+0x304>)
 8002a92:	69fb      	ldr	r3, [r7, #28]
 8002a94:	089b      	lsrs	r3, r3, #2
 8002a96:	3302      	adds	r3, #2
 8002a98:	69ba      	ldr	r2, [r7, #24]
 8002a9a:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8002a9e:	4b3a      	ldr	r3, [pc, #232]	@ (8002b88 <HAL_GPIO_Init+0x324>)
 8002aa0:	689b      	ldr	r3, [r3, #8]
 8002aa2:	61bb      	str	r3, [r7, #24]
 8002aa4:	693b      	ldr	r3, [r7, #16]
 8002aa6:	43db      	mvns	r3, r3
 8002aa8:	69ba      	ldr	r2, [r7, #24]
 8002aaa:	4013      	ands	r3, r2
 8002aac:	61bb      	str	r3, [r7, #24]
 8002aae:	683b      	ldr	r3, [r7, #0]
 8002ab0:	685b      	ldr	r3, [r3, #4]
 8002ab2:	f403 1380 	and.w	r3, r3, #1048576	@ 0x100000
 8002ab6:	2b00      	cmp	r3, #0
 8002ab8:	d003      	beq.n	8002ac2 <HAL_GPIO_Init+0x25e>
 8002aba:	69ba      	ldr	r2, [r7, #24]
 8002abc:	693b      	ldr	r3, [r7, #16]
 8002abe:	4313      	orrs	r3, r2
 8002ac0:	61bb      	str	r3, [r7, #24]
 8002ac2:	4a31      	ldr	r2, [pc, #196]	@ (8002b88 <HAL_GPIO_Init+0x324>)
 8002ac4:	69bb      	ldr	r3, [r7, #24]
 8002ac6:	6093      	str	r3, [r2, #8]
 8002ac8:	4b2f      	ldr	r3, [pc, #188]	@ (8002b88 <HAL_GPIO_Init+0x324>)
 8002aca:	68db      	ldr	r3, [r3, #12]
 8002acc:	61bb      	str	r3, [r7, #24]
 8002ace:	693b      	ldr	r3, [r7, #16]
 8002ad0:	43db      	mvns	r3, r3
 8002ad2:	69ba      	ldr	r2, [r7, #24]
 8002ad4:	4013      	ands	r3, r2
 8002ad6:	61bb      	str	r3, [r7, #24]
 8002ad8:	683b      	ldr	r3, [r7, #0]
 8002ada:	685b      	ldr	r3, [r3, #4]
 8002adc:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 8002ae0:	2b00      	cmp	r3, #0
 8002ae2:	d003      	beq.n	8002aec <HAL_GPIO_Init+0x288>
 8002ae4:	69ba      	ldr	r2, [r7, #24]
 8002ae6:	693b      	ldr	r3, [r7, #16]
 8002ae8:	4313      	orrs	r3, r2
 8002aea:	61bb      	str	r3, [r7, #24]
 8002aec:	4a26      	ldr	r2, [pc, #152]	@ (8002b88 <HAL_GPIO_Init+0x324>)
 8002aee:	69bb      	ldr	r3, [r7, #24]
 8002af0:	60d3      	str	r3, [r2, #12]
 8002af2:	4b25      	ldr	r3, [pc, #148]	@ (8002b88 <HAL_GPIO_Init+0x324>)
 8002af4:	685b      	ldr	r3, [r3, #4]
 8002af6:	61bb      	str	r3, [r7, #24]
 8002af8:	693b      	ldr	r3, [r7, #16]
 8002afa:	43db      	mvns	r3, r3
 8002afc:	69ba      	ldr	r2, [r7, #24]
 8002afe:	4013      	ands	r3, r2
 8002b00:	61bb      	str	r3, [r7, #24]
 8002b02:	683b      	ldr	r3, [r7, #0]
 8002b04:	685b      	ldr	r3, [r3, #4]
 8002b06:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8002b0a:	2b00      	cmp	r3, #0
 8002b0c:	d003      	beq.n	8002b16 <HAL_GPIO_Init+0x2b2>
 8002b0e:	69ba      	ldr	r2, [r7, #24]
 8002b10:	693b      	ldr	r3, [r7, #16]
 8002b12:	4313      	orrs	r3, r2
 8002b14:	61bb      	str	r3, [r7, #24]
 8002b16:	4a1c      	ldr	r2, [pc, #112]	@ (8002b88 <HAL_GPIO_Init+0x324>)
 8002b18:	69bb      	ldr	r3, [r7, #24]
 8002b1a:	6053      	str	r3, [r2, #4]
 8002b1c:	4b1a      	ldr	r3, [pc, #104]	@ (8002b88 <HAL_GPIO_Init+0x324>)
 8002b1e:	681b      	ldr	r3, [r3, #0]
 8002b20:	61bb      	str	r3, [r7, #24]
 8002b22:	693b      	ldr	r3, [r7, #16]
 8002b24:	43db      	mvns	r3, r3
 8002b26:	69ba      	ldr	r2, [r7, #24]
 8002b28:	4013      	ands	r3, r2
 8002b2a:	61bb      	str	r3, [r7, #24]
 8002b2c:	683b      	ldr	r3, [r7, #0]
 8002b2e:	685b      	ldr	r3, [r3, #4]
 8002b30:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 8002b34:	2b00      	cmp	r3, #0
 8002b36:	d003      	beq.n	8002b40 <HAL_GPIO_Init+0x2dc>
 8002b38:	69ba      	ldr	r2, [r7, #24]
 8002b3a:	693b      	ldr	r3, [r7, #16]
 8002b3c:	4313      	orrs	r3, r2
 8002b3e:	61bb      	str	r3, [r7, #24]
 8002b40:	4a11      	ldr	r2, [pc, #68]	@ (8002b88 <HAL_GPIO_Init+0x324>)
 8002b42:	69bb      	ldr	r3, [r7, #24]
 8002b44:	6013      	str	r3, [r2, #0]
 8002b46:	69fb      	ldr	r3, [r7, #28]
 8002b48:	3301      	adds	r3, #1
 8002b4a:	61fb      	str	r3, [r7, #28]
 8002b4c:	69fb      	ldr	r3, [r7, #28]
 8002b4e:	2b0f      	cmp	r3, #15
 8002b50:	f67f ae96 	bls.w	8002880 <HAL_GPIO_Init+0x1c>
 8002b54:	bf00      	nop
 8002b56:	bf00      	nop
 8002b58:	3724      	adds	r7, #36	@ 0x24
 8002b5a:	46bd      	mov	sp, r7
 8002b5c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002b60:	4770      	bx	lr
 8002b62:	bf00      	nop
 8002b64:	40023800 	.word	0x40023800
 8002b68:	40013800 	.word	0x40013800
 8002b6c:	40020000 	.word	0x40020000
 8002b70:	40020400 	.word	0x40020400
 8002b74:	40020800 	.word	0x40020800
 8002b78:	40020c00 	.word	0x40020c00
 8002b7c:	40021000 	.word	0x40021000
 8002b80:	40021400 	.word	0x40021400
 8002b84:	40021800 	.word	0x40021800
 8002b88:	40013c00 	.word	0x40013c00

08002b8c <HAL_GPIO_ReadPin>:
 8002b8c:	b480      	push	{r7}
 8002b8e:	b085      	sub	sp, #20
 8002b90:	af00      	add	r7, sp, #0
 8002b92:	6078      	str	r0, [r7, #4]
 8002b94:	460b      	mov	r3, r1
 8002b96:	807b      	strh	r3, [r7, #2]
 8002b98:	687b      	ldr	r3, [r7, #4]
 8002b9a:	691a      	ldr	r2, [r3, #16]
 8002b9c:	887b      	ldrh	r3, [r7, #2]
 8002b9e:	4013      	ands	r3, r2
 8002ba0:	2b00      	cmp	r3, #0
 8002ba2:	d002      	beq.n	8002baa <HAL_GPIO_ReadPin+0x1e>
 8002ba4:	2301      	movs	r3, #1
 8002ba6:	73fb      	strb	r3, [r7, #15]
 8002ba8:	e001      	b.n	8002bae <HAL_GPIO_ReadPin+0x22>
 8002baa:	2300      	movs	r3, #0
 8002bac:	73fb      	strb	r3, [r7, #15]
 8002bae:	7bfb      	ldrb	r3, [r7, #15]
 8002bb0:	4618      	mov	r0, r3
 8002bb2:	3714      	adds	r7, #20
 8002bb4:	46bd      	mov	sp, r7
 8002bb6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002bba:	4770      	bx	lr

08002bbc <HAL_GPIO_WritePin>:
 8002bbc:	b480      	push	{r7}
 8002bbe:	b083      	sub	sp, #12
 8002bc0:	af00      	add	r7, sp, #0
 8002bc2:	6078      	str	r0, [r7, #4]
 8002bc4:	460b      	mov	r3, r1
 8002bc6:	807b      	strh	r3, [r7, #2]
 8002bc8:	4613      	mov	r3, r2
 8002bca:	707b      	strb	r3, [r7, #1]
 8002bcc:	787b      	ldrb	r3, [r7, #1]
 8002bce:	2b00      	cmp	r3, #0
 8002bd0:	d003      	beq.n	8002bda <HAL_GPIO_WritePin+0x1e>
 8002bd2:	887a      	ldrh	r2, [r7, #2]
 8002bd4:	687b      	ldr	r3, [r7, #4]
 8002bd6:	619a      	str	r2, [r3, #24]
 8002bd8:	e003      	b.n	8002be2 <HAL_GPIO_WritePin+0x26>
 8002bda:	887b      	ldrh	r3, [r7, #2]
 8002bdc:	041a      	lsls	r2, r3, #16
 8002bde:	687b      	ldr	r3, [r7, #4]
 8002be0:	619a      	str	r2, [r3, #24]
 8002be2:	bf00      	nop
 8002be4:	370c      	adds	r7, #12
 8002be6:	46bd      	mov	sp, r7
 8002be8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002bec:	4770      	bx	lr
	...

08002bf0 <HAL_I2C_Init>:
 8002bf0:	b580      	push	{r7, lr}
 8002bf2:	b084      	sub	sp, #16
 8002bf4:	af00      	add	r7, sp, #0
 8002bf6:	6078      	str	r0, [r7, #4]
 8002bf8:	687b      	ldr	r3, [r7, #4]
 8002bfa:	2b00      	cmp	r3, #0
 8002bfc:	d101      	bne.n	8002c02 <HAL_I2C_Init+0x12>
 8002bfe:	2301      	movs	r3, #1
 8002c00:	e12b      	b.n	8002e5a <HAL_I2C_Init+0x26a>
 8002c02:	687b      	ldr	r3, [r7, #4]
 8002c04:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8002c08:	b2db      	uxtb	r3, r3
 8002c0a:	2b00      	cmp	r3, #0
 8002c0c:	d106      	bne.n	8002c1c <HAL_I2C_Init+0x2c>
 8002c0e:	687b      	ldr	r3, [r7, #4]
 8002c10:	2200      	movs	r2, #0
 8002c12:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8002c16:	6878      	ldr	r0, [r7, #4]
 8002c18:	f7fe fafa 	bl	8001210 <HAL_I2C_MspInit>
 8002c1c:	687b      	ldr	r3, [r7, #4]
 8002c1e:	2224      	movs	r2, #36	@ 0x24
 8002c20:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8002c24:	687b      	ldr	r3, [r7, #4]
 8002c26:	681b      	ldr	r3, [r3, #0]
 8002c28:	681a      	ldr	r2, [r3, #0]
 8002c2a:	687b      	ldr	r3, [r7, #4]
 8002c2c:	681b      	ldr	r3, [r3, #0]
 8002c2e:	f022 0201 	bic.w	r2, r2, #1
 8002c32:	601a      	str	r2, [r3, #0]
 8002c34:	687b      	ldr	r3, [r7, #4]
 8002c36:	681b      	ldr	r3, [r3, #0]
 8002c38:	681a      	ldr	r2, [r3, #0]
 8002c3a:	687b      	ldr	r3, [r7, #4]
 8002c3c:	681b      	ldr	r3, [r3, #0]
 8002c3e:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 8002c42:	601a      	str	r2, [r3, #0]
 8002c44:	687b      	ldr	r3, [r7, #4]
 8002c46:	681b      	ldr	r3, [r3, #0]
 8002c48:	681a      	ldr	r2, [r3, #0]
 8002c4a:	687b      	ldr	r3, [r7, #4]
 8002c4c:	681b      	ldr	r3, [r3, #0]
 8002c4e:	f422 4200 	bic.w	r2, r2, #32768	@ 0x8000
 8002c52:	601a      	str	r2, [r3, #0]
 8002c54:	f001 f8e2 	bl	8003e1c <HAL_RCC_GetPCLK1Freq>
 8002c58:	60f8      	str	r0, [r7, #12]
 8002c5a:	687b      	ldr	r3, [r7, #4]
 8002c5c:	685b      	ldr	r3, [r3, #4]
 8002c5e:	4a81      	ldr	r2, [pc, #516]	@ (8002e64 <HAL_I2C_Init+0x274>)
 8002c60:	4293      	cmp	r3, r2
 8002c62:	d807      	bhi.n	8002c74 <HAL_I2C_Init+0x84>
 8002c64:	68fb      	ldr	r3, [r7, #12]
 8002c66:	4a80      	ldr	r2, [pc, #512]	@ (8002e68 <HAL_I2C_Init+0x278>)
 8002c68:	4293      	cmp	r3, r2
 8002c6a:	bf94      	ite	ls
 8002c6c:	2301      	movls	r3, #1
 8002c6e:	2300      	movhi	r3, #0
 8002c70:	b2db      	uxtb	r3, r3
 8002c72:	e006      	b.n	8002c82 <HAL_I2C_Init+0x92>
 8002c74:	68fb      	ldr	r3, [r7, #12]
 8002c76:	4a7d      	ldr	r2, [pc, #500]	@ (8002e6c <HAL_I2C_Init+0x27c>)
 8002c78:	4293      	cmp	r3, r2
 8002c7a:	bf94      	ite	ls
 8002c7c:	2301      	movls	r3, #1
 8002c7e:	2300      	movhi	r3, #0
 8002c80:	b2db      	uxtb	r3, r3
 8002c82:	2b00      	cmp	r3, #0
 8002c84:	d001      	beq.n	8002c8a <HAL_I2C_Init+0x9a>
 8002c86:	2301      	movs	r3, #1
 8002c88:	e0e7      	b.n	8002e5a <HAL_I2C_Init+0x26a>
 8002c8a:	68fb      	ldr	r3, [r7, #12]
 8002c8c:	4a78      	ldr	r2, [pc, #480]	@ (8002e70 <HAL_I2C_Init+0x280>)
 8002c8e:	fba2 2303 	umull	r2, r3, r2, r3
 8002c92:	0c9b      	lsrs	r3, r3, #18
 8002c94:	60bb      	str	r3, [r7, #8]
 8002c96:	687b      	ldr	r3, [r7, #4]
 8002c98:	681b      	ldr	r3, [r3, #0]
 8002c9a:	685b      	ldr	r3, [r3, #4]
 8002c9c:	f023 013f 	bic.w	r1, r3, #63	@ 0x3f
 8002ca0:	687b      	ldr	r3, [r7, #4]
 8002ca2:	681b      	ldr	r3, [r3, #0]
 8002ca4:	68ba      	ldr	r2, [r7, #8]
 8002ca6:	430a      	orrs	r2, r1
 8002ca8:	605a      	str	r2, [r3, #4]
 8002caa:	687b      	ldr	r3, [r7, #4]
 8002cac:	681b      	ldr	r3, [r3, #0]
 8002cae:	6a1b      	ldr	r3, [r3, #32]
 8002cb0:	f023 013f 	bic.w	r1, r3, #63	@ 0x3f
 8002cb4:	687b      	ldr	r3, [r7, #4]
 8002cb6:	685b      	ldr	r3, [r3, #4]
 8002cb8:	4a6a      	ldr	r2, [pc, #424]	@ (8002e64 <HAL_I2C_Init+0x274>)
 8002cba:	4293      	cmp	r3, r2
 8002cbc:	d802      	bhi.n	8002cc4 <HAL_I2C_Init+0xd4>
 8002cbe:	68bb      	ldr	r3, [r7, #8]
 8002cc0:	3301      	adds	r3, #1
 8002cc2:	e009      	b.n	8002cd8 <HAL_I2C_Init+0xe8>
 8002cc4:	68bb      	ldr	r3, [r7, #8]
 8002cc6:	f44f 7296 	mov.w	r2, #300	@ 0x12c
 8002cca:	fb02 f303 	mul.w	r3, r2, r3
 8002cce:	4a69      	ldr	r2, [pc, #420]	@ (8002e74 <HAL_I2C_Init+0x284>)
 8002cd0:	fba2 2303 	umull	r2, r3, r2, r3
 8002cd4:	099b      	lsrs	r3, r3, #6
 8002cd6:	3301      	adds	r3, #1
 8002cd8:	687a      	ldr	r2, [r7, #4]
 8002cda:	6812      	ldr	r2, [r2, #0]
 8002cdc:	430b      	orrs	r3, r1
 8002cde:	6213      	str	r3, [r2, #32]
 8002ce0:	687b      	ldr	r3, [r7, #4]
 8002ce2:	681b      	ldr	r3, [r3, #0]
 8002ce4:	69db      	ldr	r3, [r3, #28]
 8002ce6:	f423 424f 	bic.w	r2, r3, #52992	@ 0xcf00
 8002cea:	f022 02ff 	bic.w	r2, r2, #255	@ 0xff
 8002cee:	687b      	ldr	r3, [r7, #4]
 8002cf0:	685b      	ldr	r3, [r3, #4]
 8002cf2:	495c      	ldr	r1, [pc, #368]	@ (8002e64 <HAL_I2C_Init+0x274>)
 8002cf4:	428b      	cmp	r3, r1
 8002cf6:	d819      	bhi.n	8002d2c <HAL_I2C_Init+0x13c>
 8002cf8:	68fb      	ldr	r3, [r7, #12]
 8002cfa:	1e59      	subs	r1, r3, #1
 8002cfc:	687b      	ldr	r3, [r7, #4]
 8002cfe:	685b      	ldr	r3, [r3, #4]
 8002d00:	005b      	lsls	r3, r3, #1
 8002d02:	fbb1 f3f3 	udiv	r3, r1, r3
 8002d06:	1c59      	adds	r1, r3, #1
 8002d08:	f640 73fc 	movw	r3, #4092	@ 0xffc
 8002d0c:	400b      	ands	r3, r1
 8002d0e:	2b00      	cmp	r3, #0
 8002d10:	d00a      	beq.n	8002d28 <HAL_I2C_Init+0x138>
 8002d12:	68fb      	ldr	r3, [r7, #12]
 8002d14:	1e59      	subs	r1, r3, #1
 8002d16:	687b      	ldr	r3, [r7, #4]
 8002d18:	685b      	ldr	r3, [r3, #4]
 8002d1a:	005b      	lsls	r3, r3, #1
 8002d1c:	fbb1 f3f3 	udiv	r3, r1, r3
 8002d20:	3301      	adds	r3, #1
 8002d22:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8002d26:	e051      	b.n	8002dcc <HAL_I2C_Init+0x1dc>
 8002d28:	2304      	movs	r3, #4
 8002d2a:	e04f      	b.n	8002dcc <HAL_I2C_Init+0x1dc>
 8002d2c:	687b      	ldr	r3, [r7, #4]
 8002d2e:	689b      	ldr	r3, [r3, #8]
 8002d30:	2b00      	cmp	r3, #0
 8002d32:	d111      	bne.n	8002d58 <HAL_I2C_Init+0x168>
 8002d34:	68fb      	ldr	r3, [r7, #12]
 8002d36:	1e58      	subs	r0, r3, #1
 8002d38:	687b      	ldr	r3, [r7, #4]
 8002d3a:	6859      	ldr	r1, [r3, #4]
 8002d3c:	460b      	mov	r3, r1
 8002d3e:	005b      	lsls	r3, r3, #1
 8002d40:	440b      	add	r3, r1
 8002d42:	fbb0 f3f3 	udiv	r3, r0, r3
 8002d46:	3301      	adds	r3, #1
 8002d48:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8002d4c:	2b00      	cmp	r3, #0
 8002d4e:	bf0c      	ite	eq
 8002d50:	2301      	moveq	r3, #1
 8002d52:	2300      	movne	r3, #0
 8002d54:	b2db      	uxtb	r3, r3
 8002d56:	e012      	b.n	8002d7e <HAL_I2C_Init+0x18e>
 8002d58:	68fb      	ldr	r3, [r7, #12]
 8002d5a:	1e58      	subs	r0, r3, #1
 8002d5c:	687b      	ldr	r3, [r7, #4]
 8002d5e:	6859      	ldr	r1, [r3, #4]
 8002d60:	460b      	mov	r3, r1
 8002d62:	009b      	lsls	r3, r3, #2
 8002d64:	440b      	add	r3, r1
 8002d66:	0099      	lsls	r1, r3, #2
 8002d68:	440b      	add	r3, r1
 8002d6a:	fbb0 f3f3 	udiv	r3, r0, r3
 8002d6e:	3301      	adds	r3, #1
 8002d70:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8002d74:	2b00      	cmp	r3, #0
 8002d76:	bf0c      	ite	eq
 8002d78:	2301      	moveq	r3, #1
 8002d7a:	2300      	movne	r3, #0
 8002d7c:	b2db      	uxtb	r3, r3
 8002d7e:	2b00      	cmp	r3, #0
 8002d80:	d001      	beq.n	8002d86 <HAL_I2C_Init+0x196>
 8002d82:	2301      	movs	r3, #1
 8002d84:	e022      	b.n	8002dcc <HAL_I2C_Init+0x1dc>
 8002d86:	687b      	ldr	r3, [r7, #4]
 8002d88:	689b      	ldr	r3, [r3, #8]
 8002d8a:	2b00      	cmp	r3, #0
 8002d8c:	d10e      	bne.n	8002dac <HAL_I2C_Init+0x1bc>
 8002d8e:	68fb      	ldr	r3, [r7, #12]
 8002d90:	1e58      	subs	r0, r3, #1
 8002d92:	687b      	ldr	r3, [r7, #4]
 8002d94:	6859      	ldr	r1, [r3, #4]
 8002d96:	460b      	mov	r3, r1
 8002d98:	005b      	lsls	r3, r3, #1
 8002d9a:	440b      	add	r3, r1
 8002d9c:	fbb0 f3f3 	udiv	r3, r0, r3
 8002da0:	3301      	adds	r3, #1
 8002da2:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8002da6:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 8002daa:	e00f      	b.n	8002dcc <HAL_I2C_Init+0x1dc>
 8002dac:	68fb      	ldr	r3, [r7, #12]
 8002dae:	1e58      	subs	r0, r3, #1
 8002db0:	687b      	ldr	r3, [r7, #4]
 8002db2:	6859      	ldr	r1, [r3, #4]
 8002db4:	460b      	mov	r3, r1
 8002db6:	009b      	lsls	r3, r3, #2
 8002db8:	440b      	add	r3, r1
 8002dba:	0099      	lsls	r1, r3, #2
 8002dbc:	440b      	add	r3, r1
 8002dbe:	fbb0 f3f3 	udiv	r3, r0, r3
 8002dc2:	3301      	adds	r3, #1
 8002dc4:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8002dc8:	f443 4340 	orr.w	r3, r3, #49152	@ 0xc000
 8002dcc:	6879      	ldr	r1, [r7, #4]
 8002dce:	6809      	ldr	r1, [r1, #0]
 8002dd0:	4313      	orrs	r3, r2
 8002dd2:	61cb      	str	r3, [r1, #28]
 8002dd4:	687b      	ldr	r3, [r7, #4]
 8002dd6:	681b      	ldr	r3, [r3, #0]
 8002dd8:	681b      	ldr	r3, [r3, #0]
 8002dda:	f023 01c0 	bic.w	r1, r3, #192	@ 0xc0
 8002dde:	687b      	ldr	r3, [r7, #4]
 8002de0:	69da      	ldr	r2, [r3, #28]
 8002de2:	687b      	ldr	r3, [r7, #4]
 8002de4:	6a1b      	ldr	r3, [r3, #32]
 8002de6:	431a      	orrs	r2, r3
 8002de8:	687b      	ldr	r3, [r7, #4]
 8002dea:	681b      	ldr	r3, [r3, #0]
 8002dec:	430a      	orrs	r2, r1
 8002dee:	601a      	str	r2, [r3, #0]
 8002df0:	687b      	ldr	r3, [r7, #4]
 8002df2:	681b      	ldr	r3, [r3, #0]
 8002df4:	689b      	ldr	r3, [r3, #8]
 8002df6:	f423 4303 	bic.w	r3, r3, #33536	@ 0x8300
 8002dfa:	f023 03ff 	bic.w	r3, r3, #255	@ 0xff
 8002dfe:	687a      	ldr	r2, [r7, #4]
 8002e00:	6911      	ldr	r1, [r2, #16]
 8002e02:	687a      	ldr	r2, [r7, #4]
 8002e04:	68d2      	ldr	r2, [r2, #12]
 8002e06:	4311      	orrs	r1, r2
 8002e08:	687a      	ldr	r2, [r7, #4]
 8002e0a:	6812      	ldr	r2, [r2, #0]
 8002e0c:	430b      	orrs	r3, r1
 8002e0e:	6093      	str	r3, [r2, #8]
 8002e10:	687b      	ldr	r3, [r7, #4]
 8002e12:	681b      	ldr	r3, [r3, #0]
 8002e14:	68db      	ldr	r3, [r3, #12]
 8002e16:	f023 01ff 	bic.w	r1, r3, #255	@ 0xff
 8002e1a:	687b      	ldr	r3, [r7, #4]
 8002e1c:	695a      	ldr	r2, [r3, #20]
 8002e1e:	687b      	ldr	r3, [r7, #4]
 8002e20:	699b      	ldr	r3, [r3, #24]
 8002e22:	431a      	orrs	r2, r3
 8002e24:	687b      	ldr	r3, [r7, #4]
 8002e26:	681b      	ldr	r3, [r3, #0]
 8002e28:	430a      	orrs	r2, r1
 8002e2a:	60da      	str	r2, [r3, #12]
 8002e2c:	687b      	ldr	r3, [r7, #4]
 8002e2e:	681b      	ldr	r3, [r3, #0]
 8002e30:	681a      	ldr	r2, [r3, #0]
 8002e32:	687b      	ldr	r3, [r7, #4]
 8002e34:	681b      	ldr	r3, [r3, #0]
 8002e36:	f042 0201 	orr.w	r2, r2, #1
 8002e3a:	601a      	str	r2, [r3, #0]
 8002e3c:	687b      	ldr	r3, [r7, #4]
 8002e3e:	2200      	movs	r2, #0
 8002e40:	641a      	str	r2, [r3, #64]	@ 0x40
 8002e42:	687b      	ldr	r3, [r7, #4]
 8002e44:	2220      	movs	r2, #32
 8002e46:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8002e4a:	687b      	ldr	r3, [r7, #4]
 8002e4c:	2200      	movs	r2, #0
 8002e4e:	631a      	str	r2, [r3, #48]	@ 0x30
 8002e50:	687b      	ldr	r3, [r7, #4]
 8002e52:	2200      	movs	r2, #0
 8002e54:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8002e58:	2300      	movs	r3, #0
 8002e5a:	4618      	mov	r0, r3
 8002e5c:	3710      	adds	r7, #16
 8002e5e:	46bd      	mov	sp, r7
 8002e60:	bd80      	pop	{r7, pc}
 8002e62:	bf00      	nop
 8002e64:	000186a0 	.word	0x000186a0
 8002e68:	001e847f 	.word	0x001e847f
 8002e6c:	003d08ff 	.word	0x003d08ff
 8002e70:	431bde83 	.word	0x431bde83
 8002e74:	10624dd3 	.word	0x10624dd3

08002e78 <HAL_I2C_Mem_Write>:
 8002e78:	b580      	push	{r7, lr}
 8002e7a:	b088      	sub	sp, #32
 8002e7c:	af02      	add	r7, sp, #8
 8002e7e:	60f8      	str	r0, [r7, #12]
 8002e80:	4608      	mov	r0, r1
 8002e82:	4611      	mov	r1, r2
 8002e84:	461a      	mov	r2, r3
 8002e86:	4603      	mov	r3, r0
 8002e88:	817b      	strh	r3, [r7, #10]
 8002e8a:	460b      	mov	r3, r1
 8002e8c:	813b      	strh	r3, [r7, #8]
 8002e8e:	4613      	mov	r3, r2
 8002e90:	80fb      	strh	r3, [r7, #6]
 8002e92:	f7ff fb13 	bl	80024bc <HAL_GetTick>
 8002e96:	6178      	str	r0, [r7, #20]
 8002e98:	68fb      	ldr	r3, [r7, #12]
 8002e9a:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8002e9e:	b2db      	uxtb	r3, r3
 8002ea0:	2b20      	cmp	r3, #32
 8002ea2:	f040 80d9 	bne.w	8003058 <HAL_I2C_Mem_Write+0x1e0>
 8002ea6:	697b      	ldr	r3, [r7, #20]
 8002ea8:	9300      	str	r3, [sp, #0]
 8002eaa:	2319      	movs	r3, #25
 8002eac:	2201      	movs	r2, #1
 8002eae:	496d      	ldr	r1, [pc, #436]	@ (8003064 <HAL_I2C_Mem_Write+0x1ec>)
 8002eb0:	68f8      	ldr	r0, [r7, #12]
 8002eb2:	f000 fc8b 	bl	80037cc <I2C_WaitOnFlagUntilTimeout>
 8002eb6:	4603      	mov	r3, r0
 8002eb8:	2b00      	cmp	r3, #0
 8002eba:	d001      	beq.n	8002ec0 <HAL_I2C_Mem_Write+0x48>
 8002ebc:	2302      	movs	r3, #2
 8002ebe:	e0cc      	b.n	800305a <HAL_I2C_Mem_Write+0x1e2>
 8002ec0:	68fb      	ldr	r3, [r7, #12]
 8002ec2:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8002ec6:	2b01      	cmp	r3, #1
 8002ec8:	d101      	bne.n	8002ece <HAL_I2C_Mem_Write+0x56>
 8002eca:	2302      	movs	r3, #2
 8002ecc:	e0c5      	b.n	800305a <HAL_I2C_Mem_Write+0x1e2>
 8002ece:	68fb      	ldr	r3, [r7, #12]
 8002ed0:	2201      	movs	r2, #1
 8002ed2:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8002ed6:	68fb      	ldr	r3, [r7, #12]
 8002ed8:	681b      	ldr	r3, [r3, #0]
 8002eda:	681b      	ldr	r3, [r3, #0]
 8002edc:	f003 0301 	and.w	r3, r3, #1
 8002ee0:	2b01      	cmp	r3, #1
 8002ee2:	d007      	beq.n	8002ef4 <HAL_I2C_Mem_Write+0x7c>
 8002ee4:	68fb      	ldr	r3, [r7, #12]
 8002ee6:	681b      	ldr	r3, [r3, #0]
 8002ee8:	681a      	ldr	r2, [r3, #0]
 8002eea:	68fb      	ldr	r3, [r7, #12]
 8002eec:	681b      	ldr	r3, [r3, #0]
 8002eee:	f042 0201 	orr.w	r2, r2, #1
 8002ef2:	601a      	str	r2, [r3, #0]
 8002ef4:	68fb      	ldr	r3, [r7, #12]
 8002ef6:	681b      	ldr	r3, [r3, #0]
 8002ef8:	681a      	ldr	r2, [r3, #0]
 8002efa:	68fb      	ldr	r3, [r7, #12]
 8002efc:	681b      	ldr	r3, [r3, #0]
 8002efe:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 8002f02:	601a      	str	r2, [r3, #0]
 8002f04:	68fb      	ldr	r3, [r7, #12]
 8002f06:	2221      	movs	r2, #33	@ 0x21
 8002f08:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8002f0c:	68fb      	ldr	r3, [r7, #12]
 8002f0e:	2240      	movs	r2, #64	@ 0x40
 8002f10:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8002f14:	68fb      	ldr	r3, [r7, #12]
 8002f16:	2200      	movs	r2, #0
 8002f18:	641a      	str	r2, [r3, #64]	@ 0x40
 8002f1a:	68fb      	ldr	r3, [r7, #12]
 8002f1c:	6a3a      	ldr	r2, [r7, #32]
 8002f1e:	625a      	str	r2, [r3, #36]	@ 0x24
 8002f20:	68fb      	ldr	r3, [r7, #12]
 8002f22:	8cba      	ldrh	r2, [r7, #36]	@ 0x24
 8002f24:	855a      	strh	r2, [r3, #42]	@ 0x2a
 8002f26:	68fb      	ldr	r3, [r7, #12]
 8002f28:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8002f2a:	b29a      	uxth	r2, r3
 8002f2c:	68fb      	ldr	r3, [r7, #12]
 8002f2e:	851a      	strh	r2, [r3, #40]	@ 0x28
 8002f30:	68fb      	ldr	r3, [r7, #12]
 8002f32:	4a4d      	ldr	r2, [pc, #308]	@ (8003068 <HAL_I2C_Mem_Write+0x1f0>)
 8002f34:	62da      	str	r2, [r3, #44]	@ 0x2c
 8002f36:	88f8      	ldrh	r0, [r7, #6]
 8002f38:	893a      	ldrh	r2, [r7, #8]
 8002f3a:	8979      	ldrh	r1, [r7, #10]
 8002f3c:	697b      	ldr	r3, [r7, #20]
 8002f3e:	9301      	str	r3, [sp, #4]
 8002f40:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8002f42:	9300      	str	r3, [sp, #0]
 8002f44:	4603      	mov	r3, r0
 8002f46:	68f8      	ldr	r0, [r7, #12]
 8002f48:	f000 fac2 	bl	80034d0 <I2C_RequestMemoryWrite>
 8002f4c:	4603      	mov	r3, r0
 8002f4e:	2b00      	cmp	r3, #0
 8002f50:	d052      	beq.n	8002ff8 <HAL_I2C_Mem_Write+0x180>
 8002f52:	2301      	movs	r3, #1
 8002f54:	e081      	b.n	800305a <HAL_I2C_Mem_Write+0x1e2>
 8002f56:	697a      	ldr	r2, [r7, #20]
 8002f58:	6ab9      	ldr	r1, [r7, #40]	@ 0x28
 8002f5a:	68f8      	ldr	r0, [r7, #12]
 8002f5c:	f000 fd50 	bl	8003a00 <I2C_WaitOnTXEFlagUntilTimeout>
 8002f60:	4603      	mov	r3, r0
 8002f62:	2b00      	cmp	r3, #0
 8002f64:	d00d      	beq.n	8002f82 <HAL_I2C_Mem_Write+0x10a>
 8002f66:	68fb      	ldr	r3, [r7, #12]
 8002f68:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002f6a:	2b04      	cmp	r3, #4
 8002f6c:	d107      	bne.n	8002f7e <HAL_I2C_Mem_Write+0x106>
 8002f6e:	68fb      	ldr	r3, [r7, #12]
 8002f70:	681b      	ldr	r3, [r3, #0]
 8002f72:	681a      	ldr	r2, [r3, #0]
 8002f74:	68fb      	ldr	r3, [r7, #12]
 8002f76:	681b      	ldr	r3, [r3, #0]
 8002f78:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8002f7c:	601a      	str	r2, [r3, #0]
 8002f7e:	2301      	movs	r3, #1
 8002f80:	e06b      	b.n	800305a <HAL_I2C_Mem_Write+0x1e2>
 8002f82:	68fb      	ldr	r3, [r7, #12]
 8002f84:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002f86:	781a      	ldrb	r2, [r3, #0]
 8002f88:	68fb      	ldr	r3, [r7, #12]
 8002f8a:	681b      	ldr	r3, [r3, #0]
 8002f8c:	611a      	str	r2, [r3, #16]
 8002f8e:	68fb      	ldr	r3, [r7, #12]
 8002f90:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002f92:	1c5a      	adds	r2, r3, #1
 8002f94:	68fb      	ldr	r3, [r7, #12]
 8002f96:	625a      	str	r2, [r3, #36]	@ 0x24
 8002f98:	68fb      	ldr	r3, [r7, #12]
 8002f9a:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8002f9c:	3b01      	subs	r3, #1
 8002f9e:	b29a      	uxth	r2, r3
 8002fa0:	68fb      	ldr	r3, [r7, #12]
 8002fa2:	851a      	strh	r2, [r3, #40]	@ 0x28
 8002fa4:	68fb      	ldr	r3, [r7, #12]
 8002fa6:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8002fa8:	b29b      	uxth	r3, r3
 8002faa:	3b01      	subs	r3, #1
 8002fac:	b29a      	uxth	r2, r3
 8002fae:	68fb      	ldr	r3, [r7, #12]
 8002fb0:	855a      	strh	r2, [r3, #42]	@ 0x2a
 8002fb2:	68fb      	ldr	r3, [r7, #12]
 8002fb4:	681b      	ldr	r3, [r3, #0]
 8002fb6:	695b      	ldr	r3, [r3, #20]
 8002fb8:	f003 0304 	and.w	r3, r3, #4
 8002fbc:	2b04      	cmp	r3, #4
 8002fbe:	d11b      	bne.n	8002ff8 <HAL_I2C_Mem_Write+0x180>
 8002fc0:	68fb      	ldr	r3, [r7, #12]
 8002fc2:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8002fc4:	2b00      	cmp	r3, #0
 8002fc6:	d017      	beq.n	8002ff8 <HAL_I2C_Mem_Write+0x180>
 8002fc8:	68fb      	ldr	r3, [r7, #12]
 8002fca:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002fcc:	781a      	ldrb	r2, [r3, #0]
 8002fce:	68fb      	ldr	r3, [r7, #12]
 8002fd0:	681b      	ldr	r3, [r3, #0]
 8002fd2:	611a      	str	r2, [r3, #16]
 8002fd4:	68fb      	ldr	r3, [r7, #12]
 8002fd6:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002fd8:	1c5a      	adds	r2, r3, #1
 8002fda:	68fb      	ldr	r3, [r7, #12]
 8002fdc:	625a      	str	r2, [r3, #36]	@ 0x24
 8002fde:	68fb      	ldr	r3, [r7, #12]
 8002fe0:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8002fe2:	3b01      	subs	r3, #1
 8002fe4:	b29a      	uxth	r2, r3
 8002fe6:	68fb      	ldr	r3, [r7, #12]
 8002fe8:	851a      	strh	r2, [r3, #40]	@ 0x28
 8002fea:	68fb      	ldr	r3, [r7, #12]
 8002fec:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8002fee:	b29b      	uxth	r3, r3
 8002ff0:	3b01      	subs	r3, #1
 8002ff2:	b29a      	uxth	r2, r3
 8002ff4:	68fb      	ldr	r3, [r7, #12]
 8002ff6:	855a      	strh	r2, [r3, #42]	@ 0x2a
 8002ff8:	68fb      	ldr	r3, [r7, #12]
 8002ffa:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8002ffc:	2b00      	cmp	r3, #0
 8002ffe:	d1aa      	bne.n	8002f56 <HAL_I2C_Mem_Write+0xde>
 8003000:	697a      	ldr	r2, [r7, #20]
 8003002:	6ab9      	ldr	r1, [r7, #40]	@ 0x28
 8003004:	68f8      	ldr	r0, [r7, #12]
 8003006:	f000 fd43 	bl	8003a90 <I2C_WaitOnBTFFlagUntilTimeout>
 800300a:	4603      	mov	r3, r0
 800300c:	2b00      	cmp	r3, #0
 800300e:	d00d      	beq.n	800302c <HAL_I2C_Mem_Write+0x1b4>
 8003010:	68fb      	ldr	r3, [r7, #12]
 8003012:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003014:	2b04      	cmp	r3, #4
 8003016:	d107      	bne.n	8003028 <HAL_I2C_Mem_Write+0x1b0>
 8003018:	68fb      	ldr	r3, [r7, #12]
 800301a:	681b      	ldr	r3, [r3, #0]
 800301c:	681a      	ldr	r2, [r3, #0]
 800301e:	68fb      	ldr	r3, [r7, #12]
 8003020:	681b      	ldr	r3, [r3, #0]
 8003022:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8003026:	601a      	str	r2, [r3, #0]
 8003028:	2301      	movs	r3, #1
 800302a:	e016      	b.n	800305a <HAL_I2C_Mem_Write+0x1e2>
 800302c:	68fb      	ldr	r3, [r7, #12]
 800302e:	681b      	ldr	r3, [r3, #0]
 8003030:	681a      	ldr	r2, [r3, #0]
 8003032:	68fb      	ldr	r3, [r7, #12]
 8003034:	681b      	ldr	r3, [r3, #0]
 8003036:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 800303a:	601a      	str	r2, [r3, #0]
 800303c:	68fb      	ldr	r3, [r7, #12]
 800303e:	2220      	movs	r2, #32
 8003040:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8003044:	68fb      	ldr	r3, [r7, #12]
 8003046:	2200      	movs	r2, #0
 8003048:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 800304c:	68fb      	ldr	r3, [r7, #12]
 800304e:	2200      	movs	r2, #0
 8003050:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8003054:	2300      	movs	r3, #0
 8003056:	e000      	b.n	800305a <HAL_I2C_Mem_Write+0x1e2>
 8003058:	2302      	movs	r3, #2
 800305a:	4618      	mov	r0, r3
 800305c:	3718      	adds	r7, #24
 800305e:	46bd      	mov	sp, r7
 8003060:	bd80      	pop	{r7, pc}
 8003062:	bf00      	nop
 8003064:	00100002 	.word	0x00100002
 8003068:	ffff0000 	.word	0xffff0000

0800306c <HAL_I2C_Mem_Read>:
 800306c:	b580      	push	{r7, lr}
 800306e:	b08c      	sub	sp, #48	@ 0x30
 8003070:	af02      	add	r7, sp, #8
 8003072:	60f8      	str	r0, [r7, #12]
 8003074:	4608      	mov	r0, r1
 8003076:	4611      	mov	r1, r2
 8003078:	461a      	mov	r2, r3
 800307a:	4603      	mov	r3, r0
 800307c:	817b      	strh	r3, [r7, #10]
 800307e:	460b      	mov	r3, r1
 8003080:	813b      	strh	r3, [r7, #8]
 8003082:	4613      	mov	r3, r2
 8003084:	80fb      	strh	r3, [r7, #6]
 8003086:	f7ff fa19 	bl	80024bc <HAL_GetTick>
 800308a:	6278      	str	r0, [r7, #36]	@ 0x24
 800308c:	68fb      	ldr	r3, [r7, #12]
 800308e:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8003092:	b2db      	uxtb	r3, r3
 8003094:	2b20      	cmp	r3, #32
 8003096:	f040 8214 	bne.w	80034c2 <HAL_I2C_Mem_Read+0x456>
 800309a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800309c:	9300      	str	r3, [sp, #0]
 800309e:	2319      	movs	r3, #25
 80030a0:	2201      	movs	r2, #1
 80030a2:	497b      	ldr	r1, [pc, #492]	@ (8003290 <HAL_I2C_Mem_Read+0x224>)
 80030a4:	68f8      	ldr	r0, [r7, #12]
 80030a6:	f000 fb91 	bl	80037cc <I2C_WaitOnFlagUntilTimeout>
 80030aa:	4603      	mov	r3, r0
 80030ac:	2b00      	cmp	r3, #0
 80030ae:	d001      	beq.n	80030b4 <HAL_I2C_Mem_Read+0x48>
 80030b0:	2302      	movs	r3, #2
 80030b2:	e207      	b.n	80034c4 <HAL_I2C_Mem_Read+0x458>
 80030b4:	68fb      	ldr	r3, [r7, #12]
 80030b6:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 80030ba:	2b01      	cmp	r3, #1
 80030bc:	d101      	bne.n	80030c2 <HAL_I2C_Mem_Read+0x56>
 80030be:	2302      	movs	r3, #2
 80030c0:	e200      	b.n	80034c4 <HAL_I2C_Mem_Read+0x458>
 80030c2:	68fb      	ldr	r3, [r7, #12]
 80030c4:	2201      	movs	r2, #1
 80030c6:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80030ca:	68fb      	ldr	r3, [r7, #12]
 80030cc:	681b      	ldr	r3, [r3, #0]
 80030ce:	681b      	ldr	r3, [r3, #0]
 80030d0:	f003 0301 	and.w	r3, r3, #1
 80030d4:	2b01      	cmp	r3, #1
 80030d6:	d007      	beq.n	80030e8 <HAL_I2C_Mem_Read+0x7c>
 80030d8:	68fb      	ldr	r3, [r7, #12]
 80030da:	681b      	ldr	r3, [r3, #0]
 80030dc:	681a      	ldr	r2, [r3, #0]
 80030de:	68fb      	ldr	r3, [r7, #12]
 80030e0:	681b      	ldr	r3, [r3, #0]
 80030e2:	f042 0201 	orr.w	r2, r2, #1
 80030e6:	601a      	str	r2, [r3, #0]
 80030e8:	68fb      	ldr	r3, [r7, #12]
 80030ea:	681b      	ldr	r3, [r3, #0]
 80030ec:	681a      	ldr	r2, [r3, #0]
 80030ee:	68fb      	ldr	r3, [r7, #12]
 80030f0:	681b      	ldr	r3, [r3, #0]
 80030f2:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 80030f6:	601a      	str	r2, [r3, #0]
 80030f8:	68fb      	ldr	r3, [r7, #12]
 80030fa:	2222      	movs	r2, #34	@ 0x22
 80030fc:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8003100:	68fb      	ldr	r3, [r7, #12]
 8003102:	2240      	movs	r2, #64	@ 0x40
 8003104:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8003108:	68fb      	ldr	r3, [r7, #12]
 800310a:	2200      	movs	r2, #0
 800310c:	641a      	str	r2, [r3, #64]	@ 0x40
 800310e:	68fb      	ldr	r3, [r7, #12]
 8003110:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 8003112:	625a      	str	r2, [r3, #36]	@ 0x24
 8003114:	68fb      	ldr	r3, [r7, #12]
 8003116:	8eba      	ldrh	r2, [r7, #52]	@ 0x34
 8003118:	855a      	strh	r2, [r3, #42]	@ 0x2a
 800311a:	68fb      	ldr	r3, [r7, #12]
 800311c:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 800311e:	b29a      	uxth	r2, r3
 8003120:	68fb      	ldr	r3, [r7, #12]
 8003122:	851a      	strh	r2, [r3, #40]	@ 0x28
 8003124:	68fb      	ldr	r3, [r7, #12]
 8003126:	4a5b      	ldr	r2, [pc, #364]	@ (8003294 <HAL_I2C_Mem_Read+0x228>)
 8003128:	62da      	str	r2, [r3, #44]	@ 0x2c
 800312a:	88f8      	ldrh	r0, [r7, #6]
 800312c:	893a      	ldrh	r2, [r7, #8]
 800312e:	8979      	ldrh	r1, [r7, #10]
 8003130:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8003132:	9301      	str	r3, [sp, #4]
 8003134:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8003136:	9300      	str	r3, [sp, #0]
 8003138:	4603      	mov	r3, r0
 800313a:	68f8      	ldr	r0, [r7, #12]
 800313c:	f000 fa5e 	bl	80035fc <I2C_RequestMemoryRead>
 8003140:	4603      	mov	r3, r0
 8003142:	2b00      	cmp	r3, #0
 8003144:	d001      	beq.n	800314a <HAL_I2C_Mem_Read+0xde>
 8003146:	2301      	movs	r3, #1
 8003148:	e1bc      	b.n	80034c4 <HAL_I2C_Mem_Read+0x458>
 800314a:	68fb      	ldr	r3, [r7, #12]
 800314c:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 800314e:	2b00      	cmp	r3, #0
 8003150:	d113      	bne.n	800317a <HAL_I2C_Mem_Read+0x10e>
 8003152:	2300      	movs	r3, #0
 8003154:	623b      	str	r3, [r7, #32]
 8003156:	68fb      	ldr	r3, [r7, #12]
 8003158:	681b      	ldr	r3, [r3, #0]
 800315a:	695b      	ldr	r3, [r3, #20]
 800315c:	623b      	str	r3, [r7, #32]
 800315e:	68fb      	ldr	r3, [r7, #12]
 8003160:	681b      	ldr	r3, [r3, #0]
 8003162:	699b      	ldr	r3, [r3, #24]
 8003164:	623b      	str	r3, [r7, #32]
 8003166:	6a3b      	ldr	r3, [r7, #32]
 8003168:	68fb      	ldr	r3, [r7, #12]
 800316a:	681b      	ldr	r3, [r3, #0]
 800316c:	681a      	ldr	r2, [r3, #0]
 800316e:	68fb      	ldr	r3, [r7, #12]
 8003170:	681b      	ldr	r3, [r3, #0]
 8003172:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8003176:	601a      	str	r2, [r3, #0]
 8003178:	e190      	b.n	800349c <HAL_I2C_Mem_Read+0x430>
 800317a:	68fb      	ldr	r3, [r7, #12]
 800317c:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 800317e:	2b01      	cmp	r3, #1
 8003180:	d11b      	bne.n	80031ba <HAL_I2C_Mem_Read+0x14e>
 8003182:	68fb      	ldr	r3, [r7, #12]
 8003184:	681b      	ldr	r3, [r3, #0]
 8003186:	681a      	ldr	r2, [r3, #0]
 8003188:	68fb      	ldr	r3, [r7, #12]
 800318a:	681b      	ldr	r3, [r3, #0]
 800318c:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 8003190:	601a      	str	r2, [r3, #0]
 8003192:	2300      	movs	r3, #0
 8003194:	61fb      	str	r3, [r7, #28]
 8003196:	68fb      	ldr	r3, [r7, #12]
 8003198:	681b      	ldr	r3, [r3, #0]
 800319a:	695b      	ldr	r3, [r3, #20]
 800319c:	61fb      	str	r3, [r7, #28]
 800319e:	68fb      	ldr	r3, [r7, #12]
 80031a0:	681b      	ldr	r3, [r3, #0]
 80031a2:	699b      	ldr	r3, [r3, #24]
 80031a4:	61fb      	str	r3, [r7, #28]
 80031a6:	69fb      	ldr	r3, [r7, #28]
 80031a8:	68fb      	ldr	r3, [r7, #12]
 80031aa:	681b      	ldr	r3, [r3, #0]
 80031ac:	681a      	ldr	r2, [r3, #0]
 80031ae:	68fb      	ldr	r3, [r7, #12]
 80031b0:	681b      	ldr	r3, [r3, #0]
 80031b2:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 80031b6:	601a      	str	r2, [r3, #0]
 80031b8:	e170      	b.n	800349c <HAL_I2C_Mem_Read+0x430>
 80031ba:	68fb      	ldr	r3, [r7, #12]
 80031bc:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 80031be:	2b02      	cmp	r3, #2
 80031c0:	d11b      	bne.n	80031fa <HAL_I2C_Mem_Read+0x18e>
 80031c2:	68fb      	ldr	r3, [r7, #12]
 80031c4:	681b      	ldr	r3, [r3, #0]
 80031c6:	681a      	ldr	r2, [r3, #0]
 80031c8:	68fb      	ldr	r3, [r7, #12]
 80031ca:	681b      	ldr	r3, [r3, #0]
 80031cc:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 80031d0:	601a      	str	r2, [r3, #0]
 80031d2:	68fb      	ldr	r3, [r7, #12]
 80031d4:	681b      	ldr	r3, [r3, #0]
 80031d6:	681a      	ldr	r2, [r3, #0]
 80031d8:	68fb      	ldr	r3, [r7, #12]
 80031da:	681b      	ldr	r3, [r3, #0]
 80031dc:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 80031e0:	601a      	str	r2, [r3, #0]
 80031e2:	2300      	movs	r3, #0
 80031e4:	61bb      	str	r3, [r7, #24]
 80031e6:	68fb      	ldr	r3, [r7, #12]
 80031e8:	681b      	ldr	r3, [r3, #0]
 80031ea:	695b      	ldr	r3, [r3, #20]
 80031ec:	61bb      	str	r3, [r7, #24]
 80031ee:	68fb      	ldr	r3, [r7, #12]
 80031f0:	681b      	ldr	r3, [r3, #0]
 80031f2:	699b      	ldr	r3, [r3, #24]
 80031f4:	61bb      	str	r3, [r7, #24]
 80031f6:	69bb      	ldr	r3, [r7, #24]
 80031f8:	e150      	b.n	800349c <HAL_I2C_Mem_Read+0x430>
 80031fa:	2300      	movs	r3, #0
 80031fc:	617b      	str	r3, [r7, #20]
 80031fe:	68fb      	ldr	r3, [r7, #12]
 8003200:	681b      	ldr	r3, [r3, #0]
 8003202:	695b      	ldr	r3, [r3, #20]
 8003204:	617b      	str	r3, [r7, #20]
 8003206:	68fb      	ldr	r3, [r7, #12]
 8003208:	681b      	ldr	r3, [r3, #0]
 800320a:	699b      	ldr	r3, [r3, #24]
 800320c:	617b      	str	r3, [r7, #20]
 800320e:	697b      	ldr	r3, [r7, #20]
 8003210:	e144      	b.n	800349c <HAL_I2C_Mem_Read+0x430>
 8003212:	68fb      	ldr	r3, [r7, #12]
 8003214:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8003216:	2b03      	cmp	r3, #3
 8003218:	f200 80f1 	bhi.w	80033fe <HAL_I2C_Mem_Read+0x392>
 800321c:	68fb      	ldr	r3, [r7, #12]
 800321e:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8003220:	2b01      	cmp	r3, #1
 8003222:	d123      	bne.n	800326c <HAL_I2C_Mem_Read+0x200>
 8003224:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8003226:	6bb9      	ldr	r1, [r7, #56]	@ 0x38
 8003228:	68f8      	ldr	r0, [r7, #12]
 800322a:	f000 fc79 	bl	8003b20 <I2C_WaitOnRXNEFlagUntilTimeout>
 800322e:	4603      	mov	r3, r0
 8003230:	2b00      	cmp	r3, #0
 8003232:	d001      	beq.n	8003238 <HAL_I2C_Mem_Read+0x1cc>
 8003234:	2301      	movs	r3, #1
 8003236:	e145      	b.n	80034c4 <HAL_I2C_Mem_Read+0x458>
 8003238:	68fb      	ldr	r3, [r7, #12]
 800323a:	681b      	ldr	r3, [r3, #0]
 800323c:	691a      	ldr	r2, [r3, #16]
 800323e:	68fb      	ldr	r3, [r7, #12]
 8003240:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003242:	b2d2      	uxtb	r2, r2
 8003244:	701a      	strb	r2, [r3, #0]
 8003246:	68fb      	ldr	r3, [r7, #12]
 8003248:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800324a:	1c5a      	adds	r2, r3, #1
 800324c:	68fb      	ldr	r3, [r7, #12]
 800324e:	625a      	str	r2, [r3, #36]	@ 0x24
 8003250:	68fb      	ldr	r3, [r7, #12]
 8003252:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8003254:	3b01      	subs	r3, #1
 8003256:	b29a      	uxth	r2, r3
 8003258:	68fb      	ldr	r3, [r7, #12]
 800325a:	851a      	strh	r2, [r3, #40]	@ 0x28
 800325c:	68fb      	ldr	r3, [r7, #12]
 800325e:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8003260:	b29b      	uxth	r3, r3
 8003262:	3b01      	subs	r3, #1
 8003264:	b29a      	uxth	r2, r3
 8003266:	68fb      	ldr	r3, [r7, #12]
 8003268:	855a      	strh	r2, [r3, #42]	@ 0x2a
 800326a:	e117      	b.n	800349c <HAL_I2C_Mem_Read+0x430>
 800326c:	68fb      	ldr	r3, [r7, #12]
 800326e:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8003270:	2b02      	cmp	r3, #2
 8003272:	d14e      	bne.n	8003312 <HAL_I2C_Mem_Read+0x2a6>
 8003274:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8003276:	9300      	str	r3, [sp, #0]
 8003278:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800327a:	2200      	movs	r2, #0
 800327c:	4906      	ldr	r1, [pc, #24]	@ (8003298 <HAL_I2C_Mem_Read+0x22c>)
 800327e:	68f8      	ldr	r0, [r7, #12]
 8003280:	f000 faa4 	bl	80037cc <I2C_WaitOnFlagUntilTimeout>
 8003284:	4603      	mov	r3, r0
 8003286:	2b00      	cmp	r3, #0
 8003288:	d008      	beq.n	800329c <HAL_I2C_Mem_Read+0x230>
 800328a:	2301      	movs	r3, #1
 800328c:	e11a      	b.n	80034c4 <HAL_I2C_Mem_Read+0x458>
 800328e:	bf00      	nop
 8003290:	00100002 	.word	0x00100002
 8003294:	ffff0000 	.word	0xffff0000
 8003298:	00010004 	.word	0x00010004
 800329c:	68fb      	ldr	r3, [r7, #12]
 800329e:	681b      	ldr	r3, [r3, #0]
 80032a0:	681a      	ldr	r2, [r3, #0]
 80032a2:	68fb      	ldr	r3, [r7, #12]
 80032a4:	681b      	ldr	r3, [r3, #0]
 80032a6:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 80032aa:	601a      	str	r2, [r3, #0]
 80032ac:	68fb      	ldr	r3, [r7, #12]
 80032ae:	681b      	ldr	r3, [r3, #0]
 80032b0:	691a      	ldr	r2, [r3, #16]
 80032b2:	68fb      	ldr	r3, [r7, #12]
 80032b4:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80032b6:	b2d2      	uxtb	r2, r2
 80032b8:	701a      	strb	r2, [r3, #0]
 80032ba:	68fb      	ldr	r3, [r7, #12]
 80032bc:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80032be:	1c5a      	adds	r2, r3, #1
 80032c0:	68fb      	ldr	r3, [r7, #12]
 80032c2:	625a      	str	r2, [r3, #36]	@ 0x24
 80032c4:	68fb      	ldr	r3, [r7, #12]
 80032c6:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 80032c8:	3b01      	subs	r3, #1
 80032ca:	b29a      	uxth	r2, r3
 80032cc:	68fb      	ldr	r3, [r7, #12]
 80032ce:	851a      	strh	r2, [r3, #40]	@ 0x28
 80032d0:	68fb      	ldr	r3, [r7, #12]
 80032d2:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 80032d4:	b29b      	uxth	r3, r3
 80032d6:	3b01      	subs	r3, #1
 80032d8:	b29a      	uxth	r2, r3
 80032da:	68fb      	ldr	r3, [r7, #12]
 80032dc:	855a      	strh	r2, [r3, #42]	@ 0x2a
 80032de:	68fb      	ldr	r3, [r7, #12]
 80032e0:	681b      	ldr	r3, [r3, #0]
 80032e2:	691a      	ldr	r2, [r3, #16]
 80032e4:	68fb      	ldr	r3, [r7, #12]
 80032e6:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80032e8:	b2d2      	uxtb	r2, r2
 80032ea:	701a      	strb	r2, [r3, #0]
 80032ec:	68fb      	ldr	r3, [r7, #12]
 80032ee:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80032f0:	1c5a      	adds	r2, r3, #1
 80032f2:	68fb      	ldr	r3, [r7, #12]
 80032f4:	625a      	str	r2, [r3, #36]	@ 0x24
 80032f6:	68fb      	ldr	r3, [r7, #12]
 80032f8:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 80032fa:	3b01      	subs	r3, #1
 80032fc:	b29a      	uxth	r2, r3
 80032fe:	68fb      	ldr	r3, [r7, #12]
 8003300:	851a      	strh	r2, [r3, #40]	@ 0x28
 8003302:	68fb      	ldr	r3, [r7, #12]
 8003304:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8003306:	b29b      	uxth	r3, r3
 8003308:	3b01      	subs	r3, #1
 800330a:	b29a      	uxth	r2, r3
 800330c:	68fb      	ldr	r3, [r7, #12]
 800330e:	855a      	strh	r2, [r3, #42]	@ 0x2a
 8003310:	e0c4      	b.n	800349c <HAL_I2C_Mem_Read+0x430>
 8003312:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8003314:	9300      	str	r3, [sp, #0]
 8003316:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8003318:	2200      	movs	r2, #0
 800331a:	496c      	ldr	r1, [pc, #432]	@ (80034cc <HAL_I2C_Mem_Read+0x460>)
 800331c:	68f8      	ldr	r0, [r7, #12]
 800331e:	f000 fa55 	bl	80037cc <I2C_WaitOnFlagUntilTimeout>
 8003322:	4603      	mov	r3, r0
 8003324:	2b00      	cmp	r3, #0
 8003326:	d001      	beq.n	800332c <HAL_I2C_Mem_Read+0x2c0>
 8003328:	2301      	movs	r3, #1
 800332a:	e0cb      	b.n	80034c4 <HAL_I2C_Mem_Read+0x458>
 800332c:	68fb      	ldr	r3, [r7, #12]
 800332e:	681b      	ldr	r3, [r3, #0]
 8003330:	681a      	ldr	r2, [r3, #0]
 8003332:	68fb      	ldr	r3, [r7, #12]
 8003334:	681b      	ldr	r3, [r3, #0]
 8003336:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 800333a:	601a      	str	r2, [r3, #0]
 800333c:	68fb      	ldr	r3, [r7, #12]
 800333e:	681b      	ldr	r3, [r3, #0]
 8003340:	691a      	ldr	r2, [r3, #16]
 8003342:	68fb      	ldr	r3, [r7, #12]
 8003344:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003346:	b2d2      	uxtb	r2, r2
 8003348:	701a      	strb	r2, [r3, #0]
 800334a:	68fb      	ldr	r3, [r7, #12]
 800334c:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800334e:	1c5a      	adds	r2, r3, #1
 8003350:	68fb      	ldr	r3, [r7, #12]
 8003352:	625a      	str	r2, [r3, #36]	@ 0x24
 8003354:	68fb      	ldr	r3, [r7, #12]
 8003356:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8003358:	3b01      	subs	r3, #1
 800335a:	b29a      	uxth	r2, r3
 800335c:	68fb      	ldr	r3, [r7, #12]
 800335e:	851a      	strh	r2, [r3, #40]	@ 0x28
 8003360:	68fb      	ldr	r3, [r7, #12]
 8003362:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8003364:	b29b      	uxth	r3, r3
 8003366:	3b01      	subs	r3, #1
 8003368:	b29a      	uxth	r2, r3
 800336a:	68fb      	ldr	r3, [r7, #12]
 800336c:	855a      	strh	r2, [r3, #42]	@ 0x2a
 800336e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8003370:	9300      	str	r3, [sp, #0]
 8003372:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8003374:	2200      	movs	r2, #0
 8003376:	4955      	ldr	r1, [pc, #340]	@ (80034cc <HAL_I2C_Mem_Read+0x460>)
 8003378:	68f8      	ldr	r0, [r7, #12]
 800337a:	f000 fa27 	bl	80037cc <I2C_WaitOnFlagUntilTimeout>
 800337e:	4603      	mov	r3, r0
 8003380:	2b00      	cmp	r3, #0
 8003382:	d001      	beq.n	8003388 <HAL_I2C_Mem_Read+0x31c>
 8003384:	2301      	movs	r3, #1
 8003386:	e09d      	b.n	80034c4 <HAL_I2C_Mem_Read+0x458>
 8003388:	68fb      	ldr	r3, [r7, #12]
 800338a:	681b      	ldr	r3, [r3, #0]
 800338c:	681a      	ldr	r2, [r3, #0]
 800338e:	68fb      	ldr	r3, [r7, #12]
 8003390:	681b      	ldr	r3, [r3, #0]
 8003392:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8003396:	601a      	str	r2, [r3, #0]
 8003398:	68fb      	ldr	r3, [r7, #12]
 800339a:	681b      	ldr	r3, [r3, #0]
 800339c:	691a      	ldr	r2, [r3, #16]
 800339e:	68fb      	ldr	r3, [r7, #12]
 80033a0:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80033a2:	b2d2      	uxtb	r2, r2
 80033a4:	701a      	strb	r2, [r3, #0]
 80033a6:	68fb      	ldr	r3, [r7, #12]
 80033a8:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80033aa:	1c5a      	adds	r2, r3, #1
 80033ac:	68fb      	ldr	r3, [r7, #12]
 80033ae:	625a      	str	r2, [r3, #36]	@ 0x24
 80033b0:	68fb      	ldr	r3, [r7, #12]
 80033b2:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 80033b4:	3b01      	subs	r3, #1
 80033b6:	b29a      	uxth	r2, r3
 80033b8:	68fb      	ldr	r3, [r7, #12]
 80033ba:	851a      	strh	r2, [r3, #40]	@ 0x28
 80033bc:	68fb      	ldr	r3, [r7, #12]
 80033be:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 80033c0:	b29b      	uxth	r3, r3
 80033c2:	3b01      	subs	r3, #1
 80033c4:	b29a      	uxth	r2, r3
 80033c6:	68fb      	ldr	r3, [r7, #12]
 80033c8:	855a      	strh	r2, [r3, #42]	@ 0x2a
 80033ca:	68fb      	ldr	r3, [r7, #12]
 80033cc:	681b      	ldr	r3, [r3, #0]
 80033ce:	691a      	ldr	r2, [r3, #16]
 80033d0:	68fb      	ldr	r3, [r7, #12]
 80033d2:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80033d4:	b2d2      	uxtb	r2, r2
 80033d6:	701a      	strb	r2, [r3, #0]
 80033d8:	68fb      	ldr	r3, [r7, #12]
 80033da:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80033dc:	1c5a      	adds	r2, r3, #1
 80033de:	68fb      	ldr	r3, [r7, #12]
 80033e0:	625a      	str	r2, [r3, #36]	@ 0x24
 80033e2:	68fb      	ldr	r3, [r7, #12]
 80033e4:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 80033e6:	3b01      	subs	r3, #1
 80033e8:	b29a      	uxth	r2, r3
 80033ea:	68fb      	ldr	r3, [r7, #12]
 80033ec:	851a      	strh	r2, [r3, #40]	@ 0x28
 80033ee:	68fb      	ldr	r3, [r7, #12]
 80033f0:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 80033f2:	b29b      	uxth	r3, r3
 80033f4:	3b01      	subs	r3, #1
 80033f6:	b29a      	uxth	r2, r3
 80033f8:	68fb      	ldr	r3, [r7, #12]
 80033fa:	855a      	strh	r2, [r3, #42]	@ 0x2a
 80033fc:	e04e      	b.n	800349c <HAL_I2C_Mem_Read+0x430>
 80033fe:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8003400:	6bb9      	ldr	r1, [r7, #56]	@ 0x38
 8003402:	68f8      	ldr	r0, [r7, #12]
 8003404:	f000 fb8c 	bl	8003b20 <I2C_WaitOnRXNEFlagUntilTimeout>
 8003408:	4603      	mov	r3, r0
 800340a:	2b00      	cmp	r3, #0
 800340c:	d001      	beq.n	8003412 <HAL_I2C_Mem_Read+0x3a6>
 800340e:	2301      	movs	r3, #1
 8003410:	e058      	b.n	80034c4 <HAL_I2C_Mem_Read+0x458>
 8003412:	68fb      	ldr	r3, [r7, #12]
 8003414:	681b      	ldr	r3, [r3, #0]
 8003416:	691a      	ldr	r2, [r3, #16]
 8003418:	68fb      	ldr	r3, [r7, #12]
 800341a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800341c:	b2d2      	uxtb	r2, r2
 800341e:	701a      	strb	r2, [r3, #0]
 8003420:	68fb      	ldr	r3, [r7, #12]
 8003422:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003424:	1c5a      	adds	r2, r3, #1
 8003426:	68fb      	ldr	r3, [r7, #12]
 8003428:	625a      	str	r2, [r3, #36]	@ 0x24
 800342a:	68fb      	ldr	r3, [r7, #12]
 800342c:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 800342e:	3b01      	subs	r3, #1
 8003430:	b29a      	uxth	r2, r3
 8003432:	68fb      	ldr	r3, [r7, #12]
 8003434:	851a      	strh	r2, [r3, #40]	@ 0x28
 8003436:	68fb      	ldr	r3, [r7, #12]
 8003438:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 800343a:	b29b      	uxth	r3, r3
 800343c:	3b01      	subs	r3, #1
 800343e:	b29a      	uxth	r2, r3
 8003440:	68fb      	ldr	r3, [r7, #12]
 8003442:	855a      	strh	r2, [r3, #42]	@ 0x2a
 8003444:	68fb      	ldr	r3, [r7, #12]
 8003446:	681b      	ldr	r3, [r3, #0]
 8003448:	695b      	ldr	r3, [r3, #20]
 800344a:	f003 0304 	and.w	r3, r3, #4
 800344e:	2b04      	cmp	r3, #4
 8003450:	d124      	bne.n	800349c <HAL_I2C_Mem_Read+0x430>
 8003452:	68fb      	ldr	r3, [r7, #12]
 8003454:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8003456:	2b03      	cmp	r3, #3
 8003458:	d107      	bne.n	800346a <HAL_I2C_Mem_Read+0x3fe>
 800345a:	68fb      	ldr	r3, [r7, #12]
 800345c:	681b      	ldr	r3, [r3, #0]
 800345e:	681a      	ldr	r2, [r3, #0]
 8003460:	68fb      	ldr	r3, [r7, #12]
 8003462:	681b      	ldr	r3, [r3, #0]
 8003464:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 8003468:	601a      	str	r2, [r3, #0]
 800346a:	68fb      	ldr	r3, [r7, #12]
 800346c:	681b      	ldr	r3, [r3, #0]
 800346e:	691a      	ldr	r2, [r3, #16]
 8003470:	68fb      	ldr	r3, [r7, #12]
 8003472:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003474:	b2d2      	uxtb	r2, r2
 8003476:	701a      	strb	r2, [r3, #0]
 8003478:	68fb      	ldr	r3, [r7, #12]
 800347a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800347c:	1c5a      	adds	r2, r3, #1
 800347e:	68fb      	ldr	r3, [r7, #12]
 8003480:	625a      	str	r2, [r3, #36]	@ 0x24
 8003482:	68fb      	ldr	r3, [r7, #12]
 8003484:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8003486:	3b01      	subs	r3, #1
 8003488:	b29a      	uxth	r2, r3
 800348a:	68fb      	ldr	r3, [r7, #12]
 800348c:	851a      	strh	r2, [r3, #40]	@ 0x28
 800348e:	68fb      	ldr	r3, [r7, #12]
 8003490:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8003492:	b29b      	uxth	r3, r3
 8003494:	3b01      	subs	r3, #1
 8003496:	b29a      	uxth	r2, r3
 8003498:	68fb      	ldr	r3, [r7, #12]
 800349a:	855a      	strh	r2, [r3, #42]	@ 0x2a
 800349c:	68fb      	ldr	r3, [r7, #12]
 800349e:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 80034a0:	2b00      	cmp	r3, #0
 80034a2:	f47f aeb6 	bne.w	8003212 <HAL_I2C_Mem_Read+0x1a6>
 80034a6:	68fb      	ldr	r3, [r7, #12]
 80034a8:	2220      	movs	r2, #32
 80034aa:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80034ae:	68fb      	ldr	r3, [r7, #12]
 80034b0:	2200      	movs	r2, #0
 80034b2:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 80034b6:	68fb      	ldr	r3, [r7, #12]
 80034b8:	2200      	movs	r2, #0
 80034ba:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80034be:	2300      	movs	r3, #0
 80034c0:	e000      	b.n	80034c4 <HAL_I2C_Mem_Read+0x458>
 80034c2:	2302      	movs	r3, #2
 80034c4:	4618      	mov	r0, r3
 80034c6:	3728      	adds	r7, #40	@ 0x28
 80034c8:	46bd      	mov	sp, r7
 80034ca:	bd80      	pop	{r7, pc}
 80034cc:	00010004 	.word	0x00010004

080034d0 <I2C_RequestMemoryWrite>:
 80034d0:	b580      	push	{r7, lr}
 80034d2:	b088      	sub	sp, #32
 80034d4:	af02      	add	r7, sp, #8
 80034d6:	60f8      	str	r0, [r7, #12]
 80034d8:	4608      	mov	r0, r1
 80034da:	4611      	mov	r1, r2
 80034dc:	461a      	mov	r2, r3
 80034de:	4603      	mov	r3, r0
 80034e0:	817b      	strh	r3, [r7, #10]
 80034e2:	460b      	mov	r3, r1
 80034e4:	813b      	strh	r3, [r7, #8]
 80034e6:	4613      	mov	r3, r2
 80034e8:	80fb      	strh	r3, [r7, #6]
 80034ea:	68fb      	ldr	r3, [r7, #12]
 80034ec:	681b      	ldr	r3, [r3, #0]
 80034ee:	681a      	ldr	r2, [r3, #0]
 80034f0:	68fb      	ldr	r3, [r7, #12]
 80034f2:	681b      	ldr	r3, [r3, #0]
 80034f4:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 80034f8:	601a      	str	r2, [r3, #0]
 80034fa:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80034fc:	9300      	str	r3, [sp, #0]
 80034fe:	6a3b      	ldr	r3, [r7, #32]
 8003500:	2200      	movs	r2, #0
 8003502:	f04f 1101 	mov.w	r1, #65537	@ 0x10001
 8003506:	68f8      	ldr	r0, [r7, #12]
 8003508:	f000 f960 	bl	80037cc <I2C_WaitOnFlagUntilTimeout>
 800350c:	4603      	mov	r3, r0
 800350e:	2b00      	cmp	r3, #0
 8003510:	d00d      	beq.n	800352e <I2C_RequestMemoryWrite+0x5e>
 8003512:	68fb      	ldr	r3, [r7, #12]
 8003514:	681b      	ldr	r3, [r3, #0]
 8003516:	681b      	ldr	r3, [r3, #0]
 8003518:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800351c:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 8003520:	d103      	bne.n	800352a <I2C_RequestMemoryWrite+0x5a>
 8003522:	68fb      	ldr	r3, [r7, #12]
 8003524:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8003528:	641a      	str	r2, [r3, #64]	@ 0x40
 800352a:	2303      	movs	r3, #3
 800352c:	e05f      	b.n	80035ee <I2C_RequestMemoryWrite+0x11e>
 800352e:	897b      	ldrh	r3, [r7, #10]
 8003530:	b2db      	uxtb	r3, r3
 8003532:	461a      	mov	r2, r3
 8003534:	68fb      	ldr	r3, [r7, #12]
 8003536:	681b      	ldr	r3, [r3, #0]
 8003538:	f002 02fe 	and.w	r2, r2, #254	@ 0xfe
 800353c:	611a      	str	r2, [r3, #16]
 800353e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8003540:	6a3a      	ldr	r2, [r7, #32]
 8003542:	492d      	ldr	r1, [pc, #180]	@ (80035f8 <I2C_RequestMemoryWrite+0x128>)
 8003544:	68f8      	ldr	r0, [r7, #12]
 8003546:	f000 f9bb 	bl	80038c0 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 800354a:	4603      	mov	r3, r0
 800354c:	2b00      	cmp	r3, #0
 800354e:	d001      	beq.n	8003554 <I2C_RequestMemoryWrite+0x84>
 8003550:	2301      	movs	r3, #1
 8003552:	e04c      	b.n	80035ee <I2C_RequestMemoryWrite+0x11e>
 8003554:	2300      	movs	r3, #0
 8003556:	617b      	str	r3, [r7, #20]
 8003558:	68fb      	ldr	r3, [r7, #12]
 800355a:	681b      	ldr	r3, [r3, #0]
 800355c:	695b      	ldr	r3, [r3, #20]
 800355e:	617b      	str	r3, [r7, #20]
 8003560:	68fb      	ldr	r3, [r7, #12]
 8003562:	681b      	ldr	r3, [r3, #0]
 8003564:	699b      	ldr	r3, [r3, #24]
 8003566:	617b      	str	r3, [r7, #20]
 8003568:	697b      	ldr	r3, [r7, #20]
 800356a:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 800356c:	6a39      	ldr	r1, [r7, #32]
 800356e:	68f8      	ldr	r0, [r7, #12]
 8003570:	f000 fa46 	bl	8003a00 <I2C_WaitOnTXEFlagUntilTimeout>
 8003574:	4603      	mov	r3, r0
 8003576:	2b00      	cmp	r3, #0
 8003578:	d00d      	beq.n	8003596 <I2C_RequestMemoryWrite+0xc6>
 800357a:	68fb      	ldr	r3, [r7, #12]
 800357c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800357e:	2b04      	cmp	r3, #4
 8003580:	d107      	bne.n	8003592 <I2C_RequestMemoryWrite+0xc2>
 8003582:	68fb      	ldr	r3, [r7, #12]
 8003584:	681b      	ldr	r3, [r3, #0]
 8003586:	681a      	ldr	r2, [r3, #0]
 8003588:	68fb      	ldr	r3, [r7, #12]
 800358a:	681b      	ldr	r3, [r3, #0]
 800358c:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8003590:	601a      	str	r2, [r3, #0]
 8003592:	2301      	movs	r3, #1
 8003594:	e02b      	b.n	80035ee <I2C_RequestMemoryWrite+0x11e>
 8003596:	88fb      	ldrh	r3, [r7, #6]
 8003598:	2b01      	cmp	r3, #1
 800359a:	d105      	bne.n	80035a8 <I2C_RequestMemoryWrite+0xd8>
 800359c:	893b      	ldrh	r3, [r7, #8]
 800359e:	b2da      	uxtb	r2, r3
 80035a0:	68fb      	ldr	r3, [r7, #12]
 80035a2:	681b      	ldr	r3, [r3, #0]
 80035a4:	611a      	str	r2, [r3, #16]
 80035a6:	e021      	b.n	80035ec <I2C_RequestMemoryWrite+0x11c>
 80035a8:	893b      	ldrh	r3, [r7, #8]
 80035aa:	0a1b      	lsrs	r3, r3, #8
 80035ac:	b29b      	uxth	r3, r3
 80035ae:	b2da      	uxtb	r2, r3
 80035b0:	68fb      	ldr	r3, [r7, #12]
 80035b2:	681b      	ldr	r3, [r3, #0]
 80035b4:	611a      	str	r2, [r3, #16]
 80035b6:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 80035b8:	6a39      	ldr	r1, [r7, #32]
 80035ba:	68f8      	ldr	r0, [r7, #12]
 80035bc:	f000 fa20 	bl	8003a00 <I2C_WaitOnTXEFlagUntilTimeout>
 80035c0:	4603      	mov	r3, r0
 80035c2:	2b00      	cmp	r3, #0
 80035c4:	d00d      	beq.n	80035e2 <I2C_RequestMemoryWrite+0x112>
 80035c6:	68fb      	ldr	r3, [r7, #12]
 80035c8:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80035ca:	2b04      	cmp	r3, #4
 80035cc:	d107      	bne.n	80035de <I2C_RequestMemoryWrite+0x10e>
 80035ce:	68fb      	ldr	r3, [r7, #12]
 80035d0:	681b      	ldr	r3, [r3, #0]
 80035d2:	681a      	ldr	r2, [r3, #0]
 80035d4:	68fb      	ldr	r3, [r7, #12]
 80035d6:	681b      	ldr	r3, [r3, #0]
 80035d8:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 80035dc:	601a      	str	r2, [r3, #0]
 80035de:	2301      	movs	r3, #1
 80035e0:	e005      	b.n	80035ee <I2C_RequestMemoryWrite+0x11e>
 80035e2:	893b      	ldrh	r3, [r7, #8]
 80035e4:	b2da      	uxtb	r2, r3
 80035e6:	68fb      	ldr	r3, [r7, #12]
 80035e8:	681b      	ldr	r3, [r3, #0]
 80035ea:	611a      	str	r2, [r3, #16]
 80035ec:	2300      	movs	r3, #0
 80035ee:	4618      	mov	r0, r3
 80035f0:	3718      	adds	r7, #24
 80035f2:	46bd      	mov	sp, r7
 80035f4:	bd80      	pop	{r7, pc}
 80035f6:	bf00      	nop
 80035f8:	00010002 	.word	0x00010002

080035fc <I2C_RequestMemoryRead>:
 80035fc:	b580      	push	{r7, lr}
 80035fe:	b088      	sub	sp, #32
 8003600:	af02      	add	r7, sp, #8
 8003602:	60f8      	str	r0, [r7, #12]
 8003604:	4608      	mov	r0, r1
 8003606:	4611      	mov	r1, r2
 8003608:	461a      	mov	r2, r3
 800360a:	4603      	mov	r3, r0
 800360c:	817b      	strh	r3, [r7, #10]
 800360e:	460b      	mov	r3, r1
 8003610:	813b      	strh	r3, [r7, #8]
 8003612:	4613      	mov	r3, r2
 8003614:	80fb      	strh	r3, [r7, #6]
 8003616:	68fb      	ldr	r3, [r7, #12]
 8003618:	681b      	ldr	r3, [r3, #0]
 800361a:	681a      	ldr	r2, [r3, #0]
 800361c:	68fb      	ldr	r3, [r7, #12]
 800361e:	681b      	ldr	r3, [r3, #0]
 8003620:	f442 6280 	orr.w	r2, r2, #1024	@ 0x400
 8003624:	601a      	str	r2, [r3, #0]
 8003626:	68fb      	ldr	r3, [r7, #12]
 8003628:	681b      	ldr	r3, [r3, #0]
 800362a:	681a      	ldr	r2, [r3, #0]
 800362c:	68fb      	ldr	r3, [r7, #12]
 800362e:	681b      	ldr	r3, [r3, #0]
 8003630:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 8003634:	601a      	str	r2, [r3, #0]
 8003636:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8003638:	9300      	str	r3, [sp, #0]
 800363a:	6a3b      	ldr	r3, [r7, #32]
 800363c:	2200      	movs	r2, #0
 800363e:	f04f 1101 	mov.w	r1, #65537	@ 0x10001
 8003642:	68f8      	ldr	r0, [r7, #12]
 8003644:	f000 f8c2 	bl	80037cc <I2C_WaitOnFlagUntilTimeout>
 8003648:	4603      	mov	r3, r0
 800364a:	2b00      	cmp	r3, #0
 800364c:	d00d      	beq.n	800366a <I2C_RequestMemoryRead+0x6e>
 800364e:	68fb      	ldr	r3, [r7, #12]
 8003650:	681b      	ldr	r3, [r3, #0]
 8003652:	681b      	ldr	r3, [r3, #0]
 8003654:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8003658:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 800365c:	d103      	bne.n	8003666 <I2C_RequestMemoryRead+0x6a>
 800365e:	68fb      	ldr	r3, [r7, #12]
 8003660:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8003664:	641a      	str	r2, [r3, #64]	@ 0x40
 8003666:	2303      	movs	r3, #3
 8003668:	e0aa      	b.n	80037c0 <I2C_RequestMemoryRead+0x1c4>
 800366a:	897b      	ldrh	r3, [r7, #10]
 800366c:	b2db      	uxtb	r3, r3
 800366e:	461a      	mov	r2, r3
 8003670:	68fb      	ldr	r3, [r7, #12]
 8003672:	681b      	ldr	r3, [r3, #0]
 8003674:	f002 02fe 	and.w	r2, r2, #254	@ 0xfe
 8003678:	611a      	str	r2, [r3, #16]
 800367a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800367c:	6a3a      	ldr	r2, [r7, #32]
 800367e:	4952      	ldr	r1, [pc, #328]	@ (80037c8 <I2C_RequestMemoryRead+0x1cc>)
 8003680:	68f8      	ldr	r0, [r7, #12]
 8003682:	f000 f91d 	bl	80038c0 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8003686:	4603      	mov	r3, r0
 8003688:	2b00      	cmp	r3, #0
 800368a:	d001      	beq.n	8003690 <I2C_RequestMemoryRead+0x94>
 800368c:	2301      	movs	r3, #1
 800368e:	e097      	b.n	80037c0 <I2C_RequestMemoryRead+0x1c4>
 8003690:	2300      	movs	r3, #0
 8003692:	617b      	str	r3, [r7, #20]
 8003694:	68fb      	ldr	r3, [r7, #12]
 8003696:	681b      	ldr	r3, [r3, #0]
 8003698:	695b      	ldr	r3, [r3, #20]
 800369a:	617b      	str	r3, [r7, #20]
 800369c:	68fb      	ldr	r3, [r7, #12]
 800369e:	681b      	ldr	r3, [r3, #0]
 80036a0:	699b      	ldr	r3, [r3, #24]
 80036a2:	617b      	str	r3, [r7, #20]
 80036a4:	697b      	ldr	r3, [r7, #20]
 80036a6:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 80036a8:	6a39      	ldr	r1, [r7, #32]
 80036aa:	68f8      	ldr	r0, [r7, #12]
 80036ac:	f000 f9a8 	bl	8003a00 <I2C_WaitOnTXEFlagUntilTimeout>
 80036b0:	4603      	mov	r3, r0
 80036b2:	2b00      	cmp	r3, #0
 80036b4:	d00d      	beq.n	80036d2 <I2C_RequestMemoryRead+0xd6>
 80036b6:	68fb      	ldr	r3, [r7, #12]
 80036b8:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80036ba:	2b04      	cmp	r3, #4
 80036bc:	d107      	bne.n	80036ce <I2C_RequestMemoryRead+0xd2>
 80036be:	68fb      	ldr	r3, [r7, #12]
 80036c0:	681b      	ldr	r3, [r3, #0]
 80036c2:	681a      	ldr	r2, [r3, #0]
 80036c4:	68fb      	ldr	r3, [r7, #12]
 80036c6:	681b      	ldr	r3, [r3, #0]
 80036c8:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 80036cc:	601a      	str	r2, [r3, #0]
 80036ce:	2301      	movs	r3, #1
 80036d0:	e076      	b.n	80037c0 <I2C_RequestMemoryRead+0x1c4>
 80036d2:	88fb      	ldrh	r3, [r7, #6]
 80036d4:	2b01      	cmp	r3, #1
 80036d6:	d105      	bne.n	80036e4 <I2C_RequestMemoryRead+0xe8>
 80036d8:	893b      	ldrh	r3, [r7, #8]
 80036da:	b2da      	uxtb	r2, r3
 80036dc:	68fb      	ldr	r3, [r7, #12]
 80036de:	681b      	ldr	r3, [r3, #0]
 80036e0:	611a      	str	r2, [r3, #16]
 80036e2:	e021      	b.n	8003728 <I2C_RequestMemoryRead+0x12c>
 80036e4:	893b      	ldrh	r3, [r7, #8]
 80036e6:	0a1b      	lsrs	r3, r3, #8
 80036e8:	b29b      	uxth	r3, r3
 80036ea:	b2da      	uxtb	r2, r3
 80036ec:	68fb      	ldr	r3, [r7, #12]
 80036ee:	681b      	ldr	r3, [r3, #0]
 80036f0:	611a      	str	r2, [r3, #16]
 80036f2:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 80036f4:	6a39      	ldr	r1, [r7, #32]
 80036f6:	68f8      	ldr	r0, [r7, #12]
 80036f8:	f000 f982 	bl	8003a00 <I2C_WaitOnTXEFlagUntilTimeout>
 80036fc:	4603      	mov	r3, r0
 80036fe:	2b00      	cmp	r3, #0
 8003700:	d00d      	beq.n	800371e <I2C_RequestMemoryRead+0x122>
 8003702:	68fb      	ldr	r3, [r7, #12]
 8003704:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003706:	2b04      	cmp	r3, #4
 8003708:	d107      	bne.n	800371a <I2C_RequestMemoryRead+0x11e>
 800370a:	68fb      	ldr	r3, [r7, #12]
 800370c:	681b      	ldr	r3, [r3, #0]
 800370e:	681a      	ldr	r2, [r3, #0]
 8003710:	68fb      	ldr	r3, [r7, #12]
 8003712:	681b      	ldr	r3, [r3, #0]
 8003714:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8003718:	601a      	str	r2, [r3, #0]
 800371a:	2301      	movs	r3, #1
 800371c:	e050      	b.n	80037c0 <I2C_RequestMemoryRead+0x1c4>
 800371e:	893b      	ldrh	r3, [r7, #8]
 8003720:	b2da      	uxtb	r2, r3
 8003722:	68fb      	ldr	r3, [r7, #12]
 8003724:	681b      	ldr	r3, [r3, #0]
 8003726:	611a      	str	r2, [r3, #16]
 8003728:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 800372a:	6a39      	ldr	r1, [r7, #32]
 800372c:	68f8      	ldr	r0, [r7, #12]
 800372e:	f000 f967 	bl	8003a00 <I2C_WaitOnTXEFlagUntilTimeout>
 8003732:	4603      	mov	r3, r0
 8003734:	2b00      	cmp	r3, #0
 8003736:	d00d      	beq.n	8003754 <I2C_RequestMemoryRead+0x158>
 8003738:	68fb      	ldr	r3, [r7, #12]
 800373a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800373c:	2b04      	cmp	r3, #4
 800373e:	d107      	bne.n	8003750 <I2C_RequestMemoryRead+0x154>
 8003740:	68fb      	ldr	r3, [r7, #12]
 8003742:	681b      	ldr	r3, [r3, #0]
 8003744:	681a      	ldr	r2, [r3, #0]
 8003746:	68fb      	ldr	r3, [r7, #12]
 8003748:	681b      	ldr	r3, [r3, #0]
 800374a:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 800374e:	601a      	str	r2, [r3, #0]
 8003750:	2301      	movs	r3, #1
 8003752:	e035      	b.n	80037c0 <I2C_RequestMemoryRead+0x1c4>
 8003754:	68fb      	ldr	r3, [r7, #12]
 8003756:	681b      	ldr	r3, [r3, #0]
 8003758:	681a      	ldr	r2, [r3, #0]
 800375a:	68fb      	ldr	r3, [r7, #12]
 800375c:	681b      	ldr	r3, [r3, #0]
 800375e:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 8003762:	601a      	str	r2, [r3, #0]
 8003764:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8003766:	9300      	str	r3, [sp, #0]
 8003768:	6a3b      	ldr	r3, [r7, #32]
 800376a:	2200      	movs	r2, #0
 800376c:	f04f 1101 	mov.w	r1, #65537	@ 0x10001
 8003770:	68f8      	ldr	r0, [r7, #12]
 8003772:	f000 f82b 	bl	80037cc <I2C_WaitOnFlagUntilTimeout>
 8003776:	4603      	mov	r3, r0
 8003778:	2b00      	cmp	r3, #0
 800377a:	d00d      	beq.n	8003798 <I2C_RequestMemoryRead+0x19c>
 800377c:	68fb      	ldr	r3, [r7, #12]
 800377e:	681b      	ldr	r3, [r3, #0]
 8003780:	681b      	ldr	r3, [r3, #0]
 8003782:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8003786:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 800378a:	d103      	bne.n	8003794 <I2C_RequestMemoryRead+0x198>
 800378c:	68fb      	ldr	r3, [r7, #12]
 800378e:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8003792:	641a      	str	r2, [r3, #64]	@ 0x40
 8003794:	2303      	movs	r3, #3
 8003796:	e013      	b.n	80037c0 <I2C_RequestMemoryRead+0x1c4>
 8003798:	897b      	ldrh	r3, [r7, #10]
 800379a:	b2db      	uxtb	r3, r3
 800379c:	f043 0301 	orr.w	r3, r3, #1
 80037a0:	b2da      	uxtb	r2, r3
 80037a2:	68fb      	ldr	r3, [r7, #12]
 80037a4:	681b      	ldr	r3, [r3, #0]
 80037a6:	611a      	str	r2, [r3, #16]
 80037a8:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80037aa:	6a3a      	ldr	r2, [r7, #32]
 80037ac:	4906      	ldr	r1, [pc, #24]	@ (80037c8 <I2C_RequestMemoryRead+0x1cc>)
 80037ae:	68f8      	ldr	r0, [r7, #12]
 80037b0:	f000 f886 	bl	80038c0 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 80037b4:	4603      	mov	r3, r0
 80037b6:	2b00      	cmp	r3, #0
 80037b8:	d001      	beq.n	80037be <I2C_RequestMemoryRead+0x1c2>
 80037ba:	2301      	movs	r3, #1
 80037bc:	e000      	b.n	80037c0 <I2C_RequestMemoryRead+0x1c4>
 80037be:	2300      	movs	r3, #0
 80037c0:	4618      	mov	r0, r3
 80037c2:	3718      	adds	r7, #24
 80037c4:	46bd      	mov	sp, r7
 80037c6:	bd80      	pop	{r7, pc}
 80037c8:	00010002 	.word	0x00010002

080037cc <I2C_WaitOnFlagUntilTimeout>:
 80037cc:	b580      	push	{r7, lr}
 80037ce:	b084      	sub	sp, #16
 80037d0:	af00      	add	r7, sp, #0
 80037d2:	60f8      	str	r0, [r7, #12]
 80037d4:	60b9      	str	r1, [r7, #8]
 80037d6:	603b      	str	r3, [r7, #0]
 80037d8:	4613      	mov	r3, r2
 80037da:	71fb      	strb	r3, [r7, #7]
 80037dc:	e048      	b.n	8003870 <I2C_WaitOnFlagUntilTimeout+0xa4>
 80037de:	683b      	ldr	r3, [r7, #0]
 80037e0:	f1b3 3fff 	cmp.w	r3, #4294967295
 80037e4:	d044      	beq.n	8003870 <I2C_WaitOnFlagUntilTimeout+0xa4>
 80037e6:	f7fe fe69 	bl	80024bc <HAL_GetTick>
 80037ea:	4602      	mov	r2, r0
 80037ec:	69bb      	ldr	r3, [r7, #24]
 80037ee:	1ad3      	subs	r3, r2, r3
 80037f0:	683a      	ldr	r2, [r7, #0]
 80037f2:	429a      	cmp	r2, r3
 80037f4:	d302      	bcc.n	80037fc <I2C_WaitOnFlagUntilTimeout+0x30>
 80037f6:	683b      	ldr	r3, [r7, #0]
 80037f8:	2b00      	cmp	r3, #0
 80037fa:	d139      	bne.n	8003870 <I2C_WaitOnFlagUntilTimeout+0xa4>
 80037fc:	68bb      	ldr	r3, [r7, #8]
 80037fe:	0c1b      	lsrs	r3, r3, #16
 8003800:	b2db      	uxtb	r3, r3
 8003802:	2b01      	cmp	r3, #1
 8003804:	d10d      	bne.n	8003822 <I2C_WaitOnFlagUntilTimeout+0x56>
 8003806:	68fb      	ldr	r3, [r7, #12]
 8003808:	681b      	ldr	r3, [r3, #0]
 800380a:	695b      	ldr	r3, [r3, #20]
 800380c:	43da      	mvns	r2, r3
 800380e:	68bb      	ldr	r3, [r7, #8]
 8003810:	4013      	ands	r3, r2
 8003812:	b29b      	uxth	r3, r3
 8003814:	2b00      	cmp	r3, #0
 8003816:	bf0c      	ite	eq
 8003818:	2301      	moveq	r3, #1
 800381a:	2300      	movne	r3, #0
 800381c:	b2db      	uxtb	r3, r3
 800381e:	461a      	mov	r2, r3
 8003820:	e00c      	b.n	800383c <I2C_WaitOnFlagUntilTimeout+0x70>
 8003822:	68fb      	ldr	r3, [r7, #12]
 8003824:	681b      	ldr	r3, [r3, #0]
 8003826:	699b      	ldr	r3, [r3, #24]
 8003828:	43da      	mvns	r2, r3
 800382a:	68bb      	ldr	r3, [r7, #8]
 800382c:	4013      	ands	r3, r2
 800382e:	b29b      	uxth	r3, r3
 8003830:	2b00      	cmp	r3, #0
 8003832:	bf0c      	ite	eq
 8003834:	2301      	moveq	r3, #1
 8003836:	2300      	movne	r3, #0
 8003838:	b2db      	uxtb	r3, r3
 800383a:	461a      	mov	r2, r3
 800383c:	79fb      	ldrb	r3, [r7, #7]
 800383e:	429a      	cmp	r2, r3
 8003840:	d116      	bne.n	8003870 <I2C_WaitOnFlagUntilTimeout+0xa4>
 8003842:	68fb      	ldr	r3, [r7, #12]
 8003844:	2200      	movs	r2, #0
 8003846:	631a      	str	r2, [r3, #48]	@ 0x30
 8003848:	68fb      	ldr	r3, [r7, #12]
 800384a:	2220      	movs	r2, #32
 800384c:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8003850:	68fb      	ldr	r3, [r7, #12]
 8003852:	2200      	movs	r2, #0
 8003854:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8003858:	68fb      	ldr	r3, [r7, #12]
 800385a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800385c:	f043 0220 	orr.w	r2, r3, #32
 8003860:	68fb      	ldr	r3, [r7, #12]
 8003862:	641a      	str	r2, [r3, #64]	@ 0x40
 8003864:	68fb      	ldr	r3, [r7, #12]
 8003866:	2200      	movs	r2, #0
 8003868:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 800386c:	2301      	movs	r3, #1
 800386e:	e023      	b.n	80038b8 <I2C_WaitOnFlagUntilTimeout+0xec>
 8003870:	68bb      	ldr	r3, [r7, #8]
 8003872:	0c1b      	lsrs	r3, r3, #16
 8003874:	b2db      	uxtb	r3, r3
 8003876:	2b01      	cmp	r3, #1
 8003878:	d10d      	bne.n	8003896 <I2C_WaitOnFlagUntilTimeout+0xca>
 800387a:	68fb      	ldr	r3, [r7, #12]
 800387c:	681b      	ldr	r3, [r3, #0]
 800387e:	695b      	ldr	r3, [r3, #20]
 8003880:	43da      	mvns	r2, r3
 8003882:	68bb      	ldr	r3, [r7, #8]
 8003884:	4013      	ands	r3, r2
 8003886:	b29b      	uxth	r3, r3
 8003888:	2b00      	cmp	r3, #0
 800388a:	bf0c      	ite	eq
 800388c:	2301      	moveq	r3, #1
 800388e:	2300      	movne	r3, #0
 8003890:	b2db      	uxtb	r3, r3
 8003892:	461a      	mov	r2, r3
 8003894:	e00c      	b.n	80038b0 <I2C_WaitOnFlagUntilTimeout+0xe4>
 8003896:	68fb      	ldr	r3, [r7, #12]
 8003898:	681b      	ldr	r3, [r3, #0]
 800389a:	699b      	ldr	r3, [r3, #24]
 800389c:	43da      	mvns	r2, r3
 800389e:	68bb      	ldr	r3, [r7, #8]
 80038a0:	4013      	ands	r3, r2
 80038a2:	b29b      	uxth	r3, r3
 80038a4:	2b00      	cmp	r3, #0
 80038a6:	bf0c      	ite	eq
 80038a8:	2301      	moveq	r3, #1
 80038aa:	2300      	movne	r3, #0
 80038ac:	b2db      	uxtb	r3, r3
 80038ae:	461a      	mov	r2, r3
 80038b0:	79fb      	ldrb	r3, [r7, #7]
 80038b2:	429a      	cmp	r2, r3
 80038b4:	d093      	beq.n	80037de <I2C_WaitOnFlagUntilTimeout+0x12>
 80038b6:	2300      	movs	r3, #0
 80038b8:	4618      	mov	r0, r3
 80038ba:	3710      	adds	r7, #16
 80038bc:	46bd      	mov	sp, r7
 80038be:	bd80      	pop	{r7, pc}

080038c0 <I2C_WaitOnMasterAddressFlagUntilTimeout>:
 80038c0:	b580      	push	{r7, lr}
 80038c2:	b084      	sub	sp, #16
 80038c4:	af00      	add	r7, sp, #0
 80038c6:	60f8      	str	r0, [r7, #12]
 80038c8:	60b9      	str	r1, [r7, #8]
 80038ca:	607a      	str	r2, [r7, #4]
 80038cc:	603b      	str	r3, [r7, #0]
 80038ce:	e071      	b.n	80039b4 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf4>
 80038d0:	68fb      	ldr	r3, [r7, #12]
 80038d2:	681b      	ldr	r3, [r3, #0]
 80038d4:	695b      	ldr	r3, [r3, #20]
 80038d6:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 80038da:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 80038de:	d123      	bne.n	8003928 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x68>
 80038e0:	68fb      	ldr	r3, [r7, #12]
 80038e2:	681b      	ldr	r3, [r3, #0]
 80038e4:	681a      	ldr	r2, [r3, #0]
 80038e6:	68fb      	ldr	r3, [r7, #12]
 80038e8:	681b      	ldr	r3, [r3, #0]
 80038ea:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 80038ee:	601a      	str	r2, [r3, #0]
 80038f0:	68fb      	ldr	r3, [r7, #12]
 80038f2:	681b      	ldr	r3, [r3, #0]
 80038f4:	f46f 6280 	mvn.w	r2, #1024	@ 0x400
 80038f8:	615a      	str	r2, [r3, #20]
 80038fa:	68fb      	ldr	r3, [r7, #12]
 80038fc:	2200      	movs	r2, #0
 80038fe:	631a      	str	r2, [r3, #48]	@ 0x30
 8003900:	68fb      	ldr	r3, [r7, #12]
 8003902:	2220      	movs	r2, #32
 8003904:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8003908:	68fb      	ldr	r3, [r7, #12]
 800390a:	2200      	movs	r2, #0
 800390c:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8003910:	68fb      	ldr	r3, [r7, #12]
 8003912:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003914:	f043 0204 	orr.w	r2, r3, #4
 8003918:	68fb      	ldr	r3, [r7, #12]
 800391a:	641a      	str	r2, [r3, #64]	@ 0x40
 800391c:	68fb      	ldr	r3, [r7, #12]
 800391e:	2200      	movs	r2, #0
 8003920:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8003924:	2301      	movs	r3, #1
 8003926:	e067      	b.n	80039f8 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x138>
 8003928:	687b      	ldr	r3, [r7, #4]
 800392a:	f1b3 3fff 	cmp.w	r3, #4294967295
 800392e:	d041      	beq.n	80039b4 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf4>
 8003930:	f7fe fdc4 	bl	80024bc <HAL_GetTick>
 8003934:	4602      	mov	r2, r0
 8003936:	683b      	ldr	r3, [r7, #0]
 8003938:	1ad3      	subs	r3, r2, r3
 800393a:	687a      	ldr	r2, [r7, #4]
 800393c:	429a      	cmp	r2, r3
 800393e:	d302      	bcc.n	8003946 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x86>
 8003940:	687b      	ldr	r3, [r7, #4]
 8003942:	2b00      	cmp	r3, #0
 8003944:	d136      	bne.n	80039b4 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf4>
 8003946:	68bb      	ldr	r3, [r7, #8]
 8003948:	0c1b      	lsrs	r3, r3, #16
 800394a:	b2db      	uxtb	r3, r3
 800394c:	2b01      	cmp	r3, #1
 800394e:	d10c      	bne.n	800396a <I2C_WaitOnMasterAddressFlagUntilTimeout+0xaa>
 8003950:	68fb      	ldr	r3, [r7, #12]
 8003952:	681b      	ldr	r3, [r3, #0]
 8003954:	695b      	ldr	r3, [r3, #20]
 8003956:	43da      	mvns	r2, r3
 8003958:	68bb      	ldr	r3, [r7, #8]
 800395a:	4013      	ands	r3, r2
 800395c:	b29b      	uxth	r3, r3
 800395e:	2b00      	cmp	r3, #0
 8003960:	bf14      	ite	ne
 8003962:	2301      	movne	r3, #1
 8003964:	2300      	moveq	r3, #0
 8003966:	b2db      	uxtb	r3, r3
 8003968:	e00b      	b.n	8003982 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xc2>
 800396a:	68fb      	ldr	r3, [r7, #12]
 800396c:	681b      	ldr	r3, [r3, #0]
 800396e:	699b      	ldr	r3, [r3, #24]
 8003970:	43da      	mvns	r2, r3
 8003972:	68bb      	ldr	r3, [r7, #8]
 8003974:	4013      	ands	r3, r2
 8003976:	b29b      	uxth	r3, r3
 8003978:	2b00      	cmp	r3, #0
 800397a:	bf14      	ite	ne
 800397c:	2301      	movne	r3, #1
 800397e:	2300      	moveq	r3, #0
 8003980:	b2db      	uxtb	r3, r3
 8003982:	2b00      	cmp	r3, #0
 8003984:	d016      	beq.n	80039b4 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf4>
 8003986:	68fb      	ldr	r3, [r7, #12]
 8003988:	2200      	movs	r2, #0
 800398a:	631a      	str	r2, [r3, #48]	@ 0x30
 800398c:	68fb      	ldr	r3, [r7, #12]
 800398e:	2220      	movs	r2, #32
 8003990:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8003994:	68fb      	ldr	r3, [r7, #12]
 8003996:	2200      	movs	r2, #0
 8003998:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 800399c:	68fb      	ldr	r3, [r7, #12]
 800399e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80039a0:	f043 0220 	orr.w	r2, r3, #32
 80039a4:	68fb      	ldr	r3, [r7, #12]
 80039a6:	641a      	str	r2, [r3, #64]	@ 0x40
 80039a8:	68fb      	ldr	r3, [r7, #12]
 80039aa:	2200      	movs	r2, #0
 80039ac:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80039b0:	2301      	movs	r3, #1
 80039b2:	e021      	b.n	80039f8 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x138>
 80039b4:	68bb      	ldr	r3, [r7, #8]
 80039b6:	0c1b      	lsrs	r3, r3, #16
 80039b8:	b2db      	uxtb	r3, r3
 80039ba:	2b01      	cmp	r3, #1
 80039bc:	d10c      	bne.n	80039d8 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x118>
 80039be:	68fb      	ldr	r3, [r7, #12]
 80039c0:	681b      	ldr	r3, [r3, #0]
 80039c2:	695b      	ldr	r3, [r3, #20]
 80039c4:	43da      	mvns	r2, r3
 80039c6:	68bb      	ldr	r3, [r7, #8]
 80039c8:	4013      	ands	r3, r2
 80039ca:	b29b      	uxth	r3, r3
 80039cc:	2b00      	cmp	r3, #0
 80039ce:	bf14      	ite	ne
 80039d0:	2301      	movne	r3, #1
 80039d2:	2300      	moveq	r3, #0
 80039d4:	b2db      	uxtb	r3, r3
 80039d6:	e00b      	b.n	80039f0 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x130>
 80039d8:	68fb      	ldr	r3, [r7, #12]
 80039da:	681b      	ldr	r3, [r3, #0]
 80039dc:	699b      	ldr	r3, [r3, #24]
 80039de:	43da      	mvns	r2, r3
 80039e0:	68bb      	ldr	r3, [r7, #8]
 80039e2:	4013      	ands	r3, r2
 80039e4:	b29b      	uxth	r3, r3
 80039e6:	2b00      	cmp	r3, #0
 80039e8:	bf14      	ite	ne
 80039ea:	2301      	movne	r3, #1
 80039ec:	2300      	moveq	r3, #0
 80039ee:	b2db      	uxtb	r3, r3
 80039f0:	2b00      	cmp	r3, #0
 80039f2:	f47f af6d 	bne.w	80038d0 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x10>
 80039f6:	2300      	movs	r3, #0
 80039f8:	4618      	mov	r0, r3
 80039fa:	3710      	adds	r7, #16
 80039fc:	46bd      	mov	sp, r7
 80039fe:	bd80      	pop	{r7, pc}

08003a00 <I2C_WaitOnTXEFlagUntilTimeout>:
 8003a00:	b580      	push	{r7, lr}
 8003a02:	b084      	sub	sp, #16
 8003a04:	af00      	add	r7, sp, #0
 8003a06:	60f8      	str	r0, [r7, #12]
 8003a08:	60b9      	str	r1, [r7, #8]
 8003a0a:	607a      	str	r2, [r7, #4]
 8003a0c:	e034      	b.n	8003a78 <I2C_WaitOnTXEFlagUntilTimeout+0x78>
 8003a0e:	68f8      	ldr	r0, [r7, #12]
 8003a10:	f000 f8e3 	bl	8003bda <I2C_IsAcknowledgeFailed>
 8003a14:	4603      	mov	r3, r0
 8003a16:	2b00      	cmp	r3, #0
 8003a18:	d001      	beq.n	8003a1e <I2C_WaitOnTXEFlagUntilTimeout+0x1e>
 8003a1a:	2301      	movs	r3, #1
 8003a1c:	e034      	b.n	8003a88 <I2C_WaitOnTXEFlagUntilTimeout+0x88>
 8003a1e:	68bb      	ldr	r3, [r7, #8]
 8003a20:	f1b3 3fff 	cmp.w	r3, #4294967295
 8003a24:	d028      	beq.n	8003a78 <I2C_WaitOnTXEFlagUntilTimeout+0x78>
 8003a26:	f7fe fd49 	bl	80024bc <HAL_GetTick>
 8003a2a:	4602      	mov	r2, r0
 8003a2c:	687b      	ldr	r3, [r7, #4]
 8003a2e:	1ad3      	subs	r3, r2, r3
 8003a30:	68ba      	ldr	r2, [r7, #8]
 8003a32:	429a      	cmp	r2, r3
 8003a34:	d302      	bcc.n	8003a3c <I2C_WaitOnTXEFlagUntilTimeout+0x3c>
 8003a36:	68bb      	ldr	r3, [r7, #8]
 8003a38:	2b00      	cmp	r3, #0
 8003a3a:	d11d      	bne.n	8003a78 <I2C_WaitOnTXEFlagUntilTimeout+0x78>
 8003a3c:	68fb      	ldr	r3, [r7, #12]
 8003a3e:	681b      	ldr	r3, [r3, #0]
 8003a40:	695b      	ldr	r3, [r3, #20]
 8003a42:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8003a46:	2b80      	cmp	r3, #128	@ 0x80
 8003a48:	d016      	beq.n	8003a78 <I2C_WaitOnTXEFlagUntilTimeout+0x78>
 8003a4a:	68fb      	ldr	r3, [r7, #12]
 8003a4c:	2200      	movs	r2, #0
 8003a4e:	631a      	str	r2, [r3, #48]	@ 0x30
 8003a50:	68fb      	ldr	r3, [r7, #12]
 8003a52:	2220      	movs	r2, #32
 8003a54:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8003a58:	68fb      	ldr	r3, [r7, #12]
 8003a5a:	2200      	movs	r2, #0
 8003a5c:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8003a60:	68fb      	ldr	r3, [r7, #12]
 8003a62:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003a64:	f043 0220 	orr.w	r2, r3, #32
 8003a68:	68fb      	ldr	r3, [r7, #12]
 8003a6a:	641a      	str	r2, [r3, #64]	@ 0x40
 8003a6c:	68fb      	ldr	r3, [r7, #12]
 8003a6e:	2200      	movs	r2, #0
 8003a70:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8003a74:	2301      	movs	r3, #1
 8003a76:	e007      	b.n	8003a88 <I2C_WaitOnTXEFlagUntilTimeout+0x88>
 8003a78:	68fb      	ldr	r3, [r7, #12]
 8003a7a:	681b      	ldr	r3, [r3, #0]
 8003a7c:	695b      	ldr	r3, [r3, #20]
 8003a7e:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8003a82:	2b80      	cmp	r3, #128	@ 0x80
 8003a84:	d1c3      	bne.n	8003a0e <I2C_WaitOnTXEFlagUntilTimeout+0xe>
 8003a86:	2300      	movs	r3, #0
 8003a88:	4618      	mov	r0, r3
 8003a8a:	3710      	adds	r7, #16
 8003a8c:	46bd      	mov	sp, r7
 8003a8e:	bd80      	pop	{r7, pc}

08003a90 <I2C_WaitOnBTFFlagUntilTimeout>:
 8003a90:	b580      	push	{r7, lr}
 8003a92:	b084      	sub	sp, #16
 8003a94:	af00      	add	r7, sp, #0
 8003a96:	60f8      	str	r0, [r7, #12]
 8003a98:	60b9      	str	r1, [r7, #8]
 8003a9a:	607a      	str	r2, [r7, #4]
 8003a9c:	e034      	b.n	8003b08 <I2C_WaitOnBTFFlagUntilTimeout+0x78>
 8003a9e:	68f8      	ldr	r0, [r7, #12]
 8003aa0:	f000 f89b 	bl	8003bda <I2C_IsAcknowledgeFailed>
 8003aa4:	4603      	mov	r3, r0
 8003aa6:	2b00      	cmp	r3, #0
 8003aa8:	d001      	beq.n	8003aae <I2C_WaitOnBTFFlagUntilTimeout+0x1e>
 8003aaa:	2301      	movs	r3, #1
 8003aac:	e034      	b.n	8003b18 <I2C_WaitOnBTFFlagUntilTimeout+0x88>
 8003aae:	68bb      	ldr	r3, [r7, #8]
 8003ab0:	f1b3 3fff 	cmp.w	r3, #4294967295
 8003ab4:	d028      	beq.n	8003b08 <I2C_WaitOnBTFFlagUntilTimeout+0x78>
 8003ab6:	f7fe fd01 	bl	80024bc <HAL_GetTick>
 8003aba:	4602      	mov	r2, r0
 8003abc:	687b      	ldr	r3, [r7, #4]
 8003abe:	1ad3      	subs	r3, r2, r3
 8003ac0:	68ba      	ldr	r2, [r7, #8]
 8003ac2:	429a      	cmp	r2, r3
 8003ac4:	d302      	bcc.n	8003acc <I2C_WaitOnBTFFlagUntilTimeout+0x3c>
 8003ac6:	68bb      	ldr	r3, [r7, #8]
 8003ac8:	2b00      	cmp	r3, #0
 8003aca:	d11d      	bne.n	8003b08 <I2C_WaitOnBTFFlagUntilTimeout+0x78>
 8003acc:	68fb      	ldr	r3, [r7, #12]
 8003ace:	681b      	ldr	r3, [r3, #0]
 8003ad0:	695b      	ldr	r3, [r3, #20]
 8003ad2:	f003 0304 	and.w	r3, r3, #4
 8003ad6:	2b04      	cmp	r3, #4
 8003ad8:	d016      	beq.n	8003b08 <I2C_WaitOnBTFFlagUntilTimeout+0x78>
 8003ada:	68fb      	ldr	r3, [r7, #12]
 8003adc:	2200      	movs	r2, #0
 8003ade:	631a      	str	r2, [r3, #48]	@ 0x30
 8003ae0:	68fb      	ldr	r3, [r7, #12]
 8003ae2:	2220      	movs	r2, #32
 8003ae4:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8003ae8:	68fb      	ldr	r3, [r7, #12]
 8003aea:	2200      	movs	r2, #0
 8003aec:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8003af0:	68fb      	ldr	r3, [r7, #12]
 8003af2:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003af4:	f043 0220 	orr.w	r2, r3, #32
 8003af8:	68fb      	ldr	r3, [r7, #12]
 8003afa:	641a      	str	r2, [r3, #64]	@ 0x40
 8003afc:	68fb      	ldr	r3, [r7, #12]
 8003afe:	2200      	movs	r2, #0
 8003b00:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8003b04:	2301      	movs	r3, #1
 8003b06:	e007      	b.n	8003b18 <I2C_WaitOnBTFFlagUntilTimeout+0x88>
 8003b08:	68fb      	ldr	r3, [r7, #12]
 8003b0a:	681b      	ldr	r3, [r3, #0]
 8003b0c:	695b      	ldr	r3, [r3, #20]
 8003b0e:	f003 0304 	and.w	r3, r3, #4
 8003b12:	2b04      	cmp	r3, #4
 8003b14:	d1c3      	bne.n	8003a9e <I2C_WaitOnBTFFlagUntilTimeout+0xe>
 8003b16:	2300      	movs	r3, #0
 8003b18:	4618      	mov	r0, r3
 8003b1a:	3710      	adds	r7, #16
 8003b1c:	46bd      	mov	sp, r7
 8003b1e:	bd80      	pop	{r7, pc}

08003b20 <I2C_WaitOnRXNEFlagUntilTimeout>:
 8003b20:	b580      	push	{r7, lr}
 8003b22:	b084      	sub	sp, #16
 8003b24:	af00      	add	r7, sp, #0
 8003b26:	60f8      	str	r0, [r7, #12]
 8003b28:	60b9      	str	r1, [r7, #8]
 8003b2a:	607a      	str	r2, [r7, #4]
 8003b2c:	e049      	b.n	8003bc2 <I2C_WaitOnRXNEFlagUntilTimeout+0xa2>
 8003b2e:	68fb      	ldr	r3, [r7, #12]
 8003b30:	681b      	ldr	r3, [r3, #0]
 8003b32:	695b      	ldr	r3, [r3, #20]
 8003b34:	f003 0310 	and.w	r3, r3, #16
 8003b38:	2b10      	cmp	r3, #16
 8003b3a:	d119      	bne.n	8003b70 <I2C_WaitOnRXNEFlagUntilTimeout+0x50>
 8003b3c:	68fb      	ldr	r3, [r7, #12]
 8003b3e:	681b      	ldr	r3, [r3, #0]
 8003b40:	f06f 0210 	mvn.w	r2, #16
 8003b44:	615a      	str	r2, [r3, #20]
 8003b46:	68fb      	ldr	r3, [r7, #12]
 8003b48:	2200      	movs	r2, #0
 8003b4a:	631a      	str	r2, [r3, #48]	@ 0x30
 8003b4c:	68fb      	ldr	r3, [r7, #12]
 8003b4e:	2220      	movs	r2, #32
 8003b50:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8003b54:	68fb      	ldr	r3, [r7, #12]
 8003b56:	2200      	movs	r2, #0
 8003b58:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8003b5c:	68fb      	ldr	r3, [r7, #12]
 8003b5e:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 8003b60:	68fb      	ldr	r3, [r7, #12]
 8003b62:	641a      	str	r2, [r3, #64]	@ 0x40
 8003b64:	68fb      	ldr	r3, [r7, #12]
 8003b66:	2200      	movs	r2, #0
 8003b68:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8003b6c:	2301      	movs	r3, #1
 8003b6e:	e030      	b.n	8003bd2 <I2C_WaitOnRXNEFlagUntilTimeout+0xb2>
 8003b70:	f7fe fca4 	bl	80024bc <HAL_GetTick>
 8003b74:	4602      	mov	r2, r0
 8003b76:	687b      	ldr	r3, [r7, #4]
 8003b78:	1ad3      	subs	r3, r2, r3
 8003b7a:	68ba      	ldr	r2, [r7, #8]
 8003b7c:	429a      	cmp	r2, r3
 8003b7e:	d302      	bcc.n	8003b86 <I2C_WaitOnRXNEFlagUntilTimeout+0x66>
 8003b80:	68bb      	ldr	r3, [r7, #8]
 8003b82:	2b00      	cmp	r3, #0
 8003b84:	d11d      	bne.n	8003bc2 <I2C_WaitOnRXNEFlagUntilTimeout+0xa2>
 8003b86:	68fb      	ldr	r3, [r7, #12]
 8003b88:	681b      	ldr	r3, [r3, #0]
 8003b8a:	695b      	ldr	r3, [r3, #20]
 8003b8c:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8003b90:	2b40      	cmp	r3, #64	@ 0x40
 8003b92:	d016      	beq.n	8003bc2 <I2C_WaitOnRXNEFlagUntilTimeout+0xa2>
 8003b94:	68fb      	ldr	r3, [r7, #12]
 8003b96:	2200      	movs	r2, #0
 8003b98:	631a      	str	r2, [r3, #48]	@ 0x30
 8003b9a:	68fb      	ldr	r3, [r7, #12]
 8003b9c:	2220      	movs	r2, #32
 8003b9e:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8003ba2:	68fb      	ldr	r3, [r7, #12]
 8003ba4:	2200      	movs	r2, #0
 8003ba6:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8003baa:	68fb      	ldr	r3, [r7, #12]
 8003bac:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003bae:	f043 0220 	orr.w	r2, r3, #32
 8003bb2:	68fb      	ldr	r3, [r7, #12]
 8003bb4:	641a      	str	r2, [r3, #64]	@ 0x40
 8003bb6:	68fb      	ldr	r3, [r7, #12]
 8003bb8:	2200      	movs	r2, #0
 8003bba:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8003bbe:	2301      	movs	r3, #1
 8003bc0:	e007      	b.n	8003bd2 <I2C_WaitOnRXNEFlagUntilTimeout+0xb2>
 8003bc2:	68fb      	ldr	r3, [r7, #12]
 8003bc4:	681b      	ldr	r3, [r3, #0]
 8003bc6:	695b      	ldr	r3, [r3, #20]
 8003bc8:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8003bcc:	2b40      	cmp	r3, #64	@ 0x40
 8003bce:	d1ae      	bne.n	8003b2e <I2C_WaitOnRXNEFlagUntilTimeout+0xe>
 8003bd0:	2300      	movs	r3, #0
 8003bd2:	4618      	mov	r0, r3
 8003bd4:	3710      	adds	r7, #16
 8003bd6:	46bd      	mov	sp, r7
 8003bd8:	bd80      	pop	{r7, pc}

08003bda <I2C_IsAcknowledgeFailed>:
 8003bda:	b480      	push	{r7}
 8003bdc:	b083      	sub	sp, #12
 8003bde:	af00      	add	r7, sp, #0
 8003be0:	6078      	str	r0, [r7, #4]
 8003be2:	687b      	ldr	r3, [r7, #4]
 8003be4:	681b      	ldr	r3, [r3, #0]
 8003be6:	695b      	ldr	r3, [r3, #20]
 8003be8:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8003bec:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8003bf0:	d11b      	bne.n	8003c2a <I2C_IsAcknowledgeFailed+0x50>
 8003bf2:	687b      	ldr	r3, [r7, #4]
 8003bf4:	681b      	ldr	r3, [r3, #0]
 8003bf6:	f46f 6280 	mvn.w	r2, #1024	@ 0x400
 8003bfa:	615a      	str	r2, [r3, #20]
 8003bfc:	687b      	ldr	r3, [r7, #4]
 8003bfe:	2200      	movs	r2, #0
 8003c00:	631a      	str	r2, [r3, #48]	@ 0x30
 8003c02:	687b      	ldr	r3, [r7, #4]
 8003c04:	2220      	movs	r2, #32
 8003c06:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8003c0a:	687b      	ldr	r3, [r7, #4]
 8003c0c:	2200      	movs	r2, #0
 8003c0e:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8003c12:	687b      	ldr	r3, [r7, #4]
 8003c14:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003c16:	f043 0204 	orr.w	r2, r3, #4
 8003c1a:	687b      	ldr	r3, [r7, #4]
 8003c1c:	641a      	str	r2, [r3, #64]	@ 0x40
 8003c1e:	687b      	ldr	r3, [r7, #4]
 8003c20:	2200      	movs	r2, #0
 8003c22:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8003c26:	2301      	movs	r3, #1
 8003c28:	e000      	b.n	8003c2c <I2C_IsAcknowledgeFailed+0x52>
 8003c2a:	2300      	movs	r3, #0
 8003c2c:	4618      	mov	r0, r3
 8003c2e:	370c      	adds	r7, #12
 8003c30:	46bd      	mov	sp, r7
 8003c32:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003c36:	4770      	bx	lr

08003c38 <HAL_RCC_ClockConfig>:
 8003c38:	b580      	push	{r7, lr}
 8003c3a:	b084      	sub	sp, #16
 8003c3c:	af00      	add	r7, sp, #0
 8003c3e:	6078      	str	r0, [r7, #4]
 8003c40:	6039      	str	r1, [r7, #0]
 8003c42:	687b      	ldr	r3, [r7, #4]
 8003c44:	2b00      	cmp	r3, #0
 8003c46:	d101      	bne.n	8003c4c <HAL_RCC_ClockConfig+0x14>
 8003c48:	2301      	movs	r3, #1
 8003c4a:	e0cc      	b.n	8003de6 <HAL_RCC_ClockConfig+0x1ae>
 8003c4c:	4b68      	ldr	r3, [pc, #416]	@ (8003df0 <HAL_RCC_ClockConfig+0x1b8>)
 8003c4e:	681b      	ldr	r3, [r3, #0]
 8003c50:	f003 030f 	and.w	r3, r3, #15
 8003c54:	683a      	ldr	r2, [r7, #0]
 8003c56:	429a      	cmp	r2, r3
 8003c58:	d90c      	bls.n	8003c74 <HAL_RCC_ClockConfig+0x3c>
 8003c5a:	4b65      	ldr	r3, [pc, #404]	@ (8003df0 <HAL_RCC_ClockConfig+0x1b8>)
 8003c5c:	683a      	ldr	r2, [r7, #0]
 8003c5e:	b2d2      	uxtb	r2, r2
 8003c60:	701a      	strb	r2, [r3, #0]
 8003c62:	4b63      	ldr	r3, [pc, #396]	@ (8003df0 <HAL_RCC_ClockConfig+0x1b8>)
 8003c64:	681b      	ldr	r3, [r3, #0]
 8003c66:	f003 030f 	and.w	r3, r3, #15
 8003c6a:	683a      	ldr	r2, [r7, #0]
 8003c6c:	429a      	cmp	r2, r3
 8003c6e:	d001      	beq.n	8003c74 <HAL_RCC_ClockConfig+0x3c>
 8003c70:	2301      	movs	r3, #1
 8003c72:	e0b8      	b.n	8003de6 <HAL_RCC_ClockConfig+0x1ae>
 8003c74:	687b      	ldr	r3, [r7, #4]
 8003c76:	681b      	ldr	r3, [r3, #0]
 8003c78:	f003 0302 	and.w	r3, r3, #2
 8003c7c:	2b00      	cmp	r3, #0
 8003c7e:	d020      	beq.n	8003cc2 <HAL_RCC_ClockConfig+0x8a>
 8003c80:	687b      	ldr	r3, [r7, #4]
 8003c82:	681b      	ldr	r3, [r3, #0]
 8003c84:	f003 0304 	and.w	r3, r3, #4
 8003c88:	2b00      	cmp	r3, #0
 8003c8a:	d005      	beq.n	8003c98 <HAL_RCC_ClockConfig+0x60>
 8003c8c:	4b59      	ldr	r3, [pc, #356]	@ (8003df4 <HAL_RCC_ClockConfig+0x1bc>)
 8003c8e:	689b      	ldr	r3, [r3, #8]
 8003c90:	4a58      	ldr	r2, [pc, #352]	@ (8003df4 <HAL_RCC_ClockConfig+0x1bc>)
 8003c92:	f443 53e0 	orr.w	r3, r3, #7168	@ 0x1c00
 8003c96:	6093      	str	r3, [r2, #8]
 8003c98:	687b      	ldr	r3, [r7, #4]
 8003c9a:	681b      	ldr	r3, [r3, #0]
 8003c9c:	f003 0308 	and.w	r3, r3, #8
 8003ca0:	2b00      	cmp	r3, #0
 8003ca2:	d005      	beq.n	8003cb0 <HAL_RCC_ClockConfig+0x78>
 8003ca4:	4b53      	ldr	r3, [pc, #332]	@ (8003df4 <HAL_RCC_ClockConfig+0x1bc>)
 8003ca6:	689b      	ldr	r3, [r3, #8]
 8003ca8:	4a52      	ldr	r2, [pc, #328]	@ (8003df4 <HAL_RCC_ClockConfig+0x1bc>)
 8003caa:	f443 4360 	orr.w	r3, r3, #57344	@ 0xe000
 8003cae:	6093      	str	r3, [r2, #8]
 8003cb0:	4b50      	ldr	r3, [pc, #320]	@ (8003df4 <HAL_RCC_ClockConfig+0x1bc>)
 8003cb2:	689b      	ldr	r3, [r3, #8]
 8003cb4:	f023 02f0 	bic.w	r2, r3, #240	@ 0xf0
 8003cb8:	687b      	ldr	r3, [r7, #4]
 8003cba:	689b      	ldr	r3, [r3, #8]
 8003cbc:	494d      	ldr	r1, [pc, #308]	@ (8003df4 <HAL_RCC_ClockConfig+0x1bc>)
 8003cbe:	4313      	orrs	r3, r2
 8003cc0:	608b      	str	r3, [r1, #8]
 8003cc2:	687b      	ldr	r3, [r7, #4]
 8003cc4:	681b      	ldr	r3, [r3, #0]
 8003cc6:	f003 0301 	and.w	r3, r3, #1
 8003cca:	2b00      	cmp	r3, #0
 8003ccc:	d044      	beq.n	8003d58 <HAL_RCC_ClockConfig+0x120>
 8003cce:	687b      	ldr	r3, [r7, #4]
 8003cd0:	685b      	ldr	r3, [r3, #4]
 8003cd2:	2b01      	cmp	r3, #1
 8003cd4:	d107      	bne.n	8003ce6 <HAL_RCC_ClockConfig+0xae>
 8003cd6:	4b47      	ldr	r3, [pc, #284]	@ (8003df4 <HAL_RCC_ClockConfig+0x1bc>)
 8003cd8:	681b      	ldr	r3, [r3, #0]
 8003cda:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8003cde:	2b00      	cmp	r3, #0
 8003ce0:	d119      	bne.n	8003d16 <HAL_RCC_ClockConfig+0xde>
 8003ce2:	2301      	movs	r3, #1
 8003ce4:	e07f      	b.n	8003de6 <HAL_RCC_ClockConfig+0x1ae>
 8003ce6:	687b      	ldr	r3, [r7, #4]
 8003ce8:	685b      	ldr	r3, [r3, #4]
 8003cea:	2b02      	cmp	r3, #2
 8003cec:	d003      	beq.n	8003cf6 <HAL_RCC_ClockConfig+0xbe>
 8003cee:	687b      	ldr	r3, [r7, #4]
 8003cf0:	685b      	ldr	r3, [r3, #4]
 8003cf2:	2b03      	cmp	r3, #3
 8003cf4:	d107      	bne.n	8003d06 <HAL_RCC_ClockConfig+0xce>
 8003cf6:	4b3f      	ldr	r3, [pc, #252]	@ (8003df4 <HAL_RCC_ClockConfig+0x1bc>)
 8003cf8:	681b      	ldr	r3, [r3, #0]
 8003cfa:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8003cfe:	2b00      	cmp	r3, #0
 8003d00:	d109      	bne.n	8003d16 <HAL_RCC_ClockConfig+0xde>
 8003d02:	2301      	movs	r3, #1
 8003d04:	e06f      	b.n	8003de6 <HAL_RCC_ClockConfig+0x1ae>
 8003d06:	4b3b      	ldr	r3, [pc, #236]	@ (8003df4 <HAL_RCC_ClockConfig+0x1bc>)
 8003d08:	681b      	ldr	r3, [r3, #0]
 8003d0a:	f003 0302 	and.w	r3, r3, #2
 8003d0e:	2b00      	cmp	r3, #0
 8003d10:	d101      	bne.n	8003d16 <HAL_RCC_ClockConfig+0xde>
 8003d12:	2301      	movs	r3, #1
 8003d14:	e067      	b.n	8003de6 <HAL_RCC_ClockConfig+0x1ae>
 8003d16:	4b37      	ldr	r3, [pc, #220]	@ (8003df4 <HAL_RCC_ClockConfig+0x1bc>)
 8003d18:	689b      	ldr	r3, [r3, #8]
 8003d1a:	f023 0203 	bic.w	r2, r3, #3
 8003d1e:	687b      	ldr	r3, [r7, #4]
 8003d20:	685b      	ldr	r3, [r3, #4]
 8003d22:	4934      	ldr	r1, [pc, #208]	@ (8003df4 <HAL_RCC_ClockConfig+0x1bc>)
 8003d24:	4313      	orrs	r3, r2
 8003d26:	608b      	str	r3, [r1, #8]
 8003d28:	f7fe fbc8 	bl	80024bc <HAL_GetTick>
 8003d2c:	60f8      	str	r0, [r7, #12]
 8003d2e:	e00a      	b.n	8003d46 <HAL_RCC_ClockConfig+0x10e>
 8003d30:	f7fe fbc4 	bl	80024bc <HAL_GetTick>
 8003d34:	4602      	mov	r2, r0
 8003d36:	68fb      	ldr	r3, [r7, #12]
 8003d38:	1ad3      	subs	r3, r2, r3
 8003d3a:	f241 3288 	movw	r2, #5000	@ 0x1388
 8003d3e:	4293      	cmp	r3, r2
 8003d40:	d901      	bls.n	8003d46 <HAL_RCC_ClockConfig+0x10e>
 8003d42:	2303      	movs	r3, #3
 8003d44:	e04f      	b.n	8003de6 <HAL_RCC_ClockConfig+0x1ae>
 8003d46:	4b2b      	ldr	r3, [pc, #172]	@ (8003df4 <HAL_RCC_ClockConfig+0x1bc>)
 8003d48:	689b      	ldr	r3, [r3, #8]
 8003d4a:	f003 020c 	and.w	r2, r3, #12
 8003d4e:	687b      	ldr	r3, [r7, #4]
 8003d50:	685b      	ldr	r3, [r3, #4]
 8003d52:	009b      	lsls	r3, r3, #2
 8003d54:	429a      	cmp	r2, r3
 8003d56:	d1eb      	bne.n	8003d30 <HAL_RCC_ClockConfig+0xf8>
 8003d58:	4b25      	ldr	r3, [pc, #148]	@ (8003df0 <HAL_RCC_ClockConfig+0x1b8>)
 8003d5a:	681b      	ldr	r3, [r3, #0]
 8003d5c:	f003 030f 	and.w	r3, r3, #15
 8003d60:	683a      	ldr	r2, [r7, #0]
 8003d62:	429a      	cmp	r2, r3
 8003d64:	d20c      	bcs.n	8003d80 <HAL_RCC_ClockConfig+0x148>
 8003d66:	4b22      	ldr	r3, [pc, #136]	@ (8003df0 <HAL_RCC_ClockConfig+0x1b8>)
 8003d68:	683a      	ldr	r2, [r7, #0]
 8003d6a:	b2d2      	uxtb	r2, r2
 8003d6c:	701a      	strb	r2, [r3, #0]
 8003d6e:	4b20      	ldr	r3, [pc, #128]	@ (8003df0 <HAL_RCC_ClockConfig+0x1b8>)
 8003d70:	681b      	ldr	r3, [r3, #0]
 8003d72:	f003 030f 	and.w	r3, r3, #15
 8003d76:	683a      	ldr	r2, [r7, #0]
 8003d78:	429a      	cmp	r2, r3
 8003d7a:	d001      	beq.n	8003d80 <HAL_RCC_ClockConfig+0x148>
 8003d7c:	2301      	movs	r3, #1
 8003d7e:	e032      	b.n	8003de6 <HAL_RCC_ClockConfig+0x1ae>
 8003d80:	687b      	ldr	r3, [r7, #4]
 8003d82:	681b      	ldr	r3, [r3, #0]
 8003d84:	f003 0304 	and.w	r3, r3, #4
 8003d88:	2b00      	cmp	r3, #0
 8003d8a:	d008      	beq.n	8003d9e <HAL_RCC_ClockConfig+0x166>
 8003d8c:	4b19      	ldr	r3, [pc, #100]	@ (8003df4 <HAL_RCC_ClockConfig+0x1bc>)
 8003d8e:	689b      	ldr	r3, [r3, #8]
 8003d90:	f423 52e0 	bic.w	r2, r3, #7168	@ 0x1c00
 8003d94:	687b      	ldr	r3, [r7, #4]
 8003d96:	68db      	ldr	r3, [r3, #12]
 8003d98:	4916      	ldr	r1, [pc, #88]	@ (8003df4 <HAL_RCC_ClockConfig+0x1bc>)
 8003d9a:	4313      	orrs	r3, r2
 8003d9c:	608b      	str	r3, [r1, #8]
 8003d9e:	687b      	ldr	r3, [r7, #4]
 8003da0:	681b      	ldr	r3, [r3, #0]
 8003da2:	f003 0308 	and.w	r3, r3, #8
 8003da6:	2b00      	cmp	r3, #0
 8003da8:	d009      	beq.n	8003dbe <HAL_RCC_ClockConfig+0x186>
 8003daa:	4b12      	ldr	r3, [pc, #72]	@ (8003df4 <HAL_RCC_ClockConfig+0x1bc>)
 8003dac:	689b      	ldr	r3, [r3, #8]
 8003dae:	f423 4260 	bic.w	r2, r3, #57344	@ 0xe000
 8003db2:	687b      	ldr	r3, [r7, #4]
 8003db4:	691b      	ldr	r3, [r3, #16]
 8003db6:	00db      	lsls	r3, r3, #3
 8003db8:	490e      	ldr	r1, [pc, #56]	@ (8003df4 <HAL_RCC_ClockConfig+0x1bc>)
 8003dba:	4313      	orrs	r3, r2
 8003dbc:	608b      	str	r3, [r1, #8]
 8003dbe:	f000 f855 	bl	8003e6c <HAL_RCC_GetSysClockFreq>
 8003dc2:	4602      	mov	r2, r0
 8003dc4:	4b0b      	ldr	r3, [pc, #44]	@ (8003df4 <HAL_RCC_ClockConfig+0x1bc>)
 8003dc6:	689b      	ldr	r3, [r3, #8]
 8003dc8:	091b      	lsrs	r3, r3, #4
 8003dca:	f003 030f 	and.w	r3, r3, #15
 8003dce:	490a      	ldr	r1, [pc, #40]	@ (8003df8 <HAL_RCC_ClockConfig+0x1c0>)
 8003dd0:	5ccb      	ldrb	r3, [r1, r3]
 8003dd2:	fa22 f303 	lsr.w	r3, r2, r3
 8003dd6:	4a09      	ldr	r2, [pc, #36]	@ (8003dfc <HAL_RCC_ClockConfig+0x1c4>)
 8003dd8:	6013      	str	r3, [r2, #0]
 8003dda:	4b09      	ldr	r3, [pc, #36]	@ (8003e00 <HAL_RCC_ClockConfig+0x1c8>)
 8003ddc:	681b      	ldr	r3, [r3, #0]
 8003dde:	4618      	mov	r0, r3
 8003de0:	f7fe fb28 	bl	8002434 <HAL_InitTick>
 8003de4:	2300      	movs	r3, #0
 8003de6:	4618      	mov	r0, r3
 8003de8:	3710      	adds	r7, #16
 8003dea:	46bd      	mov	sp, r7
 8003dec:	bd80      	pop	{r7, pc}
 8003dee:	bf00      	nop
 8003df0:	40023c00 	.word	0x40023c00
 8003df4:	40023800 	.word	0x40023800
 8003df8:	08009214 	.word	0x08009214
 8003dfc:	20000030 	.word	0x20000030
 8003e00:	20000034 	.word	0x20000034

08003e04 <HAL_RCC_GetHCLKFreq>:
 8003e04:	b480      	push	{r7}
 8003e06:	af00      	add	r7, sp, #0
 8003e08:	4b03      	ldr	r3, [pc, #12]	@ (8003e18 <HAL_RCC_GetHCLKFreq+0x14>)
 8003e0a:	681b      	ldr	r3, [r3, #0]
 8003e0c:	4618      	mov	r0, r3
 8003e0e:	46bd      	mov	sp, r7
 8003e10:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003e14:	4770      	bx	lr
 8003e16:	bf00      	nop
 8003e18:	20000030 	.word	0x20000030

08003e1c <HAL_RCC_GetPCLK1Freq>:
 8003e1c:	b580      	push	{r7, lr}
 8003e1e:	af00      	add	r7, sp, #0
 8003e20:	f7ff fff0 	bl	8003e04 <HAL_RCC_GetHCLKFreq>
 8003e24:	4602      	mov	r2, r0
 8003e26:	4b05      	ldr	r3, [pc, #20]	@ (8003e3c <HAL_RCC_GetPCLK1Freq+0x20>)
 8003e28:	689b      	ldr	r3, [r3, #8]
 8003e2a:	0a9b      	lsrs	r3, r3, #10
 8003e2c:	f003 0307 	and.w	r3, r3, #7
 8003e30:	4903      	ldr	r1, [pc, #12]	@ (8003e40 <HAL_RCC_GetPCLK1Freq+0x24>)
 8003e32:	5ccb      	ldrb	r3, [r1, r3]
 8003e34:	fa22 f303 	lsr.w	r3, r2, r3
 8003e38:	4618      	mov	r0, r3
 8003e3a:	bd80      	pop	{r7, pc}
 8003e3c:	40023800 	.word	0x40023800
 8003e40:	08009224 	.word	0x08009224

08003e44 <HAL_RCC_GetPCLK2Freq>:
 8003e44:	b580      	push	{r7, lr}
 8003e46:	af00      	add	r7, sp, #0
 8003e48:	f7ff ffdc 	bl	8003e04 <HAL_RCC_GetHCLKFreq>
 8003e4c:	4602      	mov	r2, r0
 8003e4e:	4b05      	ldr	r3, [pc, #20]	@ (8003e64 <HAL_RCC_GetPCLK2Freq+0x20>)
 8003e50:	689b      	ldr	r3, [r3, #8]
 8003e52:	0b5b      	lsrs	r3, r3, #13
 8003e54:	f003 0307 	and.w	r3, r3, #7
 8003e58:	4903      	ldr	r1, [pc, #12]	@ (8003e68 <HAL_RCC_GetPCLK2Freq+0x24>)
 8003e5a:	5ccb      	ldrb	r3, [r1, r3]
 8003e5c:	fa22 f303 	lsr.w	r3, r2, r3
 8003e60:	4618      	mov	r0, r3
 8003e62:	bd80      	pop	{r7, pc}
 8003e64:	40023800 	.word	0x40023800
 8003e68:	08009224 	.word	0x08009224

08003e6c <HAL_RCC_GetSysClockFreq>:
 8003e6c:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 8003e70:	b0ae      	sub	sp, #184	@ 0xb8
 8003e72:	af00      	add	r7, sp, #0
 8003e74:	2300      	movs	r3, #0
 8003e76:	f8c7 30ac 	str.w	r3, [r7, #172]	@ 0xac
 8003e7a:	2300      	movs	r3, #0
 8003e7c:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
 8003e80:	2300      	movs	r3, #0
 8003e82:	f8c7 30a8 	str.w	r3, [r7, #168]	@ 0xa8
 8003e86:	2300      	movs	r3, #0
 8003e88:	f8c7 30a4 	str.w	r3, [r7, #164]	@ 0xa4
 8003e8c:	2300      	movs	r3, #0
 8003e8e:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
 8003e92:	4bcb      	ldr	r3, [pc, #812]	@ (80041c0 <HAL_RCC_GetSysClockFreq+0x354>)
 8003e94:	689b      	ldr	r3, [r3, #8]
 8003e96:	f003 030c 	and.w	r3, r3, #12
 8003e9a:	2b0c      	cmp	r3, #12
 8003e9c:	f200 8206 	bhi.w	80042ac <HAL_RCC_GetSysClockFreq+0x440>
 8003ea0:	a201      	add	r2, pc, #4	@ (adr r2, 8003ea8 <HAL_RCC_GetSysClockFreq+0x3c>)
 8003ea2:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8003ea6:	bf00      	nop
 8003ea8:	08003edd 	.word	0x08003edd
 8003eac:	080042ad 	.word	0x080042ad
 8003eb0:	080042ad 	.word	0x080042ad
 8003eb4:	080042ad 	.word	0x080042ad
 8003eb8:	08003ee5 	.word	0x08003ee5
 8003ebc:	080042ad 	.word	0x080042ad
 8003ec0:	080042ad 	.word	0x080042ad
 8003ec4:	080042ad 	.word	0x080042ad
 8003ec8:	08003eed 	.word	0x08003eed
 8003ecc:	080042ad 	.word	0x080042ad
 8003ed0:	080042ad 	.word	0x080042ad
 8003ed4:	080042ad 	.word	0x080042ad
 8003ed8:	080040dd 	.word	0x080040dd
 8003edc:	4bb9      	ldr	r3, [pc, #740]	@ (80041c4 <HAL_RCC_GetSysClockFreq+0x358>)
 8003ede:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
 8003ee2:	e1e7      	b.n	80042b4 <HAL_RCC_GetSysClockFreq+0x448>
 8003ee4:	4bb8      	ldr	r3, [pc, #736]	@ (80041c8 <HAL_RCC_GetSysClockFreq+0x35c>)
 8003ee6:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
 8003eea:	e1e3      	b.n	80042b4 <HAL_RCC_GetSysClockFreq+0x448>
 8003eec:	4bb4      	ldr	r3, [pc, #720]	@ (80041c0 <HAL_RCC_GetSysClockFreq+0x354>)
 8003eee:	685b      	ldr	r3, [r3, #4]
 8003ef0:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 8003ef4:	f8c7 30ac 	str.w	r3, [r7, #172]	@ 0xac
 8003ef8:	4bb1      	ldr	r3, [pc, #708]	@ (80041c0 <HAL_RCC_GetSysClockFreq+0x354>)
 8003efa:	685b      	ldr	r3, [r3, #4]
 8003efc:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8003f00:	2b00      	cmp	r3, #0
 8003f02:	d071      	beq.n	8003fe8 <HAL_RCC_GetSysClockFreq+0x17c>
 8003f04:	4bae      	ldr	r3, [pc, #696]	@ (80041c0 <HAL_RCC_GetSysClockFreq+0x354>)
 8003f06:	685b      	ldr	r3, [r3, #4]
 8003f08:	099b      	lsrs	r3, r3, #6
 8003f0a:	2200      	movs	r2, #0
 8003f0c:	f8c7 3098 	str.w	r3, [r7, #152]	@ 0x98
 8003f10:	f8c7 209c 	str.w	r2, [r7, #156]	@ 0x9c
 8003f14:	f8d7 3098 	ldr.w	r3, [r7, #152]	@ 0x98
 8003f18:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8003f1c:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
 8003f20:	2300      	movs	r3, #0
 8003f22:	f8c7 3094 	str.w	r3, [r7, #148]	@ 0x94
 8003f26:	e9d7 4524 	ldrd	r4, r5, [r7, #144]	@ 0x90
 8003f2a:	4622      	mov	r2, r4
 8003f2c:	462b      	mov	r3, r5
 8003f2e:	f04f 0000 	mov.w	r0, #0
 8003f32:	f04f 0100 	mov.w	r1, #0
 8003f36:	0159      	lsls	r1, r3, #5
 8003f38:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 8003f3c:	0150      	lsls	r0, r2, #5
 8003f3e:	4602      	mov	r2, r0
 8003f40:	460b      	mov	r3, r1
 8003f42:	4621      	mov	r1, r4
 8003f44:	1a51      	subs	r1, r2, r1
 8003f46:	6439      	str	r1, [r7, #64]	@ 0x40
 8003f48:	4629      	mov	r1, r5
 8003f4a:	eb63 0301 	sbc.w	r3, r3, r1
 8003f4e:	647b      	str	r3, [r7, #68]	@ 0x44
 8003f50:	f04f 0200 	mov.w	r2, #0
 8003f54:	f04f 0300 	mov.w	r3, #0
 8003f58:	e9d7 8910 	ldrd	r8, r9, [r7, #64]	@ 0x40
 8003f5c:	4649      	mov	r1, r9
 8003f5e:	018b      	lsls	r3, r1, #6
 8003f60:	4641      	mov	r1, r8
 8003f62:	ea43 6391 	orr.w	r3, r3, r1, lsr #26
 8003f66:	4641      	mov	r1, r8
 8003f68:	018a      	lsls	r2, r1, #6
 8003f6a:	4641      	mov	r1, r8
 8003f6c:	1a51      	subs	r1, r2, r1
 8003f6e:	63b9      	str	r1, [r7, #56]	@ 0x38
 8003f70:	4649      	mov	r1, r9
 8003f72:	eb63 0301 	sbc.w	r3, r3, r1
 8003f76:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8003f78:	f04f 0200 	mov.w	r2, #0
 8003f7c:	f04f 0300 	mov.w	r3, #0
 8003f80:	e9d7 890e 	ldrd	r8, r9, [r7, #56]	@ 0x38
 8003f84:	4649      	mov	r1, r9
 8003f86:	00cb      	lsls	r3, r1, #3
 8003f88:	4641      	mov	r1, r8
 8003f8a:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 8003f8e:	4641      	mov	r1, r8
 8003f90:	00ca      	lsls	r2, r1, #3
 8003f92:	4610      	mov	r0, r2
 8003f94:	4619      	mov	r1, r3
 8003f96:	4603      	mov	r3, r0
 8003f98:	4622      	mov	r2, r4
 8003f9a:	189b      	adds	r3, r3, r2
 8003f9c:	633b      	str	r3, [r7, #48]	@ 0x30
 8003f9e:	462b      	mov	r3, r5
 8003fa0:	460a      	mov	r2, r1
 8003fa2:	eb42 0303 	adc.w	r3, r2, r3
 8003fa6:	637b      	str	r3, [r7, #52]	@ 0x34
 8003fa8:	f04f 0200 	mov.w	r2, #0
 8003fac:	f04f 0300 	mov.w	r3, #0
 8003fb0:	e9d7 450c 	ldrd	r4, r5, [r7, #48]	@ 0x30
 8003fb4:	4629      	mov	r1, r5
 8003fb6:	024b      	lsls	r3, r1, #9
 8003fb8:	4621      	mov	r1, r4
 8003fba:	ea43 53d1 	orr.w	r3, r3, r1, lsr #23
 8003fbe:	4621      	mov	r1, r4
 8003fc0:	024a      	lsls	r2, r1, #9
 8003fc2:	4610      	mov	r0, r2
 8003fc4:	4619      	mov	r1, r3
 8003fc6:	f8d7 30ac 	ldr.w	r3, [r7, #172]	@ 0xac
 8003fca:	2200      	movs	r2, #0
 8003fcc:	f8c7 3088 	str.w	r3, [r7, #136]	@ 0x88
 8003fd0:	f8c7 208c 	str.w	r2, [r7, #140]	@ 0x8c
 8003fd4:	e9d7 2322 	ldrd	r2, r3, [r7, #136]	@ 0x88
 8003fd8:	f7fc fe56 	bl	8000c88 <__aeabi_uldivmod>
 8003fdc:	4602      	mov	r2, r0
 8003fde:	460b      	mov	r3, r1
 8003fe0:	4613      	mov	r3, r2
 8003fe2:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
 8003fe6:	e067      	b.n	80040b8 <HAL_RCC_GetSysClockFreq+0x24c>
 8003fe8:	4b75      	ldr	r3, [pc, #468]	@ (80041c0 <HAL_RCC_GetSysClockFreq+0x354>)
 8003fea:	685b      	ldr	r3, [r3, #4]
 8003fec:	099b      	lsrs	r3, r3, #6
 8003fee:	2200      	movs	r2, #0
 8003ff0:	f8c7 3080 	str.w	r3, [r7, #128]	@ 0x80
 8003ff4:	f8c7 2084 	str.w	r2, [r7, #132]	@ 0x84
 8003ff8:	f8d7 3080 	ldr.w	r3, [r7, #128]	@ 0x80
 8003ffc:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8004000:	67bb      	str	r3, [r7, #120]	@ 0x78
 8004002:	2300      	movs	r3, #0
 8004004:	67fb      	str	r3, [r7, #124]	@ 0x7c
 8004006:	e9d7 451e 	ldrd	r4, r5, [r7, #120]	@ 0x78
 800400a:	4622      	mov	r2, r4
 800400c:	462b      	mov	r3, r5
 800400e:	f04f 0000 	mov.w	r0, #0
 8004012:	f04f 0100 	mov.w	r1, #0
 8004016:	0159      	lsls	r1, r3, #5
 8004018:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 800401c:	0150      	lsls	r0, r2, #5
 800401e:	4602      	mov	r2, r0
 8004020:	460b      	mov	r3, r1
 8004022:	4621      	mov	r1, r4
 8004024:	1a51      	subs	r1, r2, r1
 8004026:	62b9      	str	r1, [r7, #40]	@ 0x28
 8004028:	4629      	mov	r1, r5
 800402a:	eb63 0301 	sbc.w	r3, r3, r1
 800402e:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8004030:	f04f 0200 	mov.w	r2, #0
 8004034:	f04f 0300 	mov.w	r3, #0
 8004038:	e9d7 890a 	ldrd	r8, r9, [r7, #40]	@ 0x28
 800403c:	4649      	mov	r1, r9
 800403e:	018b      	lsls	r3, r1, #6
 8004040:	4641      	mov	r1, r8
 8004042:	ea43 6391 	orr.w	r3, r3, r1, lsr #26
 8004046:	4641      	mov	r1, r8
 8004048:	018a      	lsls	r2, r1, #6
 800404a:	4641      	mov	r1, r8
 800404c:	ebb2 0a01 	subs.w	sl, r2, r1
 8004050:	4649      	mov	r1, r9
 8004052:	eb63 0b01 	sbc.w	fp, r3, r1
 8004056:	f04f 0200 	mov.w	r2, #0
 800405a:	f04f 0300 	mov.w	r3, #0
 800405e:	ea4f 03cb 	mov.w	r3, fp, lsl #3
 8004062:	ea43 735a 	orr.w	r3, r3, sl, lsr #29
 8004066:	ea4f 02ca 	mov.w	r2, sl, lsl #3
 800406a:	4692      	mov	sl, r2
 800406c:	469b      	mov	fp, r3
 800406e:	4623      	mov	r3, r4
 8004070:	eb1a 0303 	adds.w	r3, sl, r3
 8004074:	623b      	str	r3, [r7, #32]
 8004076:	462b      	mov	r3, r5
 8004078:	eb4b 0303 	adc.w	r3, fp, r3
 800407c:	627b      	str	r3, [r7, #36]	@ 0x24
 800407e:	f04f 0200 	mov.w	r2, #0
 8004082:	f04f 0300 	mov.w	r3, #0
 8004086:	e9d7 4508 	ldrd	r4, r5, [r7, #32]
 800408a:	4629      	mov	r1, r5
 800408c:	028b      	lsls	r3, r1, #10
 800408e:	4621      	mov	r1, r4
 8004090:	ea43 5391 	orr.w	r3, r3, r1, lsr #22
 8004094:	4621      	mov	r1, r4
 8004096:	028a      	lsls	r2, r1, #10
 8004098:	4610      	mov	r0, r2
 800409a:	4619      	mov	r1, r3
 800409c:	f8d7 30ac 	ldr.w	r3, [r7, #172]	@ 0xac
 80040a0:	2200      	movs	r2, #0
 80040a2:	673b      	str	r3, [r7, #112]	@ 0x70
 80040a4:	677a      	str	r2, [r7, #116]	@ 0x74
 80040a6:	e9d7 231c 	ldrd	r2, r3, [r7, #112]	@ 0x70
 80040aa:	f7fc fded 	bl	8000c88 <__aeabi_uldivmod>
 80040ae:	4602      	mov	r2, r0
 80040b0:	460b      	mov	r3, r1
 80040b2:	4613      	mov	r3, r2
 80040b4:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
 80040b8:	4b41      	ldr	r3, [pc, #260]	@ (80041c0 <HAL_RCC_GetSysClockFreq+0x354>)
 80040ba:	685b      	ldr	r3, [r3, #4]
 80040bc:	0c1b      	lsrs	r3, r3, #16
 80040be:	f003 0303 	and.w	r3, r3, #3
 80040c2:	3301      	adds	r3, #1
 80040c4:	005b      	lsls	r3, r3, #1
 80040c6:	f8c7 30a8 	str.w	r3, [r7, #168]	@ 0xa8
 80040ca:	f8d7 20b4 	ldr.w	r2, [r7, #180]	@ 0xb4
 80040ce:	f8d7 30a8 	ldr.w	r3, [r7, #168]	@ 0xa8
 80040d2:	fbb2 f3f3 	udiv	r3, r2, r3
 80040d6:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
 80040da:	e0eb      	b.n	80042b4 <HAL_RCC_GetSysClockFreq+0x448>
 80040dc:	4b38      	ldr	r3, [pc, #224]	@ (80041c0 <HAL_RCC_GetSysClockFreq+0x354>)
 80040de:	685b      	ldr	r3, [r3, #4]
 80040e0:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 80040e4:	f8c7 30ac 	str.w	r3, [r7, #172]	@ 0xac
 80040e8:	4b35      	ldr	r3, [pc, #212]	@ (80041c0 <HAL_RCC_GetSysClockFreq+0x354>)
 80040ea:	685b      	ldr	r3, [r3, #4]
 80040ec:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 80040f0:	2b00      	cmp	r3, #0
 80040f2:	d06b      	beq.n	80041cc <HAL_RCC_GetSysClockFreq+0x360>
 80040f4:	4b32      	ldr	r3, [pc, #200]	@ (80041c0 <HAL_RCC_GetSysClockFreq+0x354>)
 80040f6:	685b      	ldr	r3, [r3, #4]
 80040f8:	099b      	lsrs	r3, r3, #6
 80040fa:	2200      	movs	r2, #0
 80040fc:	66bb      	str	r3, [r7, #104]	@ 0x68
 80040fe:	66fa      	str	r2, [r7, #108]	@ 0x6c
 8004100:	6ebb      	ldr	r3, [r7, #104]	@ 0x68
 8004102:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8004106:	663b      	str	r3, [r7, #96]	@ 0x60
 8004108:	2300      	movs	r3, #0
 800410a:	667b      	str	r3, [r7, #100]	@ 0x64
 800410c:	e9d7 4518 	ldrd	r4, r5, [r7, #96]	@ 0x60
 8004110:	4622      	mov	r2, r4
 8004112:	462b      	mov	r3, r5
 8004114:	f04f 0000 	mov.w	r0, #0
 8004118:	f04f 0100 	mov.w	r1, #0
 800411c:	0159      	lsls	r1, r3, #5
 800411e:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 8004122:	0150      	lsls	r0, r2, #5
 8004124:	4602      	mov	r2, r0
 8004126:	460b      	mov	r3, r1
 8004128:	4621      	mov	r1, r4
 800412a:	1a51      	subs	r1, r2, r1
 800412c:	61b9      	str	r1, [r7, #24]
 800412e:	4629      	mov	r1, r5
 8004130:	eb63 0301 	sbc.w	r3, r3, r1
 8004134:	61fb      	str	r3, [r7, #28]
 8004136:	f04f 0200 	mov.w	r2, #0
 800413a:	f04f 0300 	mov.w	r3, #0
 800413e:	e9d7 ab06 	ldrd	sl, fp, [r7, #24]
 8004142:	4659      	mov	r1, fp
 8004144:	018b      	lsls	r3, r1, #6
 8004146:	4651      	mov	r1, sl
 8004148:	ea43 6391 	orr.w	r3, r3, r1, lsr #26
 800414c:	4651      	mov	r1, sl
 800414e:	018a      	lsls	r2, r1, #6
 8004150:	4651      	mov	r1, sl
 8004152:	ebb2 0801 	subs.w	r8, r2, r1
 8004156:	4659      	mov	r1, fp
 8004158:	eb63 0901 	sbc.w	r9, r3, r1
 800415c:	f04f 0200 	mov.w	r2, #0
 8004160:	f04f 0300 	mov.w	r3, #0
 8004164:	ea4f 03c9 	mov.w	r3, r9, lsl #3
 8004168:	ea43 7358 	orr.w	r3, r3, r8, lsr #29
 800416c:	ea4f 02c8 	mov.w	r2, r8, lsl #3
 8004170:	4690      	mov	r8, r2
 8004172:	4699      	mov	r9, r3
 8004174:	4623      	mov	r3, r4
 8004176:	eb18 0303 	adds.w	r3, r8, r3
 800417a:	613b      	str	r3, [r7, #16]
 800417c:	462b      	mov	r3, r5
 800417e:	eb49 0303 	adc.w	r3, r9, r3
 8004182:	617b      	str	r3, [r7, #20]
 8004184:	f04f 0200 	mov.w	r2, #0
 8004188:	f04f 0300 	mov.w	r3, #0
 800418c:	e9d7 4504 	ldrd	r4, r5, [r7, #16]
 8004190:	4629      	mov	r1, r5
 8004192:	024b      	lsls	r3, r1, #9
 8004194:	4621      	mov	r1, r4
 8004196:	ea43 53d1 	orr.w	r3, r3, r1, lsr #23
 800419a:	4621      	mov	r1, r4
 800419c:	024a      	lsls	r2, r1, #9
 800419e:	4610      	mov	r0, r2
 80041a0:	4619      	mov	r1, r3
 80041a2:	f8d7 30ac 	ldr.w	r3, [r7, #172]	@ 0xac
 80041a6:	2200      	movs	r2, #0
 80041a8:	65bb      	str	r3, [r7, #88]	@ 0x58
 80041aa:	65fa      	str	r2, [r7, #92]	@ 0x5c
 80041ac:	e9d7 2316 	ldrd	r2, r3, [r7, #88]	@ 0x58
 80041b0:	f7fc fd6a 	bl	8000c88 <__aeabi_uldivmod>
 80041b4:	4602      	mov	r2, r0
 80041b6:	460b      	mov	r3, r1
 80041b8:	4613      	mov	r3, r2
 80041ba:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
 80041be:	e065      	b.n	800428c <HAL_RCC_GetSysClockFreq+0x420>
 80041c0:	40023800 	.word	0x40023800
 80041c4:	00f42400 	.word	0x00f42400
 80041c8:	007a1200 	.word	0x007a1200
 80041cc:	4b3d      	ldr	r3, [pc, #244]	@ (80042c4 <HAL_RCC_GetSysClockFreq+0x458>)
 80041ce:	685b      	ldr	r3, [r3, #4]
 80041d0:	099b      	lsrs	r3, r3, #6
 80041d2:	2200      	movs	r2, #0
 80041d4:	4618      	mov	r0, r3
 80041d6:	4611      	mov	r1, r2
 80041d8:	f3c0 0308 	ubfx	r3, r0, #0, #9
 80041dc:	653b      	str	r3, [r7, #80]	@ 0x50
 80041de:	2300      	movs	r3, #0
 80041e0:	657b      	str	r3, [r7, #84]	@ 0x54
 80041e2:	e9d7 8914 	ldrd	r8, r9, [r7, #80]	@ 0x50
 80041e6:	4642      	mov	r2, r8
 80041e8:	464b      	mov	r3, r9
 80041ea:	f04f 0000 	mov.w	r0, #0
 80041ee:	f04f 0100 	mov.w	r1, #0
 80041f2:	0159      	lsls	r1, r3, #5
 80041f4:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 80041f8:	0150      	lsls	r0, r2, #5
 80041fa:	4602      	mov	r2, r0
 80041fc:	460b      	mov	r3, r1
 80041fe:	4641      	mov	r1, r8
 8004200:	1a51      	subs	r1, r2, r1
 8004202:	60b9      	str	r1, [r7, #8]
 8004204:	4649      	mov	r1, r9
 8004206:	eb63 0301 	sbc.w	r3, r3, r1
 800420a:	60fb      	str	r3, [r7, #12]
 800420c:	f04f 0200 	mov.w	r2, #0
 8004210:	f04f 0300 	mov.w	r3, #0
 8004214:	e9d7 ab02 	ldrd	sl, fp, [r7, #8]
 8004218:	4659      	mov	r1, fp
 800421a:	018b      	lsls	r3, r1, #6
 800421c:	4651      	mov	r1, sl
 800421e:	ea43 6391 	orr.w	r3, r3, r1, lsr #26
 8004222:	4651      	mov	r1, sl
 8004224:	018a      	lsls	r2, r1, #6
 8004226:	4651      	mov	r1, sl
 8004228:	1a54      	subs	r4, r2, r1
 800422a:	4659      	mov	r1, fp
 800422c:	eb63 0501 	sbc.w	r5, r3, r1
 8004230:	f04f 0200 	mov.w	r2, #0
 8004234:	f04f 0300 	mov.w	r3, #0
 8004238:	00eb      	lsls	r3, r5, #3
 800423a:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 800423e:	00e2      	lsls	r2, r4, #3
 8004240:	4614      	mov	r4, r2
 8004242:	461d      	mov	r5, r3
 8004244:	4643      	mov	r3, r8
 8004246:	18e3      	adds	r3, r4, r3
 8004248:	603b      	str	r3, [r7, #0]
 800424a:	464b      	mov	r3, r9
 800424c:	eb45 0303 	adc.w	r3, r5, r3
 8004250:	607b      	str	r3, [r7, #4]
 8004252:	f04f 0200 	mov.w	r2, #0
 8004256:	f04f 0300 	mov.w	r3, #0
 800425a:	e9d7 4500 	ldrd	r4, r5, [r7]
 800425e:	4629      	mov	r1, r5
 8004260:	028b      	lsls	r3, r1, #10
 8004262:	4621      	mov	r1, r4
 8004264:	ea43 5391 	orr.w	r3, r3, r1, lsr #22
 8004268:	4621      	mov	r1, r4
 800426a:	028a      	lsls	r2, r1, #10
 800426c:	4610      	mov	r0, r2
 800426e:	4619      	mov	r1, r3
 8004270:	f8d7 30ac 	ldr.w	r3, [r7, #172]	@ 0xac
 8004274:	2200      	movs	r2, #0
 8004276:	64bb      	str	r3, [r7, #72]	@ 0x48
 8004278:	64fa      	str	r2, [r7, #76]	@ 0x4c
 800427a:	e9d7 2312 	ldrd	r2, r3, [r7, #72]	@ 0x48
 800427e:	f7fc fd03 	bl	8000c88 <__aeabi_uldivmod>
 8004282:	4602      	mov	r2, r0
 8004284:	460b      	mov	r3, r1
 8004286:	4613      	mov	r3, r2
 8004288:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
 800428c:	4b0d      	ldr	r3, [pc, #52]	@ (80042c4 <HAL_RCC_GetSysClockFreq+0x458>)
 800428e:	685b      	ldr	r3, [r3, #4]
 8004290:	0f1b      	lsrs	r3, r3, #28
 8004292:	f003 0307 	and.w	r3, r3, #7
 8004296:	f8c7 30a4 	str.w	r3, [r7, #164]	@ 0xa4
 800429a:	f8d7 20b4 	ldr.w	r2, [r7, #180]	@ 0xb4
 800429e:	f8d7 30a4 	ldr.w	r3, [r7, #164]	@ 0xa4
 80042a2:	fbb2 f3f3 	udiv	r3, r2, r3
 80042a6:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
 80042aa:	e003      	b.n	80042b4 <HAL_RCC_GetSysClockFreq+0x448>
 80042ac:	4b06      	ldr	r3, [pc, #24]	@ (80042c8 <HAL_RCC_GetSysClockFreq+0x45c>)
 80042ae:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
 80042b2:	bf00      	nop
 80042b4:	f8d7 30b0 	ldr.w	r3, [r7, #176]	@ 0xb0
 80042b8:	4618      	mov	r0, r3
 80042ba:	37b8      	adds	r7, #184	@ 0xb8
 80042bc:	46bd      	mov	sp, r7
 80042be:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 80042c2:	bf00      	nop
 80042c4:	40023800 	.word	0x40023800
 80042c8:	00f42400 	.word	0x00f42400

080042cc <HAL_RCC_OscConfig>:
 80042cc:	b580      	push	{r7, lr}
 80042ce:	b086      	sub	sp, #24
 80042d0:	af00      	add	r7, sp, #0
 80042d2:	6078      	str	r0, [r7, #4]
 80042d4:	687b      	ldr	r3, [r7, #4]
 80042d6:	2b00      	cmp	r3, #0
 80042d8:	d101      	bne.n	80042de <HAL_RCC_OscConfig+0x12>
 80042da:	2301      	movs	r3, #1
 80042dc:	e28d      	b.n	80047fa <HAL_RCC_OscConfig+0x52e>
 80042de:	687b      	ldr	r3, [r7, #4]
 80042e0:	681b      	ldr	r3, [r3, #0]
 80042e2:	f003 0301 	and.w	r3, r3, #1
 80042e6:	2b00      	cmp	r3, #0
 80042e8:	f000 8083 	beq.w	80043f2 <HAL_RCC_OscConfig+0x126>
 80042ec:	4b94      	ldr	r3, [pc, #592]	@ (8004540 <HAL_RCC_OscConfig+0x274>)
 80042ee:	689b      	ldr	r3, [r3, #8]
 80042f0:	f003 030c 	and.w	r3, r3, #12
 80042f4:	2b04      	cmp	r3, #4
 80042f6:	d019      	beq.n	800432c <HAL_RCC_OscConfig+0x60>
 80042f8:	4b91      	ldr	r3, [pc, #580]	@ (8004540 <HAL_RCC_OscConfig+0x274>)
 80042fa:	689b      	ldr	r3, [r3, #8]
 80042fc:	f003 030c 	and.w	r3, r3, #12
 8004300:	2b08      	cmp	r3, #8
 8004302:	d106      	bne.n	8004312 <HAL_RCC_OscConfig+0x46>
 8004304:	4b8e      	ldr	r3, [pc, #568]	@ (8004540 <HAL_RCC_OscConfig+0x274>)
 8004306:	685b      	ldr	r3, [r3, #4]
 8004308:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 800430c:	f5b3 0f80 	cmp.w	r3, #4194304	@ 0x400000
 8004310:	d00c      	beq.n	800432c <HAL_RCC_OscConfig+0x60>
 8004312:	4b8b      	ldr	r3, [pc, #556]	@ (8004540 <HAL_RCC_OscConfig+0x274>)
 8004314:	689b      	ldr	r3, [r3, #8]
 8004316:	f003 030c 	and.w	r3, r3, #12
 800431a:	2b0c      	cmp	r3, #12
 800431c:	d112      	bne.n	8004344 <HAL_RCC_OscConfig+0x78>
 800431e:	4b88      	ldr	r3, [pc, #544]	@ (8004540 <HAL_RCC_OscConfig+0x274>)
 8004320:	685b      	ldr	r3, [r3, #4]
 8004322:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8004326:	f5b3 0f80 	cmp.w	r3, #4194304	@ 0x400000
 800432a:	d10b      	bne.n	8004344 <HAL_RCC_OscConfig+0x78>
 800432c:	4b84      	ldr	r3, [pc, #528]	@ (8004540 <HAL_RCC_OscConfig+0x274>)
 800432e:	681b      	ldr	r3, [r3, #0]
 8004330:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8004334:	2b00      	cmp	r3, #0
 8004336:	d05b      	beq.n	80043f0 <HAL_RCC_OscConfig+0x124>
 8004338:	687b      	ldr	r3, [r7, #4]
 800433a:	685b      	ldr	r3, [r3, #4]
 800433c:	2b00      	cmp	r3, #0
 800433e:	d157      	bne.n	80043f0 <HAL_RCC_OscConfig+0x124>
 8004340:	2301      	movs	r3, #1
 8004342:	e25a      	b.n	80047fa <HAL_RCC_OscConfig+0x52e>
 8004344:	687b      	ldr	r3, [r7, #4]
 8004346:	685b      	ldr	r3, [r3, #4]
 8004348:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 800434c:	d106      	bne.n	800435c <HAL_RCC_OscConfig+0x90>
 800434e:	4b7c      	ldr	r3, [pc, #496]	@ (8004540 <HAL_RCC_OscConfig+0x274>)
 8004350:	681b      	ldr	r3, [r3, #0]
 8004352:	4a7b      	ldr	r2, [pc, #492]	@ (8004540 <HAL_RCC_OscConfig+0x274>)
 8004354:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8004358:	6013      	str	r3, [r2, #0]
 800435a:	e01d      	b.n	8004398 <HAL_RCC_OscConfig+0xcc>
 800435c:	687b      	ldr	r3, [r7, #4]
 800435e:	685b      	ldr	r3, [r3, #4]
 8004360:	f5b3 2fa0 	cmp.w	r3, #327680	@ 0x50000
 8004364:	d10c      	bne.n	8004380 <HAL_RCC_OscConfig+0xb4>
 8004366:	4b76      	ldr	r3, [pc, #472]	@ (8004540 <HAL_RCC_OscConfig+0x274>)
 8004368:	681b      	ldr	r3, [r3, #0]
 800436a:	4a75      	ldr	r2, [pc, #468]	@ (8004540 <HAL_RCC_OscConfig+0x274>)
 800436c:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 8004370:	6013      	str	r3, [r2, #0]
 8004372:	4b73      	ldr	r3, [pc, #460]	@ (8004540 <HAL_RCC_OscConfig+0x274>)
 8004374:	681b      	ldr	r3, [r3, #0]
 8004376:	4a72      	ldr	r2, [pc, #456]	@ (8004540 <HAL_RCC_OscConfig+0x274>)
 8004378:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 800437c:	6013      	str	r3, [r2, #0]
 800437e:	e00b      	b.n	8004398 <HAL_RCC_OscConfig+0xcc>
 8004380:	4b6f      	ldr	r3, [pc, #444]	@ (8004540 <HAL_RCC_OscConfig+0x274>)
 8004382:	681b      	ldr	r3, [r3, #0]
 8004384:	4a6e      	ldr	r2, [pc, #440]	@ (8004540 <HAL_RCC_OscConfig+0x274>)
 8004386:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 800438a:	6013      	str	r3, [r2, #0]
 800438c:	4b6c      	ldr	r3, [pc, #432]	@ (8004540 <HAL_RCC_OscConfig+0x274>)
 800438e:	681b      	ldr	r3, [r3, #0]
 8004390:	4a6b      	ldr	r2, [pc, #428]	@ (8004540 <HAL_RCC_OscConfig+0x274>)
 8004392:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 8004396:	6013      	str	r3, [r2, #0]
 8004398:	687b      	ldr	r3, [r7, #4]
 800439a:	685b      	ldr	r3, [r3, #4]
 800439c:	2b00      	cmp	r3, #0
 800439e:	d013      	beq.n	80043c8 <HAL_RCC_OscConfig+0xfc>
 80043a0:	f7fe f88c 	bl	80024bc <HAL_GetTick>
 80043a4:	6138      	str	r0, [r7, #16]
 80043a6:	e008      	b.n	80043ba <HAL_RCC_OscConfig+0xee>
 80043a8:	f7fe f888 	bl	80024bc <HAL_GetTick>
 80043ac:	4602      	mov	r2, r0
 80043ae:	693b      	ldr	r3, [r7, #16]
 80043b0:	1ad3      	subs	r3, r2, r3
 80043b2:	2b64      	cmp	r3, #100	@ 0x64
 80043b4:	d901      	bls.n	80043ba <HAL_RCC_OscConfig+0xee>
 80043b6:	2303      	movs	r3, #3
 80043b8:	e21f      	b.n	80047fa <HAL_RCC_OscConfig+0x52e>
 80043ba:	4b61      	ldr	r3, [pc, #388]	@ (8004540 <HAL_RCC_OscConfig+0x274>)
 80043bc:	681b      	ldr	r3, [r3, #0]
 80043be:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 80043c2:	2b00      	cmp	r3, #0
 80043c4:	d0f0      	beq.n	80043a8 <HAL_RCC_OscConfig+0xdc>
 80043c6:	e014      	b.n	80043f2 <HAL_RCC_OscConfig+0x126>
 80043c8:	f7fe f878 	bl	80024bc <HAL_GetTick>
 80043cc:	6138      	str	r0, [r7, #16]
 80043ce:	e008      	b.n	80043e2 <HAL_RCC_OscConfig+0x116>
 80043d0:	f7fe f874 	bl	80024bc <HAL_GetTick>
 80043d4:	4602      	mov	r2, r0
 80043d6:	693b      	ldr	r3, [r7, #16]
 80043d8:	1ad3      	subs	r3, r2, r3
 80043da:	2b64      	cmp	r3, #100	@ 0x64
 80043dc:	d901      	bls.n	80043e2 <HAL_RCC_OscConfig+0x116>
 80043de:	2303      	movs	r3, #3
 80043e0:	e20b      	b.n	80047fa <HAL_RCC_OscConfig+0x52e>
 80043e2:	4b57      	ldr	r3, [pc, #348]	@ (8004540 <HAL_RCC_OscConfig+0x274>)
 80043e4:	681b      	ldr	r3, [r3, #0]
 80043e6:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 80043ea:	2b00      	cmp	r3, #0
 80043ec:	d1f0      	bne.n	80043d0 <HAL_RCC_OscConfig+0x104>
 80043ee:	e000      	b.n	80043f2 <HAL_RCC_OscConfig+0x126>
 80043f0:	bf00      	nop
 80043f2:	687b      	ldr	r3, [r7, #4]
 80043f4:	681b      	ldr	r3, [r3, #0]
 80043f6:	f003 0302 	and.w	r3, r3, #2
 80043fa:	2b00      	cmp	r3, #0
 80043fc:	d06f      	beq.n	80044de <HAL_RCC_OscConfig+0x212>
 80043fe:	4b50      	ldr	r3, [pc, #320]	@ (8004540 <HAL_RCC_OscConfig+0x274>)
 8004400:	689b      	ldr	r3, [r3, #8]
 8004402:	f003 030c 	and.w	r3, r3, #12
 8004406:	2b00      	cmp	r3, #0
 8004408:	d017      	beq.n	800443a <HAL_RCC_OscConfig+0x16e>
 800440a:	4b4d      	ldr	r3, [pc, #308]	@ (8004540 <HAL_RCC_OscConfig+0x274>)
 800440c:	689b      	ldr	r3, [r3, #8]
 800440e:	f003 030c 	and.w	r3, r3, #12
 8004412:	2b08      	cmp	r3, #8
 8004414:	d105      	bne.n	8004422 <HAL_RCC_OscConfig+0x156>
 8004416:	4b4a      	ldr	r3, [pc, #296]	@ (8004540 <HAL_RCC_OscConfig+0x274>)
 8004418:	685b      	ldr	r3, [r3, #4]
 800441a:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 800441e:	2b00      	cmp	r3, #0
 8004420:	d00b      	beq.n	800443a <HAL_RCC_OscConfig+0x16e>
 8004422:	4b47      	ldr	r3, [pc, #284]	@ (8004540 <HAL_RCC_OscConfig+0x274>)
 8004424:	689b      	ldr	r3, [r3, #8]
 8004426:	f003 030c 	and.w	r3, r3, #12
 800442a:	2b0c      	cmp	r3, #12
 800442c:	d11c      	bne.n	8004468 <HAL_RCC_OscConfig+0x19c>
 800442e:	4b44      	ldr	r3, [pc, #272]	@ (8004540 <HAL_RCC_OscConfig+0x274>)
 8004430:	685b      	ldr	r3, [r3, #4]
 8004432:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8004436:	2b00      	cmp	r3, #0
 8004438:	d116      	bne.n	8004468 <HAL_RCC_OscConfig+0x19c>
 800443a:	4b41      	ldr	r3, [pc, #260]	@ (8004540 <HAL_RCC_OscConfig+0x274>)
 800443c:	681b      	ldr	r3, [r3, #0]
 800443e:	f003 0302 	and.w	r3, r3, #2
 8004442:	2b00      	cmp	r3, #0
 8004444:	d005      	beq.n	8004452 <HAL_RCC_OscConfig+0x186>
 8004446:	687b      	ldr	r3, [r7, #4]
 8004448:	68db      	ldr	r3, [r3, #12]
 800444a:	2b01      	cmp	r3, #1
 800444c:	d001      	beq.n	8004452 <HAL_RCC_OscConfig+0x186>
 800444e:	2301      	movs	r3, #1
 8004450:	e1d3      	b.n	80047fa <HAL_RCC_OscConfig+0x52e>
 8004452:	4b3b      	ldr	r3, [pc, #236]	@ (8004540 <HAL_RCC_OscConfig+0x274>)
 8004454:	681b      	ldr	r3, [r3, #0]
 8004456:	f023 02f8 	bic.w	r2, r3, #248	@ 0xf8
 800445a:	687b      	ldr	r3, [r7, #4]
 800445c:	691b      	ldr	r3, [r3, #16]
 800445e:	00db      	lsls	r3, r3, #3
 8004460:	4937      	ldr	r1, [pc, #220]	@ (8004540 <HAL_RCC_OscConfig+0x274>)
 8004462:	4313      	orrs	r3, r2
 8004464:	600b      	str	r3, [r1, #0]
 8004466:	e03a      	b.n	80044de <HAL_RCC_OscConfig+0x212>
 8004468:	687b      	ldr	r3, [r7, #4]
 800446a:	68db      	ldr	r3, [r3, #12]
 800446c:	2b00      	cmp	r3, #0
 800446e:	d020      	beq.n	80044b2 <HAL_RCC_OscConfig+0x1e6>
 8004470:	4b34      	ldr	r3, [pc, #208]	@ (8004544 <HAL_RCC_OscConfig+0x278>)
 8004472:	2201      	movs	r2, #1
 8004474:	601a      	str	r2, [r3, #0]
 8004476:	f7fe f821 	bl	80024bc <HAL_GetTick>
 800447a:	6138      	str	r0, [r7, #16]
 800447c:	e008      	b.n	8004490 <HAL_RCC_OscConfig+0x1c4>
 800447e:	f7fe f81d 	bl	80024bc <HAL_GetTick>
 8004482:	4602      	mov	r2, r0
 8004484:	693b      	ldr	r3, [r7, #16]
 8004486:	1ad3      	subs	r3, r2, r3
 8004488:	2b02      	cmp	r3, #2
 800448a:	d901      	bls.n	8004490 <HAL_RCC_OscConfig+0x1c4>
 800448c:	2303      	movs	r3, #3
 800448e:	e1b4      	b.n	80047fa <HAL_RCC_OscConfig+0x52e>
 8004490:	4b2b      	ldr	r3, [pc, #172]	@ (8004540 <HAL_RCC_OscConfig+0x274>)
 8004492:	681b      	ldr	r3, [r3, #0]
 8004494:	f003 0302 	and.w	r3, r3, #2
 8004498:	2b00      	cmp	r3, #0
 800449a:	d0f0      	beq.n	800447e <HAL_RCC_OscConfig+0x1b2>
 800449c:	4b28      	ldr	r3, [pc, #160]	@ (8004540 <HAL_RCC_OscConfig+0x274>)
 800449e:	681b      	ldr	r3, [r3, #0]
 80044a0:	f023 02f8 	bic.w	r2, r3, #248	@ 0xf8
 80044a4:	687b      	ldr	r3, [r7, #4]
 80044a6:	691b      	ldr	r3, [r3, #16]
 80044a8:	00db      	lsls	r3, r3, #3
 80044aa:	4925      	ldr	r1, [pc, #148]	@ (8004540 <HAL_RCC_OscConfig+0x274>)
 80044ac:	4313      	orrs	r3, r2
 80044ae:	600b      	str	r3, [r1, #0]
 80044b0:	e015      	b.n	80044de <HAL_RCC_OscConfig+0x212>
 80044b2:	4b24      	ldr	r3, [pc, #144]	@ (8004544 <HAL_RCC_OscConfig+0x278>)
 80044b4:	2200      	movs	r2, #0
 80044b6:	601a      	str	r2, [r3, #0]
 80044b8:	f7fe f800 	bl	80024bc <HAL_GetTick>
 80044bc:	6138      	str	r0, [r7, #16]
 80044be:	e008      	b.n	80044d2 <HAL_RCC_OscConfig+0x206>
 80044c0:	f7fd fffc 	bl	80024bc <HAL_GetTick>
 80044c4:	4602      	mov	r2, r0
 80044c6:	693b      	ldr	r3, [r7, #16]
 80044c8:	1ad3      	subs	r3, r2, r3
 80044ca:	2b02      	cmp	r3, #2
 80044cc:	d901      	bls.n	80044d2 <HAL_RCC_OscConfig+0x206>
 80044ce:	2303      	movs	r3, #3
 80044d0:	e193      	b.n	80047fa <HAL_RCC_OscConfig+0x52e>
 80044d2:	4b1b      	ldr	r3, [pc, #108]	@ (8004540 <HAL_RCC_OscConfig+0x274>)
 80044d4:	681b      	ldr	r3, [r3, #0]
 80044d6:	f003 0302 	and.w	r3, r3, #2
 80044da:	2b00      	cmp	r3, #0
 80044dc:	d1f0      	bne.n	80044c0 <HAL_RCC_OscConfig+0x1f4>
 80044de:	687b      	ldr	r3, [r7, #4]
 80044e0:	681b      	ldr	r3, [r3, #0]
 80044e2:	f003 0308 	and.w	r3, r3, #8
 80044e6:	2b00      	cmp	r3, #0
 80044e8:	d036      	beq.n	8004558 <HAL_RCC_OscConfig+0x28c>
 80044ea:	687b      	ldr	r3, [r7, #4]
 80044ec:	695b      	ldr	r3, [r3, #20]
 80044ee:	2b00      	cmp	r3, #0
 80044f0:	d016      	beq.n	8004520 <HAL_RCC_OscConfig+0x254>
 80044f2:	4b15      	ldr	r3, [pc, #84]	@ (8004548 <HAL_RCC_OscConfig+0x27c>)
 80044f4:	2201      	movs	r2, #1
 80044f6:	601a      	str	r2, [r3, #0]
 80044f8:	f7fd ffe0 	bl	80024bc <HAL_GetTick>
 80044fc:	6138      	str	r0, [r7, #16]
 80044fe:	e008      	b.n	8004512 <HAL_RCC_OscConfig+0x246>
 8004500:	f7fd ffdc 	bl	80024bc <HAL_GetTick>
 8004504:	4602      	mov	r2, r0
 8004506:	693b      	ldr	r3, [r7, #16]
 8004508:	1ad3      	subs	r3, r2, r3
 800450a:	2b02      	cmp	r3, #2
 800450c:	d901      	bls.n	8004512 <HAL_RCC_OscConfig+0x246>
 800450e:	2303      	movs	r3, #3
 8004510:	e173      	b.n	80047fa <HAL_RCC_OscConfig+0x52e>
 8004512:	4b0b      	ldr	r3, [pc, #44]	@ (8004540 <HAL_RCC_OscConfig+0x274>)
 8004514:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8004516:	f003 0302 	and.w	r3, r3, #2
 800451a:	2b00      	cmp	r3, #0
 800451c:	d0f0      	beq.n	8004500 <HAL_RCC_OscConfig+0x234>
 800451e:	e01b      	b.n	8004558 <HAL_RCC_OscConfig+0x28c>
 8004520:	4b09      	ldr	r3, [pc, #36]	@ (8004548 <HAL_RCC_OscConfig+0x27c>)
 8004522:	2200      	movs	r2, #0
 8004524:	601a      	str	r2, [r3, #0]
 8004526:	f7fd ffc9 	bl	80024bc <HAL_GetTick>
 800452a:	6138      	str	r0, [r7, #16]
 800452c:	e00e      	b.n	800454c <HAL_RCC_OscConfig+0x280>
 800452e:	f7fd ffc5 	bl	80024bc <HAL_GetTick>
 8004532:	4602      	mov	r2, r0
 8004534:	693b      	ldr	r3, [r7, #16]
 8004536:	1ad3      	subs	r3, r2, r3
 8004538:	2b02      	cmp	r3, #2
 800453a:	d907      	bls.n	800454c <HAL_RCC_OscConfig+0x280>
 800453c:	2303      	movs	r3, #3
 800453e:	e15c      	b.n	80047fa <HAL_RCC_OscConfig+0x52e>
 8004540:	40023800 	.word	0x40023800
 8004544:	42470000 	.word	0x42470000
 8004548:	42470e80 	.word	0x42470e80
 800454c:	4b8a      	ldr	r3, [pc, #552]	@ (8004778 <HAL_RCC_OscConfig+0x4ac>)
 800454e:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8004550:	f003 0302 	and.w	r3, r3, #2
 8004554:	2b00      	cmp	r3, #0
 8004556:	d1ea      	bne.n	800452e <HAL_RCC_OscConfig+0x262>
 8004558:	687b      	ldr	r3, [r7, #4]
 800455a:	681b      	ldr	r3, [r3, #0]
 800455c:	f003 0304 	and.w	r3, r3, #4
 8004560:	2b00      	cmp	r3, #0
 8004562:	f000 8097 	beq.w	8004694 <HAL_RCC_OscConfig+0x3c8>
 8004566:	2300      	movs	r3, #0
 8004568:	75fb      	strb	r3, [r7, #23]
 800456a:	4b83      	ldr	r3, [pc, #524]	@ (8004778 <HAL_RCC_OscConfig+0x4ac>)
 800456c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800456e:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8004572:	2b00      	cmp	r3, #0
 8004574:	d10f      	bne.n	8004596 <HAL_RCC_OscConfig+0x2ca>
 8004576:	2300      	movs	r3, #0
 8004578:	60bb      	str	r3, [r7, #8]
 800457a:	4b7f      	ldr	r3, [pc, #508]	@ (8004778 <HAL_RCC_OscConfig+0x4ac>)
 800457c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800457e:	4a7e      	ldr	r2, [pc, #504]	@ (8004778 <HAL_RCC_OscConfig+0x4ac>)
 8004580:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8004584:	6413      	str	r3, [r2, #64]	@ 0x40
 8004586:	4b7c      	ldr	r3, [pc, #496]	@ (8004778 <HAL_RCC_OscConfig+0x4ac>)
 8004588:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800458a:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 800458e:	60bb      	str	r3, [r7, #8]
 8004590:	68bb      	ldr	r3, [r7, #8]
 8004592:	2301      	movs	r3, #1
 8004594:	75fb      	strb	r3, [r7, #23]
 8004596:	4b79      	ldr	r3, [pc, #484]	@ (800477c <HAL_RCC_OscConfig+0x4b0>)
 8004598:	681b      	ldr	r3, [r3, #0]
 800459a:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800459e:	2b00      	cmp	r3, #0
 80045a0:	d118      	bne.n	80045d4 <HAL_RCC_OscConfig+0x308>
 80045a2:	4b76      	ldr	r3, [pc, #472]	@ (800477c <HAL_RCC_OscConfig+0x4b0>)
 80045a4:	681b      	ldr	r3, [r3, #0]
 80045a6:	4a75      	ldr	r2, [pc, #468]	@ (800477c <HAL_RCC_OscConfig+0x4b0>)
 80045a8:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 80045ac:	6013      	str	r3, [r2, #0]
 80045ae:	f7fd ff85 	bl	80024bc <HAL_GetTick>
 80045b2:	6138      	str	r0, [r7, #16]
 80045b4:	e008      	b.n	80045c8 <HAL_RCC_OscConfig+0x2fc>
 80045b6:	f7fd ff81 	bl	80024bc <HAL_GetTick>
 80045ba:	4602      	mov	r2, r0
 80045bc:	693b      	ldr	r3, [r7, #16]
 80045be:	1ad3      	subs	r3, r2, r3
 80045c0:	2b02      	cmp	r3, #2
 80045c2:	d901      	bls.n	80045c8 <HAL_RCC_OscConfig+0x2fc>
 80045c4:	2303      	movs	r3, #3
 80045c6:	e118      	b.n	80047fa <HAL_RCC_OscConfig+0x52e>
 80045c8:	4b6c      	ldr	r3, [pc, #432]	@ (800477c <HAL_RCC_OscConfig+0x4b0>)
 80045ca:	681b      	ldr	r3, [r3, #0]
 80045cc:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 80045d0:	2b00      	cmp	r3, #0
 80045d2:	d0f0      	beq.n	80045b6 <HAL_RCC_OscConfig+0x2ea>
 80045d4:	687b      	ldr	r3, [r7, #4]
 80045d6:	689b      	ldr	r3, [r3, #8]
 80045d8:	2b01      	cmp	r3, #1
 80045da:	d106      	bne.n	80045ea <HAL_RCC_OscConfig+0x31e>
 80045dc:	4b66      	ldr	r3, [pc, #408]	@ (8004778 <HAL_RCC_OscConfig+0x4ac>)
 80045de:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 80045e0:	4a65      	ldr	r2, [pc, #404]	@ (8004778 <HAL_RCC_OscConfig+0x4ac>)
 80045e2:	f043 0301 	orr.w	r3, r3, #1
 80045e6:	6713      	str	r3, [r2, #112]	@ 0x70
 80045e8:	e01c      	b.n	8004624 <HAL_RCC_OscConfig+0x358>
 80045ea:	687b      	ldr	r3, [r7, #4]
 80045ec:	689b      	ldr	r3, [r3, #8]
 80045ee:	2b05      	cmp	r3, #5
 80045f0:	d10c      	bne.n	800460c <HAL_RCC_OscConfig+0x340>
 80045f2:	4b61      	ldr	r3, [pc, #388]	@ (8004778 <HAL_RCC_OscConfig+0x4ac>)
 80045f4:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 80045f6:	4a60      	ldr	r2, [pc, #384]	@ (8004778 <HAL_RCC_OscConfig+0x4ac>)
 80045f8:	f043 0304 	orr.w	r3, r3, #4
 80045fc:	6713      	str	r3, [r2, #112]	@ 0x70
 80045fe:	4b5e      	ldr	r3, [pc, #376]	@ (8004778 <HAL_RCC_OscConfig+0x4ac>)
 8004600:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8004602:	4a5d      	ldr	r2, [pc, #372]	@ (8004778 <HAL_RCC_OscConfig+0x4ac>)
 8004604:	f043 0301 	orr.w	r3, r3, #1
 8004608:	6713      	str	r3, [r2, #112]	@ 0x70
 800460a:	e00b      	b.n	8004624 <HAL_RCC_OscConfig+0x358>
 800460c:	4b5a      	ldr	r3, [pc, #360]	@ (8004778 <HAL_RCC_OscConfig+0x4ac>)
 800460e:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8004610:	4a59      	ldr	r2, [pc, #356]	@ (8004778 <HAL_RCC_OscConfig+0x4ac>)
 8004612:	f023 0301 	bic.w	r3, r3, #1
 8004616:	6713      	str	r3, [r2, #112]	@ 0x70
 8004618:	4b57      	ldr	r3, [pc, #348]	@ (8004778 <HAL_RCC_OscConfig+0x4ac>)
 800461a:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 800461c:	4a56      	ldr	r2, [pc, #344]	@ (8004778 <HAL_RCC_OscConfig+0x4ac>)
 800461e:	f023 0304 	bic.w	r3, r3, #4
 8004622:	6713      	str	r3, [r2, #112]	@ 0x70
 8004624:	687b      	ldr	r3, [r7, #4]
 8004626:	689b      	ldr	r3, [r3, #8]
 8004628:	2b00      	cmp	r3, #0
 800462a:	d015      	beq.n	8004658 <HAL_RCC_OscConfig+0x38c>
 800462c:	f7fd ff46 	bl	80024bc <HAL_GetTick>
 8004630:	6138      	str	r0, [r7, #16]
 8004632:	e00a      	b.n	800464a <HAL_RCC_OscConfig+0x37e>
 8004634:	f7fd ff42 	bl	80024bc <HAL_GetTick>
 8004638:	4602      	mov	r2, r0
 800463a:	693b      	ldr	r3, [r7, #16]
 800463c:	1ad3      	subs	r3, r2, r3
 800463e:	f241 3288 	movw	r2, #5000	@ 0x1388
 8004642:	4293      	cmp	r3, r2
 8004644:	d901      	bls.n	800464a <HAL_RCC_OscConfig+0x37e>
 8004646:	2303      	movs	r3, #3
 8004648:	e0d7      	b.n	80047fa <HAL_RCC_OscConfig+0x52e>
 800464a:	4b4b      	ldr	r3, [pc, #300]	@ (8004778 <HAL_RCC_OscConfig+0x4ac>)
 800464c:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 800464e:	f003 0302 	and.w	r3, r3, #2
 8004652:	2b00      	cmp	r3, #0
 8004654:	d0ee      	beq.n	8004634 <HAL_RCC_OscConfig+0x368>
 8004656:	e014      	b.n	8004682 <HAL_RCC_OscConfig+0x3b6>
 8004658:	f7fd ff30 	bl	80024bc <HAL_GetTick>
 800465c:	6138      	str	r0, [r7, #16]
 800465e:	e00a      	b.n	8004676 <HAL_RCC_OscConfig+0x3aa>
 8004660:	f7fd ff2c 	bl	80024bc <HAL_GetTick>
 8004664:	4602      	mov	r2, r0
 8004666:	693b      	ldr	r3, [r7, #16]
 8004668:	1ad3      	subs	r3, r2, r3
 800466a:	f241 3288 	movw	r2, #5000	@ 0x1388
 800466e:	4293      	cmp	r3, r2
 8004670:	d901      	bls.n	8004676 <HAL_RCC_OscConfig+0x3aa>
 8004672:	2303      	movs	r3, #3
 8004674:	e0c1      	b.n	80047fa <HAL_RCC_OscConfig+0x52e>
 8004676:	4b40      	ldr	r3, [pc, #256]	@ (8004778 <HAL_RCC_OscConfig+0x4ac>)
 8004678:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 800467a:	f003 0302 	and.w	r3, r3, #2
 800467e:	2b00      	cmp	r3, #0
 8004680:	d1ee      	bne.n	8004660 <HAL_RCC_OscConfig+0x394>
 8004682:	7dfb      	ldrb	r3, [r7, #23]
 8004684:	2b01      	cmp	r3, #1
 8004686:	d105      	bne.n	8004694 <HAL_RCC_OscConfig+0x3c8>
 8004688:	4b3b      	ldr	r3, [pc, #236]	@ (8004778 <HAL_RCC_OscConfig+0x4ac>)
 800468a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800468c:	4a3a      	ldr	r2, [pc, #232]	@ (8004778 <HAL_RCC_OscConfig+0x4ac>)
 800468e:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 8004692:	6413      	str	r3, [r2, #64]	@ 0x40
 8004694:	687b      	ldr	r3, [r7, #4]
 8004696:	699b      	ldr	r3, [r3, #24]
 8004698:	2b00      	cmp	r3, #0
 800469a:	f000 80ad 	beq.w	80047f8 <HAL_RCC_OscConfig+0x52c>
 800469e:	4b36      	ldr	r3, [pc, #216]	@ (8004778 <HAL_RCC_OscConfig+0x4ac>)
 80046a0:	689b      	ldr	r3, [r3, #8]
 80046a2:	f003 030c 	and.w	r3, r3, #12
 80046a6:	2b08      	cmp	r3, #8
 80046a8:	d060      	beq.n	800476c <HAL_RCC_OscConfig+0x4a0>
 80046aa:	687b      	ldr	r3, [r7, #4]
 80046ac:	699b      	ldr	r3, [r3, #24]
 80046ae:	2b02      	cmp	r3, #2
 80046b0:	d145      	bne.n	800473e <HAL_RCC_OscConfig+0x472>
 80046b2:	4b33      	ldr	r3, [pc, #204]	@ (8004780 <HAL_RCC_OscConfig+0x4b4>)
 80046b4:	2200      	movs	r2, #0
 80046b6:	601a      	str	r2, [r3, #0]
 80046b8:	f7fd ff00 	bl	80024bc <HAL_GetTick>
 80046bc:	6138      	str	r0, [r7, #16]
 80046be:	e008      	b.n	80046d2 <HAL_RCC_OscConfig+0x406>
 80046c0:	f7fd fefc 	bl	80024bc <HAL_GetTick>
 80046c4:	4602      	mov	r2, r0
 80046c6:	693b      	ldr	r3, [r7, #16]
 80046c8:	1ad3      	subs	r3, r2, r3
 80046ca:	2b02      	cmp	r3, #2
 80046cc:	d901      	bls.n	80046d2 <HAL_RCC_OscConfig+0x406>
 80046ce:	2303      	movs	r3, #3
 80046d0:	e093      	b.n	80047fa <HAL_RCC_OscConfig+0x52e>
 80046d2:	4b29      	ldr	r3, [pc, #164]	@ (8004778 <HAL_RCC_OscConfig+0x4ac>)
 80046d4:	681b      	ldr	r3, [r3, #0]
 80046d6:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 80046da:	2b00      	cmp	r3, #0
 80046dc:	d1f0      	bne.n	80046c0 <HAL_RCC_OscConfig+0x3f4>
 80046de:	687b      	ldr	r3, [r7, #4]
 80046e0:	69da      	ldr	r2, [r3, #28]
 80046e2:	687b      	ldr	r3, [r7, #4]
 80046e4:	6a1b      	ldr	r3, [r3, #32]
 80046e6:	431a      	orrs	r2, r3
 80046e8:	687b      	ldr	r3, [r7, #4]
 80046ea:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80046ec:	019b      	lsls	r3, r3, #6
 80046ee:	431a      	orrs	r2, r3
 80046f0:	687b      	ldr	r3, [r7, #4]
 80046f2:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80046f4:	085b      	lsrs	r3, r3, #1
 80046f6:	3b01      	subs	r3, #1
 80046f8:	041b      	lsls	r3, r3, #16
 80046fa:	431a      	orrs	r2, r3
 80046fc:	687b      	ldr	r3, [r7, #4]
 80046fe:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8004700:	061b      	lsls	r3, r3, #24
 8004702:	431a      	orrs	r2, r3
 8004704:	687b      	ldr	r3, [r7, #4]
 8004706:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8004708:	071b      	lsls	r3, r3, #28
 800470a:	491b      	ldr	r1, [pc, #108]	@ (8004778 <HAL_RCC_OscConfig+0x4ac>)
 800470c:	4313      	orrs	r3, r2
 800470e:	604b      	str	r3, [r1, #4]
 8004710:	4b1b      	ldr	r3, [pc, #108]	@ (8004780 <HAL_RCC_OscConfig+0x4b4>)
 8004712:	2201      	movs	r2, #1
 8004714:	601a      	str	r2, [r3, #0]
 8004716:	f7fd fed1 	bl	80024bc <HAL_GetTick>
 800471a:	6138      	str	r0, [r7, #16]
 800471c:	e008      	b.n	8004730 <HAL_RCC_OscConfig+0x464>
 800471e:	f7fd fecd 	bl	80024bc <HAL_GetTick>
 8004722:	4602      	mov	r2, r0
 8004724:	693b      	ldr	r3, [r7, #16]
 8004726:	1ad3      	subs	r3, r2, r3
 8004728:	2b02      	cmp	r3, #2
 800472a:	d901      	bls.n	8004730 <HAL_RCC_OscConfig+0x464>
 800472c:	2303      	movs	r3, #3
 800472e:	e064      	b.n	80047fa <HAL_RCC_OscConfig+0x52e>
 8004730:	4b11      	ldr	r3, [pc, #68]	@ (8004778 <HAL_RCC_OscConfig+0x4ac>)
 8004732:	681b      	ldr	r3, [r3, #0]
 8004734:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8004738:	2b00      	cmp	r3, #0
 800473a:	d0f0      	beq.n	800471e <HAL_RCC_OscConfig+0x452>
 800473c:	e05c      	b.n	80047f8 <HAL_RCC_OscConfig+0x52c>
 800473e:	4b10      	ldr	r3, [pc, #64]	@ (8004780 <HAL_RCC_OscConfig+0x4b4>)
 8004740:	2200      	movs	r2, #0
 8004742:	601a      	str	r2, [r3, #0]
 8004744:	f7fd feba 	bl	80024bc <HAL_GetTick>
 8004748:	6138      	str	r0, [r7, #16]
 800474a:	e008      	b.n	800475e <HAL_RCC_OscConfig+0x492>
 800474c:	f7fd feb6 	bl	80024bc <HAL_GetTick>
 8004750:	4602      	mov	r2, r0
 8004752:	693b      	ldr	r3, [r7, #16]
 8004754:	1ad3      	subs	r3, r2, r3
 8004756:	2b02      	cmp	r3, #2
 8004758:	d901      	bls.n	800475e <HAL_RCC_OscConfig+0x492>
 800475a:	2303      	movs	r3, #3
 800475c:	e04d      	b.n	80047fa <HAL_RCC_OscConfig+0x52e>
 800475e:	4b06      	ldr	r3, [pc, #24]	@ (8004778 <HAL_RCC_OscConfig+0x4ac>)
 8004760:	681b      	ldr	r3, [r3, #0]
 8004762:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8004766:	2b00      	cmp	r3, #0
 8004768:	d1f0      	bne.n	800474c <HAL_RCC_OscConfig+0x480>
 800476a:	e045      	b.n	80047f8 <HAL_RCC_OscConfig+0x52c>
 800476c:	687b      	ldr	r3, [r7, #4]
 800476e:	699b      	ldr	r3, [r3, #24]
 8004770:	2b01      	cmp	r3, #1
 8004772:	d107      	bne.n	8004784 <HAL_RCC_OscConfig+0x4b8>
 8004774:	2301      	movs	r3, #1
 8004776:	e040      	b.n	80047fa <HAL_RCC_OscConfig+0x52e>
 8004778:	40023800 	.word	0x40023800
 800477c:	40007000 	.word	0x40007000
 8004780:	42470060 	.word	0x42470060
 8004784:	4b1f      	ldr	r3, [pc, #124]	@ (8004804 <HAL_RCC_OscConfig+0x538>)
 8004786:	685b      	ldr	r3, [r3, #4]
 8004788:	60fb      	str	r3, [r7, #12]
 800478a:	687b      	ldr	r3, [r7, #4]
 800478c:	699b      	ldr	r3, [r3, #24]
 800478e:	2b01      	cmp	r3, #1
 8004790:	d030      	beq.n	80047f4 <HAL_RCC_OscConfig+0x528>
 8004792:	68fb      	ldr	r3, [r7, #12]
 8004794:	f403 0280 	and.w	r2, r3, #4194304	@ 0x400000
 8004798:	687b      	ldr	r3, [r7, #4]
 800479a:	69db      	ldr	r3, [r3, #28]
 800479c:	429a      	cmp	r2, r3
 800479e:	d129      	bne.n	80047f4 <HAL_RCC_OscConfig+0x528>
 80047a0:	68fb      	ldr	r3, [r7, #12]
 80047a2:	f003 023f 	and.w	r2, r3, #63	@ 0x3f
 80047a6:	687b      	ldr	r3, [r7, #4]
 80047a8:	6a1b      	ldr	r3, [r3, #32]
 80047aa:	429a      	cmp	r2, r3
 80047ac:	d122      	bne.n	80047f4 <HAL_RCC_OscConfig+0x528>
 80047ae:	68fa      	ldr	r2, [r7, #12]
 80047b0:	f647 73c0 	movw	r3, #32704	@ 0x7fc0
 80047b4:	4013      	ands	r3, r2
 80047b6:	687a      	ldr	r2, [r7, #4]
 80047b8:	6a52      	ldr	r2, [r2, #36]	@ 0x24
 80047ba:	0192      	lsls	r2, r2, #6
 80047bc:	4293      	cmp	r3, r2
 80047be:	d119      	bne.n	80047f4 <HAL_RCC_OscConfig+0x528>
 80047c0:	68fb      	ldr	r3, [r7, #12]
 80047c2:	f403 3240 	and.w	r2, r3, #196608	@ 0x30000
 80047c6:	687b      	ldr	r3, [r7, #4]
 80047c8:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80047ca:	085b      	lsrs	r3, r3, #1
 80047cc:	3b01      	subs	r3, #1
 80047ce:	041b      	lsls	r3, r3, #16
 80047d0:	429a      	cmp	r2, r3
 80047d2:	d10f      	bne.n	80047f4 <HAL_RCC_OscConfig+0x528>
 80047d4:	68fb      	ldr	r3, [r7, #12]
 80047d6:	f003 6270 	and.w	r2, r3, #251658240	@ 0xf000000
 80047da:	687b      	ldr	r3, [r7, #4]
 80047dc:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80047de:	061b      	lsls	r3, r3, #24
 80047e0:	429a      	cmp	r2, r3
 80047e2:	d107      	bne.n	80047f4 <HAL_RCC_OscConfig+0x528>
 80047e4:	68fb      	ldr	r3, [r7, #12]
 80047e6:	f003 42e0 	and.w	r2, r3, #1879048192	@ 0x70000000
 80047ea:	687b      	ldr	r3, [r7, #4]
 80047ec:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80047ee:	071b      	lsls	r3, r3, #28
 80047f0:	429a      	cmp	r2, r3
 80047f2:	d001      	beq.n	80047f8 <HAL_RCC_OscConfig+0x52c>
 80047f4:	2301      	movs	r3, #1
 80047f6:	e000      	b.n	80047fa <HAL_RCC_OscConfig+0x52e>
 80047f8:	2300      	movs	r3, #0
 80047fa:	4618      	mov	r0, r3
 80047fc:	3718      	adds	r7, #24
 80047fe:	46bd      	mov	sp, r7
 8004800:	bd80      	pop	{r7, pc}
 8004802:	bf00      	nop
 8004804:	40023800 	.word	0x40023800

08004808 <HAL_SPI_Init>:
 8004808:	b580      	push	{r7, lr}
 800480a:	b082      	sub	sp, #8
 800480c:	af00      	add	r7, sp, #0
 800480e:	6078      	str	r0, [r7, #4]
 8004810:	687b      	ldr	r3, [r7, #4]
 8004812:	2b00      	cmp	r3, #0
 8004814:	d101      	bne.n	800481a <HAL_SPI_Init+0x12>
 8004816:	2301      	movs	r3, #1
 8004818:	e07b      	b.n	8004912 <HAL_SPI_Init+0x10a>
 800481a:	687b      	ldr	r3, [r7, #4]
 800481c:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800481e:	2b00      	cmp	r3, #0
 8004820:	d108      	bne.n	8004834 <HAL_SPI_Init+0x2c>
 8004822:	687b      	ldr	r3, [r7, #4]
 8004824:	685b      	ldr	r3, [r3, #4]
 8004826:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 800482a:	d009      	beq.n	8004840 <HAL_SPI_Init+0x38>
 800482c:	687b      	ldr	r3, [r7, #4]
 800482e:	2200      	movs	r2, #0
 8004830:	61da      	str	r2, [r3, #28]
 8004832:	e005      	b.n	8004840 <HAL_SPI_Init+0x38>
 8004834:	687b      	ldr	r3, [r7, #4]
 8004836:	2200      	movs	r2, #0
 8004838:	611a      	str	r2, [r3, #16]
 800483a:	687b      	ldr	r3, [r7, #4]
 800483c:	2200      	movs	r2, #0
 800483e:	615a      	str	r2, [r3, #20]
 8004840:	687b      	ldr	r3, [r7, #4]
 8004842:	2200      	movs	r2, #0
 8004844:	629a      	str	r2, [r3, #40]	@ 0x28
 8004846:	687b      	ldr	r3, [r7, #4]
 8004848:	f893 3051 	ldrb.w	r3, [r3, #81]	@ 0x51
 800484c:	b2db      	uxtb	r3, r3
 800484e:	2b00      	cmp	r3, #0
 8004850:	d106      	bne.n	8004860 <HAL_SPI_Init+0x58>
 8004852:	687b      	ldr	r3, [r7, #4]
 8004854:	2200      	movs	r2, #0
 8004856:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 800485a:	6878      	ldr	r0, [r7, #4]
 800485c:	f7fd fb2c 	bl	8001eb8 <HAL_SPI_MspInit>
 8004860:	687b      	ldr	r3, [r7, #4]
 8004862:	2202      	movs	r2, #2
 8004864:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
 8004868:	687b      	ldr	r3, [r7, #4]
 800486a:	681b      	ldr	r3, [r3, #0]
 800486c:	681a      	ldr	r2, [r3, #0]
 800486e:	687b      	ldr	r3, [r7, #4]
 8004870:	681b      	ldr	r3, [r3, #0]
 8004872:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 8004876:	601a      	str	r2, [r3, #0]
 8004878:	687b      	ldr	r3, [r7, #4]
 800487a:	685b      	ldr	r3, [r3, #4]
 800487c:	f403 7282 	and.w	r2, r3, #260	@ 0x104
 8004880:	687b      	ldr	r3, [r7, #4]
 8004882:	689b      	ldr	r3, [r3, #8]
 8004884:	f403 4304 	and.w	r3, r3, #33792	@ 0x8400
 8004888:	431a      	orrs	r2, r3
 800488a:	687b      	ldr	r3, [r7, #4]
 800488c:	68db      	ldr	r3, [r3, #12]
 800488e:	f403 6300 	and.w	r3, r3, #2048	@ 0x800
 8004892:	431a      	orrs	r2, r3
 8004894:	687b      	ldr	r3, [r7, #4]
 8004896:	691b      	ldr	r3, [r3, #16]
 8004898:	f003 0302 	and.w	r3, r3, #2
 800489c:	431a      	orrs	r2, r3
 800489e:	687b      	ldr	r3, [r7, #4]
 80048a0:	695b      	ldr	r3, [r3, #20]
 80048a2:	f003 0301 	and.w	r3, r3, #1
 80048a6:	431a      	orrs	r2, r3
 80048a8:	687b      	ldr	r3, [r7, #4]
 80048aa:	699b      	ldr	r3, [r3, #24]
 80048ac:	f403 7300 	and.w	r3, r3, #512	@ 0x200
 80048b0:	431a      	orrs	r2, r3
 80048b2:	687b      	ldr	r3, [r7, #4]
 80048b4:	69db      	ldr	r3, [r3, #28]
 80048b6:	f003 0338 	and.w	r3, r3, #56	@ 0x38
 80048ba:	431a      	orrs	r2, r3
 80048bc:	687b      	ldr	r3, [r7, #4]
 80048be:	6a1b      	ldr	r3, [r3, #32]
 80048c0:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 80048c4:	ea42 0103 	orr.w	r1, r2, r3
 80048c8:	687b      	ldr	r3, [r7, #4]
 80048ca:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80048cc:	f403 5200 	and.w	r2, r3, #8192	@ 0x2000
 80048d0:	687b      	ldr	r3, [r7, #4]
 80048d2:	681b      	ldr	r3, [r3, #0]
 80048d4:	430a      	orrs	r2, r1
 80048d6:	601a      	str	r2, [r3, #0]
 80048d8:	687b      	ldr	r3, [r7, #4]
 80048da:	699b      	ldr	r3, [r3, #24]
 80048dc:	0c1b      	lsrs	r3, r3, #16
 80048de:	f003 0104 	and.w	r1, r3, #4
 80048e2:	687b      	ldr	r3, [r7, #4]
 80048e4:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80048e6:	f003 0210 	and.w	r2, r3, #16
 80048ea:	687b      	ldr	r3, [r7, #4]
 80048ec:	681b      	ldr	r3, [r3, #0]
 80048ee:	430a      	orrs	r2, r1
 80048f0:	605a      	str	r2, [r3, #4]
 80048f2:	687b      	ldr	r3, [r7, #4]
 80048f4:	681b      	ldr	r3, [r3, #0]
 80048f6:	69da      	ldr	r2, [r3, #28]
 80048f8:	687b      	ldr	r3, [r7, #4]
 80048fa:	681b      	ldr	r3, [r3, #0]
 80048fc:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 8004900:	61da      	str	r2, [r3, #28]
 8004902:	687b      	ldr	r3, [r7, #4]
 8004904:	2200      	movs	r2, #0
 8004906:	655a      	str	r2, [r3, #84]	@ 0x54
 8004908:	687b      	ldr	r3, [r7, #4]
 800490a:	2201      	movs	r2, #1
 800490c:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
 8004910:	2300      	movs	r3, #0
 8004912:	4618      	mov	r0, r3
 8004914:	3708      	adds	r7, #8
 8004916:	46bd      	mov	sp, r7
 8004918:	bd80      	pop	{r7, pc}

0800491a <HAL_SPI_Transmit>:
 800491a:	b580      	push	{r7, lr}
 800491c:	b088      	sub	sp, #32
 800491e:	af00      	add	r7, sp, #0
 8004920:	60f8      	str	r0, [r7, #12]
 8004922:	60b9      	str	r1, [r7, #8]
 8004924:	603b      	str	r3, [r7, #0]
 8004926:	4613      	mov	r3, r2
 8004928:	80fb      	strh	r3, [r7, #6]
 800492a:	f7fd fdc7 	bl	80024bc <HAL_GetTick>
 800492e:	61f8      	str	r0, [r7, #28]
 8004930:	88fb      	ldrh	r3, [r7, #6]
 8004932:	837b      	strh	r3, [r7, #26]
 8004934:	68fb      	ldr	r3, [r7, #12]
 8004936:	f893 3051 	ldrb.w	r3, [r3, #81]	@ 0x51
 800493a:	b2db      	uxtb	r3, r3
 800493c:	2b01      	cmp	r3, #1
 800493e:	d001      	beq.n	8004944 <HAL_SPI_Transmit+0x2a>
 8004940:	2302      	movs	r3, #2
 8004942:	e12a      	b.n	8004b9a <HAL_SPI_Transmit+0x280>
 8004944:	68bb      	ldr	r3, [r7, #8]
 8004946:	2b00      	cmp	r3, #0
 8004948:	d002      	beq.n	8004950 <HAL_SPI_Transmit+0x36>
 800494a:	88fb      	ldrh	r3, [r7, #6]
 800494c:	2b00      	cmp	r3, #0
 800494e:	d101      	bne.n	8004954 <HAL_SPI_Transmit+0x3a>
 8004950:	2301      	movs	r3, #1
 8004952:	e122      	b.n	8004b9a <HAL_SPI_Transmit+0x280>
 8004954:	68fb      	ldr	r3, [r7, #12]
 8004956:	f893 3050 	ldrb.w	r3, [r3, #80]	@ 0x50
 800495a:	2b01      	cmp	r3, #1
 800495c:	d101      	bne.n	8004962 <HAL_SPI_Transmit+0x48>
 800495e:	2302      	movs	r3, #2
 8004960:	e11b      	b.n	8004b9a <HAL_SPI_Transmit+0x280>
 8004962:	68fb      	ldr	r3, [r7, #12]
 8004964:	2201      	movs	r2, #1
 8004966:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 800496a:	68fb      	ldr	r3, [r7, #12]
 800496c:	2203      	movs	r2, #3
 800496e:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
 8004972:	68fb      	ldr	r3, [r7, #12]
 8004974:	2200      	movs	r2, #0
 8004976:	655a      	str	r2, [r3, #84]	@ 0x54
 8004978:	68fb      	ldr	r3, [r7, #12]
 800497a:	68ba      	ldr	r2, [r7, #8]
 800497c:	631a      	str	r2, [r3, #48]	@ 0x30
 800497e:	68fb      	ldr	r3, [r7, #12]
 8004980:	88fa      	ldrh	r2, [r7, #6]
 8004982:	869a      	strh	r2, [r3, #52]	@ 0x34
 8004984:	68fb      	ldr	r3, [r7, #12]
 8004986:	88fa      	ldrh	r2, [r7, #6]
 8004988:	86da      	strh	r2, [r3, #54]	@ 0x36
 800498a:	68fb      	ldr	r3, [r7, #12]
 800498c:	2200      	movs	r2, #0
 800498e:	639a      	str	r2, [r3, #56]	@ 0x38
 8004990:	68fb      	ldr	r3, [r7, #12]
 8004992:	2200      	movs	r2, #0
 8004994:	879a      	strh	r2, [r3, #60]	@ 0x3c
 8004996:	68fb      	ldr	r3, [r7, #12]
 8004998:	2200      	movs	r2, #0
 800499a:	87da      	strh	r2, [r3, #62]	@ 0x3e
 800499c:	68fb      	ldr	r3, [r7, #12]
 800499e:	2200      	movs	r2, #0
 80049a0:	645a      	str	r2, [r3, #68]	@ 0x44
 80049a2:	68fb      	ldr	r3, [r7, #12]
 80049a4:	2200      	movs	r2, #0
 80049a6:	641a      	str	r2, [r3, #64]	@ 0x40
 80049a8:	68fb      	ldr	r3, [r7, #12]
 80049aa:	689b      	ldr	r3, [r3, #8]
 80049ac:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 80049b0:	d10f      	bne.n	80049d2 <HAL_SPI_Transmit+0xb8>
 80049b2:	68fb      	ldr	r3, [r7, #12]
 80049b4:	681b      	ldr	r3, [r3, #0]
 80049b6:	681a      	ldr	r2, [r3, #0]
 80049b8:	68fb      	ldr	r3, [r7, #12]
 80049ba:	681b      	ldr	r3, [r3, #0]
 80049bc:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 80049c0:	601a      	str	r2, [r3, #0]
 80049c2:	68fb      	ldr	r3, [r7, #12]
 80049c4:	681b      	ldr	r3, [r3, #0]
 80049c6:	681a      	ldr	r2, [r3, #0]
 80049c8:	68fb      	ldr	r3, [r7, #12]
 80049ca:	681b      	ldr	r3, [r3, #0]
 80049cc:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
 80049d0:	601a      	str	r2, [r3, #0]
 80049d2:	68fb      	ldr	r3, [r7, #12]
 80049d4:	681b      	ldr	r3, [r3, #0]
 80049d6:	681b      	ldr	r3, [r3, #0]
 80049d8:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 80049dc:	2b40      	cmp	r3, #64	@ 0x40
 80049de:	d007      	beq.n	80049f0 <HAL_SPI_Transmit+0xd6>
 80049e0:	68fb      	ldr	r3, [r7, #12]
 80049e2:	681b      	ldr	r3, [r3, #0]
 80049e4:	681a      	ldr	r2, [r3, #0]
 80049e6:	68fb      	ldr	r3, [r7, #12]
 80049e8:	681b      	ldr	r3, [r3, #0]
 80049ea:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 80049ee:	601a      	str	r2, [r3, #0]
 80049f0:	68fb      	ldr	r3, [r7, #12]
 80049f2:	68db      	ldr	r3, [r3, #12]
 80049f4:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
 80049f8:	d152      	bne.n	8004aa0 <HAL_SPI_Transmit+0x186>
 80049fa:	68fb      	ldr	r3, [r7, #12]
 80049fc:	685b      	ldr	r3, [r3, #4]
 80049fe:	2b00      	cmp	r3, #0
 8004a00:	d002      	beq.n	8004a08 <HAL_SPI_Transmit+0xee>
 8004a02:	8b7b      	ldrh	r3, [r7, #26]
 8004a04:	2b01      	cmp	r3, #1
 8004a06:	d145      	bne.n	8004a94 <HAL_SPI_Transmit+0x17a>
 8004a08:	68fb      	ldr	r3, [r7, #12]
 8004a0a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8004a0c:	881a      	ldrh	r2, [r3, #0]
 8004a0e:	68fb      	ldr	r3, [r7, #12]
 8004a10:	681b      	ldr	r3, [r3, #0]
 8004a12:	60da      	str	r2, [r3, #12]
 8004a14:	68fb      	ldr	r3, [r7, #12]
 8004a16:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8004a18:	1c9a      	adds	r2, r3, #2
 8004a1a:	68fb      	ldr	r3, [r7, #12]
 8004a1c:	631a      	str	r2, [r3, #48]	@ 0x30
 8004a1e:	68fb      	ldr	r3, [r7, #12]
 8004a20:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 8004a22:	b29b      	uxth	r3, r3
 8004a24:	3b01      	subs	r3, #1
 8004a26:	b29a      	uxth	r2, r3
 8004a28:	68fb      	ldr	r3, [r7, #12]
 8004a2a:	86da      	strh	r2, [r3, #54]	@ 0x36
 8004a2c:	e032      	b.n	8004a94 <HAL_SPI_Transmit+0x17a>
 8004a2e:	68fb      	ldr	r3, [r7, #12]
 8004a30:	681b      	ldr	r3, [r3, #0]
 8004a32:	689b      	ldr	r3, [r3, #8]
 8004a34:	f003 0302 	and.w	r3, r3, #2
 8004a38:	2b02      	cmp	r3, #2
 8004a3a:	d112      	bne.n	8004a62 <HAL_SPI_Transmit+0x148>
 8004a3c:	68fb      	ldr	r3, [r7, #12]
 8004a3e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8004a40:	881a      	ldrh	r2, [r3, #0]
 8004a42:	68fb      	ldr	r3, [r7, #12]
 8004a44:	681b      	ldr	r3, [r3, #0]
 8004a46:	60da      	str	r2, [r3, #12]
 8004a48:	68fb      	ldr	r3, [r7, #12]
 8004a4a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8004a4c:	1c9a      	adds	r2, r3, #2
 8004a4e:	68fb      	ldr	r3, [r7, #12]
 8004a50:	631a      	str	r2, [r3, #48]	@ 0x30
 8004a52:	68fb      	ldr	r3, [r7, #12]
 8004a54:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 8004a56:	b29b      	uxth	r3, r3
 8004a58:	3b01      	subs	r3, #1
 8004a5a:	b29a      	uxth	r2, r3
 8004a5c:	68fb      	ldr	r3, [r7, #12]
 8004a5e:	86da      	strh	r2, [r3, #54]	@ 0x36
 8004a60:	e018      	b.n	8004a94 <HAL_SPI_Transmit+0x17a>
 8004a62:	f7fd fd2b 	bl	80024bc <HAL_GetTick>
 8004a66:	4602      	mov	r2, r0
 8004a68:	69fb      	ldr	r3, [r7, #28]
 8004a6a:	1ad3      	subs	r3, r2, r3
 8004a6c:	683a      	ldr	r2, [r7, #0]
 8004a6e:	429a      	cmp	r2, r3
 8004a70:	d803      	bhi.n	8004a7a <HAL_SPI_Transmit+0x160>
 8004a72:	683b      	ldr	r3, [r7, #0]
 8004a74:	f1b3 3fff 	cmp.w	r3, #4294967295
 8004a78:	d102      	bne.n	8004a80 <HAL_SPI_Transmit+0x166>
 8004a7a:	683b      	ldr	r3, [r7, #0]
 8004a7c:	2b00      	cmp	r3, #0
 8004a7e:	d109      	bne.n	8004a94 <HAL_SPI_Transmit+0x17a>
 8004a80:	68fb      	ldr	r3, [r7, #12]
 8004a82:	2201      	movs	r2, #1
 8004a84:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
 8004a88:	68fb      	ldr	r3, [r7, #12]
 8004a8a:	2200      	movs	r2, #0
 8004a8c:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 8004a90:	2303      	movs	r3, #3
 8004a92:	e082      	b.n	8004b9a <HAL_SPI_Transmit+0x280>
 8004a94:	68fb      	ldr	r3, [r7, #12]
 8004a96:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 8004a98:	b29b      	uxth	r3, r3
 8004a9a:	2b00      	cmp	r3, #0
 8004a9c:	d1c7      	bne.n	8004a2e <HAL_SPI_Transmit+0x114>
 8004a9e:	e053      	b.n	8004b48 <HAL_SPI_Transmit+0x22e>
 8004aa0:	68fb      	ldr	r3, [r7, #12]
 8004aa2:	685b      	ldr	r3, [r3, #4]
 8004aa4:	2b00      	cmp	r3, #0
 8004aa6:	d002      	beq.n	8004aae <HAL_SPI_Transmit+0x194>
 8004aa8:	8b7b      	ldrh	r3, [r7, #26]
 8004aaa:	2b01      	cmp	r3, #1
 8004aac:	d147      	bne.n	8004b3e <HAL_SPI_Transmit+0x224>
 8004aae:	68fb      	ldr	r3, [r7, #12]
 8004ab0:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8004ab2:	68fb      	ldr	r3, [r7, #12]
 8004ab4:	681b      	ldr	r3, [r3, #0]
 8004ab6:	330c      	adds	r3, #12
 8004ab8:	7812      	ldrb	r2, [r2, #0]
 8004aba:	701a      	strb	r2, [r3, #0]
 8004abc:	68fb      	ldr	r3, [r7, #12]
 8004abe:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8004ac0:	1c5a      	adds	r2, r3, #1
 8004ac2:	68fb      	ldr	r3, [r7, #12]
 8004ac4:	631a      	str	r2, [r3, #48]	@ 0x30
 8004ac6:	68fb      	ldr	r3, [r7, #12]
 8004ac8:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 8004aca:	b29b      	uxth	r3, r3
 8004acc:	3b01      	subs	r3, #1
 8004ace:	b29a      	uxth	r2, r3
 8004ad0:	68fb      	ldr	r3, [r7, #12]
 8004ad2:	86da      	strh	r2, [r3, #54]	@ 0x36
 8004ad4:	e033      	b.n	8004b3e <HAL_SPI_Transmit+0x224>
 8004ad6:	68fb      	ldr	r3, [r7, #12]
 8004ad8:	681b      	ldr	r3, [r3, #0]
 8004ada:	689b      	ldr	r3, [r3, #8]
 8004adc:	f003 0302 	and.w	r3, r3, #2
 8004ae0:	2b02      	cmp	r3, #2
 8004ae2:	d113      	bne.n	8004b0c <HAL_SPI_Transmit+0x1f2>
 8004ae4:	68fb      	ldr	r3, [r7, #12]
 8004ae6:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8004ae8:	68fb      	ldr	r3, [r7, #12]
 8004aea:	681b      	ldr	r3, [r3, #0]
 8004aec:	330c      	adds	r3, #12
 8004aee:	7812      	ldrb	r2, [r2, #0]
 8004af0:	701a      	strb	r2, [r3, #0]
 8004af2:	68fb      	ldr	r3, [r7, #12]
 8004af4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8004af6:	1c5a      	adds	r2, r3, #1
 8004af8:	68fb      	ldr	r3, [r7, #12]
 8004afa:	631a      	str	r2, [r3, #48]	@ 0x30
 8004afc:	68fb      	ldr	r3, [r7, #12]
 8004afe:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 8004b00:	b29b      	uxth	r3, r3
 8004b02:	3b01      	subs	r3, #1
 8004b04:	b29a      	uxth	r2, r3
 8004b06:	68fb      	ldr	r3, [r7, #12]
 8004b08:	86da      	strh	r2, [r3, #54]	@ 0x36
 8004b0a:	e018      	b.n	8004b3e <HAL_SPI_Transmit+0x224>
 8004b0c:	f7fd fcd6 	bl	80024bc <HAL_GetTick>
 8004b10:	4602      	mov	r2, r0
 8004b12:	69fb      	ldr	r3, [r7, #28]
 8004b14:	1ad3      	subs	r3, r2, r3
 8004b16:	683a      	ldr	r2, [r7, #0]
 8004b18:	429a      	cmp	r2, r3
 8004b1a:	d803      	bhi.n	8004b24 <HAL_SPI_Transmit+0x20a>
 8004b1c:	683b      	ldr	r3, [r7, #0]
 8004b1e:	f1b3 3fff 	cmp.w	r3, #4294967295
 8004b22:	d102      	bne.n	8004b2a <HAL_SPI_Transmit+0x210>
 8004b24:	683b      	ldr	r3, [r7, #0]
 8004b26:	2b00      	cmp	r3, #0
 8004b28:	d109      	bne.n	8004b3e <HAL_SPI_Transmit+0x224>
 8004b2a:	68fb      	ldr	r3, [r7, #12]
 8004b2c:	2201      	movs	r2, #1
 8004b2e:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
 8004b32:	68fb      	ldr	r3, [r7, #12]
 8004b34:	2200      	movs	r2, #0
 8004b36:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 8004b3a:	2303      	movs	r3, #3
 8004b3c:	e02d      	b.n	8004b9a <HAL_SPI_Transmit+0x280>
 8004b3e:	68fb      	ldr	r3, [r7, #12]
 8004b40:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 8004b42:	b29b      	uxth	r3, r3
 8004b44:	2b00      	cmp	r3, #0
 8004b46:	d1c6      	bne.n	8004ad6 <HAL_SPI_Transmit+0x1bc>
 8004b48:	69fa      	ldr	r2, [r7, #28]
 8004b4a:	6839      	ldr	r1, [r7, #0]
 8004b4c:	68f8      	ldr	r0, [r7, #12]
 8004b4e:	f000 f8b1 	bl	8004cb4 <SPI_EndRxTxTransaction>
 8004b52:	4603      	mov	r3, r0
 8004b54:	2b00      	cmp	r3, #0
 8004b56:	d002      	beq.n	8004b5e <HAL_SPI_Transmit+0x244>
 8004b58:	68fb      	ldr	r3, [r7, #12]
 8004b5a:	2220      	movs	r2, #32
 8004b5c:	655a      	str	r2, [r3, #84]	@ 0x54
 8004b5e:	68fb      	ldr	r3, [r7, #12]
 8004b60:	689b      	ldr	r3, [r3, #8]
 8004b62:	2b00      	cmp	r3, #0
 8004b64:	d10a      	bne.n	8004b7c <HAL_SPI_Transmit+0x262>
 8004b66:	2300      	movs	r3, #0
 8004b68:	617b      	str	r3, [r7, #20]
 8004b6a:	68fb      	ldr	r3, [r7, #12]
 8004b6c:	681b      	ldr	r3, [r3, #0]
 8004b6e:	68db      	ldr	r3, [r3, #12]
 8004b70:	617b      	str	r3, [r7, #20]
 8004b72:	68fb      	ldr	r3, [r7, #12]
 8004b74:	681b      	ldr	r3, [r3, #0]
 8004b76:	689b      	ldr	r3, [r3, #8]
 8004b78:	617b      	str	r3, [r7, #20]
 8004b7a:	697b      	ldr	r3, [r7, #20]
 8004b7c:	68fb      	ldr	r3, [r7, #12]
 8004b7e:	2201      	movs	r2, #1
 8004b80:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
 8004b84:	68fb      	ldr	r3, [r7, #12]
 8004b86:	2200      	movs	r2, #0
 8004b88:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 8004b8c:	68fb      	ldr	r3, [r7, #12]
 8004b8e:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8004b90:	2b00      	cmp	r3, #0
 8004b92:	d001      	beq.n	8004b98 <HAL_SPI_Transmit+0x27e>
 8004b94:	2301      	movs	r3, #1
 8004b96:	e000      	b.n	8004b9a <HAL_SPI_Transmit+0x280>
 8004b98:	2300      	movs	r3, #0
 8004b9a:	4618      	mov	r0, r3
 8004b9c:	3720      	adds	r7, #32
 8004b9e:	46bd      	mov	sp, r7
 8004ba0:	bd80      	pop	{r7, pc}
	...

08004ba4 <SPI_WaitFlagStateUntilTimeout>:
 8004ba4:	b580      	push	{r7, lr}
 8004ba6:	b088      	sub	sp, #32
 8004ba8:	af00      	add	r7, sp, #0
 8004baa:	60f8      	str	r0, [r7, #12]
 8004bac:	60b9      	str	r1, [r7, #8]
 8004bae:	603b      	str	r3, [r7, #0]
 8004bb0:	4613      	mov	r3, r2
 8004bb2:	71fb      	strb	r3, [r7, #7]
 8004bb4:	f7fd fc82 	bl	80024bc <HAL_GetTick>
 8004bb8:	4602      	mov	r2, r0
 8004bba:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8004bbc:	1a9b      	subs	r3, r3, r2
 8004bbe:	683a      	ldr	r2, [r7, #0]
 8004bc0:	4413      	add	r3, r2
 8004bc2:	61fb      	str	r3, [r7, #28]
 8004bc4:	f7fd fc7a 	bl	80024bc <HAL_GetTick>
 8004bc8:	61b8      	str	r0, [r7, #24]
 8004bca:	4b39      	ldr	r3, [pc, #228]	@ (8004cb0 <SPI_WaitFlagStateUntilTimeout+0x10c>)
 8004bcc:	681b      	ldr	r3, [r3, #0]
 8004bce:	015b      	lsls	r3, r3, #5
 8004bd0:	0d1b      	lsrs	r3, r3, #20
 8004bd2:	69fa      	ldr	r2, [r7, #28]
 8004bd4:	fb02 f303 	mul.w	r3, r2, r3
 8004bd8:	617b      	str	r3, [r7, #20]
 8004bda:	e055      	b.n	8004c88 <SPI_WaitFlagStateUntilTimeout+0xe4>
 8004bdc:	683b      	ldr	r3, [r7, #0]
 8004bde:	f1b3 3fff 	cmp.w	r3, #4294967295
 8004be2:	d051      	beq.n	8004c88 <SPI_WaitFlagStateUntilTimeout+0xe4>
 8004be4:	f7fd fc6a 	bl	80024bc <HAL_GetTick>
 8004be8:	4602      	mov	r2, r0
 8004bea:	69bb      	ldr	r3, [r7, #24]
 8004bec:	1ad3      	subs	r3, r2, r3
 8004bee:	69fa      	ldr	r2, [r7, #28]
 8004bf0:	429a      	cmp	r2, r3
 8004bf2:	d902      	bls.n	8004bfa <SPI_WaitFlagStateUntilTimeout+0x56>
 8004bf4:	69fb      	ldr	r3, [r7, #28]
 8004bf6:	2b00      	cmp	r3, #0
 8004bf8:	d13d      	bne.n	8004c76 <SPI_WaitFlagStateUntilTimeout+0xd2>
 8004bfa:	68fb      	ldr	r3, [r7, #12]
 8004bfc:	681b      	ldr	r3, [r3, #0]
 8004bfe:	685a      	ldr	r2, [r3, #4]
 8004c00:	68fb      	ldr	r3, [r7, #12]
 8004c02:	681b      	ldr	r3, [r3, #0]
 8004c04:	f022 02e0 	bic.w	r2, r2, #224	@ 0xe0
 8004c08:	605a      	str	r2, [r3, #4]
 8004c0a:	68fb      	ldr	r3, [r7, #12]
 8004c0c:	685b      	ldr	r3, [r3, #4]
 8004c0e:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 8004c12:	d111      	bne.n	8004c38 <SPI_WaitFlagStateUntilTimeout+0x94>
 8004c14:	68fb      	ldr	r3, [r7, #12]
 8004c16:	689b      	ldr	r3, [r3, #8]
 8004c18:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 8004c1c:	d004      	beq.n	8004c28 <SPI_WaitFlagStateUntilTimeout+0x84>
 8004c1e:	68fb      	ldr	r3, [r7, #12]
 8004c20:	689b      	ldr	r3, [r3, #8]
 8004c22:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8004c26:	d107      	bne.n	8004c38 <SPI_WaitFlagStateUntilTimeout+0x94>
 8004c28:	68fb      	ldr	r3, [r7, #12]
 8004c2a:	681b      	ldr	r3, [r3, #0]
 8004c2c:	681a      	ldr	r2, [r3, #0]
 8004c2e:	68fb      	ldr	r3, [r7, #12]
 8004c30:	681b      	ldr	r3, [r3, #0]
 8004c32:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 8004c36:	601a      	str	r2, [r3, #0]
 8004c38:	68fb      	ldr	r3, [r7, #12]
 8004c3a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8004c3c:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 8004c40:	d10f      	bne.n	8004c62 <SPI_WaitFlagStateUntilTimeout+0xbe>
 8004c42:	68fb      	ldr	r3, [r7, #12]
 8004c44:	681b      	ldr	r3, [r3, #0]
 8004c46:	681a      	ldr	r2, [r3, #0]
 8004c48:	68fb      	ldr	r3, [r7, #12]
 8004c4a:	681b      	ldr	r3, [r3, #0]
 8004c4c:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
 8004c50:	601a      	str	r2, [r3, #0]
 8004c52:	68fb      	ldr	r3, [r7, #12]
 8004c54:	681b      	ldr	r3, [r3, #0]
 8004c56:	681a      	ldr	r2, [r3, #0]
 8004c58:	68fb      	ldr	r3, [r7, #12]
 8004c5a:	681b      	ldr	r3, [r3, #0]
 8004c5c:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
 8004c60:	601a      	str	r2, [r3, #0]
 8004c62:	68fb      	ldr	r3, [r7, #12]
 8004c64:	2201      	movs	r2, #1
 8004c66:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
 8004c6a:	68fb      	ldr	r3, [r7, #12]
 8004c6c:	2200      	movs	r2, #0
 8004c6e:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 8004c72:	2303      	movs	r3, #3
 8004c74:	e018      	b.n	8004ca8 <SPI_WaitFlagStateUntilTimeout+0x104>
 8004c76:	697b      	ldr	r3, [r7, #20]
 8004c78:	2b00      	cmp	r3, #0
 8004c7a:	d102      	bne.n	8004c82 <SPI_WaitFlagStateUntilTimeout+0xde>
 8004c7c:	2300      	movs	r3, #0
 8004c7e:	61fb      	str	r3, [r7, #28]
 8004c80:	e002      	b.n	8004c88 <SPI_WaitFlagStateUntilTimeout+0xe4>
 8004c82:	697b      	ldr	r3, [r7, #20]
 8004c84:	3b01      	subs	r3, #1
 8004c86:	617b      	str	r3, [r7, #20]
 8004c88:	68fb      	ldr	r3, [r7, #12]
 8004c8a:	681b      	ldr	r3, [r3, #0]
 8004c8c:	689a      	ldr	r2, [r3, #8]
 8004c8e:	68bb      	ldr	r3, [r7, #8]
 8004c90:	4013      	ands	r3, r2
 8004c92:	68ba      	ldr	r2, [r7, #8]
 8004c94:	429a      	cmp	r2, r3
 8004c96:	bf0c      	ite	eq
 8004c98:	2301      	moveq	r3, #1
 8004c9a:	2300      	movne	r3, #0
 8004c9c:	b2db      	uxtb	r3, r3
 8004c9e:	461a      	mov	r2, r3
 8004ca0:	79fb      	ldrb	r3, [r7, #7]
 8004ca2:	429a      	cmp	r2, r3
 8004ca4:	d19a      	bne.n	8004bdc <SPI_WaitFlagStateUntilTimeout+0x38>
 8004ca6:	2300      	movs	r3, #0
 8004ca8:	4618      	mov	r0, r3
 8004caa:	3720      	adds	r7, #32
 8004cac:	46bd      	mov	sp, r7
 8004cae:	bd80      	pop	{r7, pc}
 8004cb0:	20000030 	.word	0x20000030

08004cb4 <SPI_EndRxTxTransaction>:
 8004cb4:	b580      	push	{r7, lr}
 8004cb6:	b088      	sub	sp, #32
 8004cb8:	af02      	add	r7, sp, #8
 8004cba:	60f8      	str	r0, [r7, #12]
 8004cbc:	60b9      	str	r1, [r7, #8]
 8004cbe:	607a      	str	r2, [r7, #4]
 8004cc0:	687b      	ldr	r3, [r7, #4]
 8004cc2:	9300      	str	r3, [sp, #0]
 8004cc4:	68bb      	ldr	r3, [r7, #8]
 8004cc6:	2201      	movs	r2, #1
 8004cc8:	2102      	movs	r1, #2
 8004cca:	68f8      	ldr	r0, [r7, #12]
 8004ccc:	f7ff ff6a 	bl	8004ba4 <SPI_WaitFlagStateUntilTimeout>
 8004cd0:	4603      	mov	r3, r0
 8004cd2:	2b00      	cmp	r3, #0
 8004cd4:	d007      	beq.n	8004ce6 <SPI_EndRxTxTransaction+0x32>
 8004cd6:	68fb      	ldr	r3, [r7, #12]
 8004cd8:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8004cda:	f043 0220 	orr.w	r2, r3, #32
 8004cde:	68fb      	ldr	r3, [r7, #12]
 8004ce0:	655a      	str	r2, [r3, #84]	@ 0x54
 8004ce2:	2303      	movs	r3, #3
 8004ce4:	e032      	b.n	8004d4c <SPI_EndRxTxTransaction+0x98>
 8004ce6:	4b1b      	ldr	r3, [pc, #108]	@ (8004d54 <SPI_EndRxTxTransaction+0xa0>)
 8004ce8:	681b      	ldr	r3, [r3, #0]
 8004cea:	4a1b      	ldr	r2, [pc, #108]	@ (8004d58 <SPI_EndRxTxTransaction+0xa4>)
 8004cec:	fba2 2303 	umull	r2, r3, r2, r3
 8004cf0:	0d5b      	lsrs	r3, r3, #21
 8004cf2:	f44f 727a 	mov.w	r2, #1000	@ 0x3e8
 8004cf6:	fb02 f303 	mul.w	r3, r2, r3
 8004cfa:	617b      	str	r3, [r7, #20]
 8004cfc:	68fb      	ldr	r3, [r7, #12]
 8004cfe:	685b      	ldr	r3, [r3, #4]
 8004d00:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 8004d04:	d112      	bne.n	8004d2c <SPI_EndRxTxTransaction+0x78>
 8004d06:	687b      	ldr	r3, [r7, #4]
 8004d08:	9300      	str	r3, [sp, #0]
 8004d0a:	68bb      	ldr	r3, [r7, #8]
 8004d0c:	2200      	movs	r2, #0
 8004d0e:	2180      	movs	r1, #128	@ 0x80
 8004d10:	68f8      	ldr	r0, [r7, #12]
 8004d12:	f7ff ff47 	bl	8004ba4 <SPI_WaitFlagStateUntilTimeout>
 8004d16:	4603      	mov	r3, r0
 8004d18:	2b00      	cmp	r3, #0
 8004d1a:	d016      	beq.n	8004d4a <SPI_EndRxTxTransaction+0x96>
 8004d1c:	68fb      	ldr	r3, [r7, #12]
 8004d1e:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8004d20:	f043 0220 	orr.w	r2, r3, #32
 8004d24:	68fb      	ldr	r3, [r7, #12]
 8004d26:	655a      	str	r2, [r3, #84]	@ 0x54
 8004d28:	2303      	movs	r3, #3
 8004d2a:	e00f      	b.n	8004d4c <SPI_EndRxTxTransaction+0x98>
 8004d2c:	697b      	ldr	r3, [r7, #20]
 8004d2e:	2b00      	cmp	r3, #0
 8004d30:	d00a      	beq.n	8004d48 <SPI_EndRxTxTransaction+0x94>
 8004d32:	697b      	ldr	r3, [r7, #20]
 8004d34:	3b01      	subs	r3, #1
 8004d36:	617b      	str	r3, [r7, #20]
 8004d38:	68fb      	ldr	r3, [r7, #12]
 8004d3a:	681b      	ldr	r3, [r3, #0]
 8004d3c:	689b      	ldr	r3, [r3, #8]
 8004d3e:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8004d42:	2b80      	cmp	r3, #128	@ 0x80
 8004d44:	d0f2      	beq.n	8004d2c <SPI_EndRxTxTransaction+0x78>
 8004d46:	e000      	b.n	8004d4a <SPI_EndRxTxTransaction+0x96>
 8004d48:	bf00      	nop
 8004d4a:	2300      	movs	r3, #0
 8004d4c:	4618      	mov	r0, r3
 8004d4e:	3718      	adds	r7, #24
 8004d50:	46bd      	mov	sp, r7
 8004d52:	bd80      	pop	{r7, pc}
 8004d54:	20000030 	.word	0x20000030
 8004d58:	165e9f81 	.word	0x165e9f81

08004d5c <HAL_TIM_Base_Init>:
 8004d5c:	b580      	push	{r7, lr}
 8004d5e:	b082      	sub	sp, #8
 8004d60:	af00      	add	r7, sp, #0
 8004d62:	6078      	str	r0, [r7, #4]
 8004d64:	687b      	ldr	r3, [r7, #4]
 8004d66:	2b00      	cmp	r3, #0
 8004d68:	d101      	bne.n	8004d6e <HAL_TIM_Base_Init+0x12>
 8004d6a:	2301      	movs	r3, #1
 8004d6c:	e041      	b.n	8004df2 <HAL_TIM_Base_Init+0x96>
 8004d6e:	687b      	ldr	r3, [r7, #4]
 8004d70:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8004d74:	b2db      	uxtb	r3, r3
 8004d76:	2b00      	cmp	r3, #0
 8004d78:	d106      	bne.n	8004d88 <HAL_TIM_Base_Init+0x2c>
 8004d7a:	687b      	ldr	r3, [r7, #4]
 8004d7c:	2200      	movs	r2, #0
 8004d7e:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8004d82:	6878      	ldr	r0, [r7, #4]
 8004d84:	f7fd fa68 	bl	8002258 <HAL_TIM_Base_MspInit>
 8004d88:	687b      	ldr	r3, [r7, #4]
 8004d8a:	2202      	movs	r2, #2
 8004d8c:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8004d90:	687b      	ldr	r3, [r7, #4]
 8004d92:	681a      	ldr	r2, [r3, #0]
 8004d94:	687b      	ldr	r3, [r7, #4]
 8004d96:	3304      	adds	r3, #4
 8004d98:	4619      	mov	r1, r3
 8004d9a:	4610      	mov	r0, r2
 8004d9c:	f000 f950 	bl	8005040 <TIM_Base_SetConfig>
 8004da0:	687b      	ldr	r3, [r7, #4]
 8004da2:	2201      	movs	r2, #1
 8004da4:	f883 2046 	strb.w	r2, [r3, #70]	@ 0x46
 8004da8:	687b      	ldr	r3, [r7, #4]
 8004daa:	2201      	movs	r2, #1
 8004dac:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8004db0:	687b      	ldr	r3, [r7, #4]
 8004db2:	2201      	movs	r2, #1
 8004db4:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 8004db8:	687b      	ldr	r3, [r7, #4]
 8004dba:	2201      	movs	r2, #1
 8004dbc:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8004dc0:	687b      	ldr	r3, [r7, #4]
 8004dc2:	2201      	movs	r2, #1
 8004dc4:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8004dc8:	687b      	ldr	r3, [r7, #4]
 8004dca:	2201      	movs	r2, #1
 8004dcc:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8004dd0:	687b      	ldr	r3, [r7, #4]
 8004dd2:	2201      	movs	r2, #1
 8004dd4:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 8004dd8:	687b      	ldr	r3, [r7, #4]
 8004dda:	2201      	movs	r2, #1
 8004ddc:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 8004de0:	687b      	ldr	r3, [r7, #4]
 8004de2:	2201      	movs	r2, #1
 8004de4:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 8004de8:	687b      	ldr	r3, [r7, #4]
 8004dea:	2201      	movs	r2, #1
 8004dec:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8004df0:	2300      	movs	r3, #0
 8004df2:	4618      	mov	r0, r3
 8004df4:	3708      	adds	r7, #8
 8004df6:	46bd      	mov	sp, r7
 8004df8:	bd80      	pop	{r7, pc}

08004dfa <HAL_TIM_IRQHandler>:
 8004dfa:	b580      	push	{r7, lr}
 8004dfc:	b084      	sub	sp, #16
 8004dfe:	af00      	add	r7, sp, #0
 8004e00:	6078      	str	r0, [r7, #4]
 8004e02:	687b      	ldr	r3, [r7, #4]
 8004e04:	681b      	ldr	r3, [r3, #0]
 8004e06:	68db      	ldr	r3, [r3, #12]
 8004e08:	60fb      	str	r3, [r7, #12]
 8004e0a:	687b      	ldr	r3, [r7, #4]
 8004e0c:	681b      	ldr	r3, [r3, #0]
 8004e0e:	691b      	ldr	r3, [r3, #16]
 8004e10:	60bb      	str	r3, [r7, #8]
 8004e12:	68bb      	ldr	r3, [r7, #8]
 8004e14:	f003 0302 	and.w	r3, r3, #2
 8004e18:	2b00      	cmp	r3, #0
 8004e1a:	d020      	beq.n	8004e5e <HAL_TIM_IRQHandler+0x64>
 8004e1c:	68fb      	ldr	r3, [r7, #12]
 8004e1e:	f003 0302 	and.w	r3, r3, #2
 8004e22:	2b00      	cmp	r3, #0
 8004e24:	d01b      	beq.n	8004e5e <HAL_TIM_IRQHandler+0x64>
 8004e26:	687b      	ldr	r3, [r7, #4]
 8004e28:	681b      	ldr	r3, [r3, #0]
 8004e2a:	f06f 0202 	mvn.w	r2, #2
 8004e2e:	611a      	str	r2, [r3, #16]
 8004e30:	687b      	ldr	r3, [r7, #4]
 8004e32:	2201      	movs	r2, #1
 8004e34:	771a      	strb	r2, [r3, #28]
 8004e36:	687b      	ldr	r3, [r7, #4]
 8004e38:	681b      	ldr	r3, [r3, #0]
 8004e3a:	699b      	ldr	r3, [r3, #24]
 8004e3c:	f003 0303 	and.w	r3, r3, #3
 8004e40:	2b00      	cmp	r3, #0
 8004e42:	d003      	beq.n	8004e4c <HAL_TIM_IRQHandler+0x52>
 8004e44:	6878      	ldr	r0, [r7, #4]
 8004e46:	f000 f8dc 	bl	8005002 <HAL_TIM_IC_CaptureCallback>
 8004e4a:	e005      	b.n	8004e58 <HAL_TIM_IRQHandler+0x5e>
 8004e4c:	6878      	ldr	r0, [r7, #4]
 8004e4e:	f000 f8ce 	bl	8004fee <HAL_TIM_OC_DelayElapsedCallback>
 8004e52:	6878      	ldr	r0, [r7, #4]
 8004e54:	f000 f8df 	bl	8005016 <HAL_TIM_PWM_PulseFinishedCallback>
 8004e58:	687b      	ldr	r3, [r7, #4]
 8004e5a:	2200      	movs	r2, #0
 8004e5c:	771a      	strb	r2, [r3, #28]
 8004e5e:	68bb      	ldr	r3, [r7, #8]
 8004e60:	f003 0304 	and.w	r3, r3, #4
 8004e64:	2b00      	cmp	r3, #0
 8004e66:	d020      	beq.n	8004eaa <HAL_TIM_IRQHandler+0xb0>
 8004e68:	68fb      	ldr	r3, [r7, #12]
 8004e6a:	f003 0304 	and.w	r3, r3, #4
 8004e6e:	2b00      	cmp	r3, #0
 8004e70:	d01b      	beq.n	8004eaa <HAL_TIM_IRQHandler+0xb0>
 8004e72:	687b      	ldr	r3, [r7, #4]
 8004e74:	681b      	ldr	r3, [r3, #0]
 8004e76:	f06f 0204 	mvn.w	r2, #4
 8004e7a:	611a      	str	r2, [r3, #16]
 8004e7c:	687b      	ldr	r3, [r7, #4]
 8004e7e:	2202      	movs	r2, #2
 8004e80:	771a      	strb	r2, [r3, #28]
 8004e82:	687b      	ldr	r3, [r7, #4]
 8004e84:	681b      	ldr	r3, [r3, #0]
 8004e86:	699b      	ldr	r3, [r3, #24]
 8004e88:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 8004e8c:	2b00      	cmp	r3, #0
 8004e8e:	d003      	beq.n	8004e98 <HAL_TIM_IRQHandler+0x9e>
 8004e90:	6878      	ldr	r0, [r7, #4]
 8004e92:	f000 f8b6 	bl	8005002 <HAL_TIM_IC_CaptureCallback>
 8004e96:	e005      	b.n	8004ea4 <HAL_TIM_IRQHandler+0xaa>
 8004e98:	6878      	ldr	r0, [r7, #4]
 8004e9a:	f000 f8a8 	bl	8004fee <HAL_TIM_OC_DelayElapsedCallback>
 8004e9e:	6878      	ldr	r0, [r7, #4]
 8004ea0:	f000 f8b9 	bl	8005016 <HAL_TIM_PWM_PulseFinishedCallback>
 8004ea4:	687b      	ldr	r3, [r7, #4]
 8004ea6:	2200      	movs	r2, #0
 8004ea8:	771a      	strb	r2, [r3, #28]
 8004eaa:	68bb      	ldr	r3, [r7, #8]
 8004eac:	f003 0308 	and.w	r3, r3, #8
 8004eb0:	2b00      	cmp	r3, #0
 8004eb2:	d020      	beq.n	8004ef6 <HAL_TIM_IRQHandler+0xfc>
 8004eb4:	68fb      	ldr	r3, [r7, #12]
 8004eb6:	f003 0308 	and.w	r3, r3, #8
 8004eba:	2b00      	cmp	r3, #0
 8004ebc:	d01b      	beq.n	8004ef6 <HAL_TIM_IRQHandler+0xfc>
 8004ebe:	687b      	ldr	r3, [r7, #4]
 8004ec0:	681b      	ldr	r3, [r3, #0]
 8004ec2:	f06f 0208 	mvn.w	r2, #8
 8004ec6:	611a      	str	r2, [r3, #16]
 8004ec8:	687b      	ldr	r3, [r7, #4]
 8004eca:	2204      	movs	r2, #4
 8004ecc:	771a      	strb	r2, [r3, #28]
 8004ece:	687b      	ldr	r3, [r7, #4]
 8004ed0:	681b      	ldr	r3, [r3, #0]
 8004ed2:	69db      	ldr	r3, [r3, #28]
 8004ed4:	f003 0303 	and.w	r3, r3, #3
 8004ed8:	2b00      	cmp	r3, #0
 8004eda:	d003      	beq.n	8004ee4 <HAL_TIM_IRQHandler+0xea>
 8004edc:	6878      	ldr	r0, [r7, #4]
 8004ede:	f000 f890 	bl	8005002 <HAL_TIM_IC_CaptureCallback>
 8004ee2:	e005      	b.n	8004ef0 <HAL_TIM_IRQHandler+0xf6>
 8004ee4:	6878      	ldr	r0, [r7, #4]
 8004ee6:	f000 f882 	bl	8004fee <HAL_TIM_OC_DelayElapsedCallback>
 8004eea:	6878      	ldr	r0, [r7, #4]
 8004eec:	f000 f893 	bl	8005016 <HAL_TIM_PWM_PulseFinishedCallback>
 8004ef0:	687b      	ldr	r3, [r7, #4]
 8004ef2:	2200      	movs	r2, #0
 8004ef4:	771a      	strb	r2, [r3, #28]
 8004ef6:	68bb      	ldr	r3, [r7, #8]
 8004ef8:	f003 0310 	and.w	r3, r3, #16
 8004efc:	2b00      	cmp	r3, #0
 8004efe:	d020      	beq.n	8004f42 <HAL_TIM_IRQHandler+0x148>
 8004f00:	68fb      	ldr	r3, [r7, #12]
 8004f02:	f003 0310 	and.w	r3, r3, #16
 8004f06:	2b00      	cmp	r3, #0
 8004f08:	d01b      	beq.n	8004f42 <HAL_TIM_IRQHandler+0x148>
 8004f0a:	687b      	ldr	r3, [r7, #4]
 8004f0c:	681b      	ldr	r3, [r3, #0]
 8004f0e:	f06f 0210 	mvn.w	r2, #16
 8004f12:	611a      	str	r2, [r3, #16]
 8004f14:	687b      	ldr	r3, [r7, #4]
 8004f16:	2208      	movs	r2, #8
 8004f18:	771a      	strb	r2, [r3, #28]
 8004f1a:	687b      	ldr	r3, [r7, #4]
 8004f1c:	681b      	ldr	r3, [r3, #0]
 8004f1e:	69db      	ldr	r3, [r3, #28]
 8004f20:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 8004f24:	2b00      	cmp	r3, #0
 8004f26:	d003      	beq.n	8004f30 <HAL_TIM_IRQHandler+0x136>
 8004f28:	6878      	ldr	r0, [r7, #4]
 8004f2a:	f000 f86a 	bl	8005002 <HAL_TIM_IC_CaptureCallback>
 8004f2e:	e005      	b.n	8004f3c <HAL_TIM_IRQHandler+0x142>
 8004f30:	6878      	ldr	r0, [r7, #4]
 8004f32:	f000 f85c 	bl	8004fee <HAL_TIM_OC_DelayElapsedCallback>
 8004f36:	6878      	ldr	r0, [r7, #4]
 8004f38:	f000 f86d 	bl	8005016 <HAL_TIM_PWM_PulseFinishedCallback>
 8004f3c:	687b      	ldr	r3, [r7, #4]
 8004f3e:	2200      	movs	r2, #0
 8004f40:	771a      	strb	r2, [r3, #28]
 8004f42:	68bb      	ldr	r3, [r7, #8]
 8004f44:	f003 0301 	and.w	r3, r3, #1
 8004f48:	2b00      	cmp	r3, #0
 8004f4a:	d00c      	beq.n	8004f66 <HAL_TIM_IRQHandler+0x16c>
 8004f4c:	68fb      	ldr	r3, [r7, #12]
 8004f4e:	f003 0301 	and.w	r3, r3, #1
 8004f52:	2b00      	cmp	r3, #0
 8004f54:	d007      	beq.n	8004f66 <HAL_TIM_IRQHandler+0x16c>
 8004f56:	687b      	ldr	r3, [r7, #4]
 8004f58:	681b      	ldr	r3, [r3, #0]
 8004f5a:	f06f 0201 	mvn.w	r2, #1
 8004f5e:	611a      	str	r2, [r3, #16]
 8004f60:	6878      	ldr	r0, [r7, #4]
 8004f62:	f000 f83a 	bl	8004fda <HAL_TIM_PeriodElapsedCallback>
 8004f66:	68bb      	ldr	r3, [r7, #8]
 8004f68:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8004f6c:	2b00      	cmp	r3, #0
 8004f6e:	d00c      	beq.n	8004f8a <HAL_TIM_IRQHandler+0x190>
 8004f70:	68fb      	ldr	r3, [r7, #12]
 8004f72:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8004f76:	2b00      	cmp	r3, #0
 8004f78:	d007      	beq.n	8004f8a <HAL_TIM_IRQHandler+0x190>
 8004f7a:	687b      	ldr	r3, [r7, #4]
 8004f7c:	681b      	ldr	r3, [r3, #0]
 8004f7e:	f06f 0280 	mvn.w	r2, #128	@ 0x80
 8004f82:	611a      	str	r2, [r3, #16]
 8004f84:	6878      	ldr	r0, [r7, #4]
 8004f86:	f000 f90b 	bl	80051a0 <HAL_TIMEx_BreakCallback>
 8004f8a:	68bb      	ldr	r3, [r7, #8]
 8004f8c:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8004f90:	2b00      	cmp	r3, #0
 8004f92:	d00c      	beq.n	8004fae <HAL_TIM_IRQHandler+0x1b4>
 8004f94:	68fb      	ldr	r3, [r7, #12]
 8004f96:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8004f9a:	2b00      	cmp	r3, #0
 8004f9c:	d007      	beq.n	8004fae <HAL_TIM_IRQHandler+0x1b4>
 8004f9e:	687b      	ldr	r3, [r7, #4]
 8004fa0:	681b      	ldr	r3, [r3, #0]
 8004fa2:	f06f 0240 	mvn.w	r2, #64	@ 0x40
 8004fa6:	611a      	str	r2, [r3, #16]
 8004fa8:	6878      	ldr	r0, [r7, #4]
 8004faa:	f000 f83e 	bl	800502a <HAL_TIM_TriggerCallback>
 8004fae:	68bb      	ldr	r3, [r7, #8]
 8004fb0:	f003 0320 	and.w	r3, r3, #32
 8004fb4:	2b00      	cmp	r3, #0
 8004fb6:	d00c      	beq.n	8004fd2 <HAL_TIM_IRQHandler+0x1d8>
 8004fb8:	68fb      	ldr	r3, [r7, #12]
 8004fba:	f003 0320 	and.w	r3, r3, #32
 8004fbe:	2b00      	cmp	r3, #0
 8004fc0:	d007      	beq.n	8004fd2 <HAL_TIM_IRQHandler+0x1d8>
 8004fc2:	687b      	ldr	r3, [r7, #4]
 8004fc4:	681b      	ldr	r3, [r3, #0]
 8004fc6:	f06f 0220 	mvn.w	r2, #32
 8004fca:	611a      	str	r2, [r3, #16]
 8004fcc:	6878      	ldr	r0, [r7, #4]
 8004fce:	f000 f8dd 	bl	800518c <HAL_TIMEx_CommutCallback>
 8004fd2:	bf00      	nop
 8004fd4:	3710      	adds	r7, #16
 8004fd6:	46bd      	mov	sp, r7
 8004fd8:	bd80      	pop	{r7, pc}

08004fda <HAL_TIM_PeriodElapsedCallback>:
 8004fda:	b480      	push	{r7}
 8004fdc:	b083      	sub	sp, #12
 8004fde:	af00      	add	r7, sp, #0
 8004fe0:	6078      	str	r0, [r7, #4]
 8004fe2:	bf00      	nop
 8004fe4:	370c      	adds	r7, #12
 8004fe6:	46bd      	mov	sp, r7
 8004fe8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004fec:	4770      	bx	lr

08004fee <HAL_TIM_OC_DelayElapsedCallback>:
 8004fee:	b480      	push	{r7}
 8004ff0:	b083      	sub	sp, #12
 8004ff2:	af00      	add	r7, sp, #0
 8004ff4:	6078      	str	r0, [r7, #4]
 8004ff6:	bf00      	nop
 8004ff8:	370c      	adds	r7, #12
 8004ffa:	46bd      	mov	sp, r7
 8004ffc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005000:	4770      	bx	lr

08005002 <HAL_TIM_IC_CaptureCallback>:
 8005002:	b480      	push	{r7}
 8005004:	b083      	sub	sp, #12
 8005006:	af00      	add	r7, sp, #0
 8005008:	6078      	str	r0, [r7, #4]
 800500a:	bf00      	nop
 800500c:	370c      	adds	r7, #12
 800500e:	46bd      	mov	sp, r7
 8005010:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005014:	4770      	bx	lr

08005016 <HAL_TIM_PWM_PulseFinishedCallback>:
 8005016:	b480      	push	{r7}
 8005018:	b083      	sub	sp, #12
 800501a:	af00      	add	r7, sp, #0
 800501c:	6078      	str	r0, [r7, #4]
 800501e:	bf00      	nop
 8005020:	370c      	adds	r7, #12
 8005022:	46bd      	mov	sp, r7
 8005024:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005028:	4770      	bx	lr

0800502a <HAL_TIM_TriggerCallback>:
 800502a:	b480      	push	{r7}
 800502c:	b083      	sub	sp, #12
 800502e:	af00      	add	r7, sp, #0
 8005030:	6078      	str	r0, [r7, #4]
 8005032:	bf00      	nop
 8005034:	370c      	adds	r7, #12
 8005036:	46bd      	mov	sp, r7
 8005038:	f85d 7b04 	ldr.w	r7, [sp], #4
 800503c:	4770      	bx	lr
	...

08005040 <TIM_Base_SetConfig>:
 8005040:	b480      	push	{r7}
 8005042:	b085      	sub	sp, #20
 8005044:	af00      	add	r7, sp, #0
 8005046:	6078      	str	r0, [r7, #4]
 8005048:	6039      	str	r1, [r7, #0]
 800504a:	687b      	ldr	r3, [r7, #4]
 800504c:	681b      	ldr	r3, [r3, #0]
 800504e:	60fb      	str	r3, [r7, #12]
 8005050:	687b      	ldr	r3, [r7, #4]
 8005052:	4a43      	ldr	r2, [pc, #268]	@ (8005160 <TIM_Base_SetConfig+0x120>)
 8005054:	4293      	cmp	r3, r2
 8005056:	d013      	beq.n	8005080 <TIM_Base_SetConfig+0x40>
 8005058:	687b      	ldr	r3, [r7, #4]
 800505a:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 800505e:	d00f      	beq.n	8005080 <TIM_Base_SetConfig+0x40>
 8005060:	687b      	ldr	r3, [r7, #4]
 8005062:	4a40      	ldr	r2, [pc, #256]	@ (8005164 <TIM_Base_SetConfig+0x124>)
 8005064:	4293      	cmp	r3, r2
 8005066:	d00b      	beq.n	8005080 <TIM_Base_SetConfig+0x40>
 8005068:	687b      	ldr	r3, [r7, #4]
 800506a:	4a3f      	ldr	r2, [pc, #252]	@ (8005168 <TIM_Base_SetConfig+0x128>)
 800506c:	4293      	cmp	r3, r2
 800506e:	d007      	beq.n	8005080 <TIM_Base_SetConfig+0x40>
 8005070:	687b      	ldr	r3, [r7, #4]
 8005072:	4a3e      	ldr	r2, [pc, #248]	@ (800516c <TIM_Base_SetConfig+0x12c>)
 8005074:	4293      	cmp	r3, r2
 8005076:	d003      	beq.n	8005080 <TIM_Base_SetConfig+0x40>
 8005078:	687b      	ldr	r3, [r7, #4]
 800507a:	4a3d      	ldr	r2, [pc, #244]	@ (8005170 <TIM_Base_SetConfig+0x130>)
 800507c:	4293      	cmp	r3, r2
 800507e:	d108      	bne.n	8005092 <TIM_Base_SetConfig+0x52>
 8005080:	68fb      	ldr	r3, [r7, #12]
 8005082:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8005086:	60fb      	str	r3, [r7, #12]
 8005088:	683b      	ldr	r3, [r7, #0]
 800508a:	685b      	ldr	r3, [r3, #4]
 800508c:	68fa      	ldr	r2, [r7, #12]
 800508e:	4313      	orrs	r3, r2
 8005090:	60fb      	str	r3, [r7, #12]
 8005092:	687b      	ldr	r3, [r7, #4]
 8005094:	4a32      	ldr	r2, [pc, #200]	@ (8005160 <TIM_Base_SetConfig+0x120>)
 8005096:	4293      	cmp	r3, r2
 8005098:	d02b      	beq.n	80050f2 <TIM_Base_SetConfig+0xb2>
 800509a:	687b      	ldr	r3, [r7, #4]
 800509c:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 80050a0:	d027      	beq.n	80050f2 <TIM_Base_SetConfig+0xb2>
 80050a2:	687b      	ldr	r3, [r7, #4]
 80050a4:	4a2f      	ldr	r2, [pc, #188]	@ (8005164 <TIM_Base_SetConfig+0x124>)
 80050a6:	4293      	cmp	r3, r2
 80050a8:	d023      	beq.n	80050f2 <TIM_Base_SetConfig+0xb2>
 80050aa:	687b      	ldr	r3, [r7, #4]
 80050ac:	4a2e      	ldr	r2, [pc, #184]	@ (8005168 <TIM_Base_SetConfig+0x128>)
 80050ae:	4293      	cmp	r3, r2
 80050b0:	d01f      	beq.n	80050f2 <TIM_Base_SetConfig+0xb2>
 80050b2:	687b      	ldr	r3, [r7, #4]
 80050b4:	4a2d      	ldr	r2, [pc, #180]	@ (800516c <TIM_Base_SetConfig+0x12c>)
 80050b6:	4293      	cmp	r3, r2
 80050b8:	d01b      	beq.n	80050f2 <TIM_Base_SetConfig+0xb2>
 80050ba:	687b      	ldr	r3, [r7, #4]
 80050bc:	4a2c      	ldr	r2, [pc, #176]	@ (8005170 <TIM_Base_SetConfig+0x130>)
 80050be:	4293      	cmp	r3, r2
 80050c0:	d017      	beq.n	80050f2 <TIM_Base_SetConfig+0xb2>
 80050c2:	687b      	ldr	r3, [r7, #4]
 80050c4:	4a2b      	ldr	r2, [pc, #172]	@ (8005174 <TIM_Base_SetConfig+0x134>)
 80050c6:	4293      	cmp	r3, r2
 80050c8:	d013      	beq.n	80050f2 <TIM_Base_SetConfig+0xb2>
 80050ca:	687b      	ldr	r3, [r7, #4]
 80050cc:	4a2a      	ldr	r2, [pc, #168]	@ (8005178 <TIM_Base_SetConfig+0x138>)
 80050ce:	4293      	cmp	r3, r2
 80050d0:	d00f      	beq.n	80050f2 <TIM_Base_SetConfig+0xb2>
 80050d2:	687b      	ldr	r3, [r7, #4]
 80050d4:	4a29      	ldr	r2, [pc, #164]	@ (800517c <TIM_Base_SetConfig+0x13c>)
 80050d6:	4293      	cmp	r3, r2
 80050d8:	d00b      	beq.n	80050f2 <TIM_Base_SetConfig+0xb2>
 80050da:	687b      	ldr	r3, [r7, #4]
 80050dc:	4a28      	ldr	r2, [pc, #160]	@ (8005180 <TIM_Base_SetConfig+0x140>)
 80050de:	4293      	cmp	r3, r2
 80050e0:	d007      	beq.n	80050f2 <TIM_Base_SetConfig+0xb2>
 80050e2:	687b      	ldr	r3, [r7, #4]
 80050e4:	4a27      	ldr	r2, [pc, #156]	@ (8005184 <TIM_Base_SetConfig+0x144>)
 80050e6:	4293      	cmp	r3, r2
 80050e8:	d003      	beq.n	80050f2 <TIM_Base_SetConfig+0xb2>
 80050ea:	687b      	ldr	r3, [r7, #4]
 80050ec:	4a26      	ldr	r2, [pc, #152]	@ (8005188 <TIM_Base_SetConfig+0x148>)
 80050ee:	4293      	cmp	r3, r2
 80050f0:	d108      	bne.n	8005104 <TIM_Base_SetConfig+0xc4>
 80050f2:	68fb      	ldr	r3, [r7, #12]
 80050f4:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 80050f8:	60fb      	str	r3, [r7, #12]
 80050fa:	683b      	ldr	r3, [r7, #0]
 80050fc:	68db      	ldr	r3, [r3, #12]
 80050fe:	68fa      	ldr	r2, [r7, #12]
 8005100:	4313      	orrs	r3, r2
 8005102:	60fb      	str	r3, [r7, #12]
 8005104:	68fb      	ldr	r3, [r7, #12]
 8005106:	f023 0280 	bic.w	r2, r3, #128	@ 0x80
 800510a:	683b      	ldr	r3, [r7, #0]
 800510c:	695b      	ldr	r3, [r3, #20]
 800510e:	4313      	orrs	r3, r2
 8005110:	60fb      	str	r3, [r7, #12]
 8005112:	683b      	ldr	r3, [r7, #0]
 8005114:	689a      	ldr	r2, [r3, #8]
 8005116:	687b      	ldr	r3, [r7, #4]
 8005118:	62da      	str	r2, [r3, #44]	@ 0x2c
 800511a:	683b      	ldr	r3, [r7, #0]
 800511c:	681a      	ldr	r2, [r3, #0]
 800511e:	687b      	ldr	r3, [r7, #4]
 8005120:	629a      	str	r2, [r3, #40]	@ 0x28
 8005122:	687b      	ldr	r3, [r7, #4]
 8005124:	4a0e      	ldr	r2, [pc, #56]	@ (8005160 <TIM_Base_SetConfig+0x120>)
 8005126:	4293      	cmp	r3, r2
 8005128:	d003      	beq.n	8005132 <TIM_Base_SetConfig+0xf2>
 800512a:	687b      	ldr	r3, [r7, #4]
 800512c:	4a10      	ldr	r2, [pc, #64]	@ (8005170 <TIM_Base_SetConfig+0x130>)
 800512e:	4293      	cmp	r3, r2
 8005130:	d103      	bne.n	800513a <TIM_Base_SetConfig+0xfa>
 8005132:	683b      	ldr	r3, [r7, #0]
 8005134:	691a      	ldr	r2, [r3, #16]
 8005136:	687b      	ldr	r3, [r7, #4]
 8005138:	631a      	str	r2, [r3, #48]	@ 0x30
 800513a:	687b      	ldr	r3, [r7, #4]
 800513c:	681b      	ldr	r3, [r3, #0]
 800513e:	f043 0204 	orr.w	r2, r3, #4
 8005142:	687b      	ldr	r3, [r7, #4]
 8005144:	601a      	str	r2, [r3, #0]
 8005146:	687b      	ldr	r3, [r7, #4]
 8005148:	2201      	movs	r2, #1
 800514a:	615a      	str	r2, [r3, #20]
 800514c:	687b      	ldr	r3, [r7, #4]
 800514e:	68fa      	ldr	r2, [r7, #12]
 8005150:	601a      	str	r2, [r3, #0]
 8005152:	bf00      	nop
 8005154:	3714      	adds	r7, #20
 8005156:	46bd      	mov	sp, r7
 8005158:	f85d 7b04 	ldr.w	r7, [sp], #4
 800515c:	4770      	bx	lr
 800515e:	bf00      	nop
 8005160:	40010000 	.word	0x40010000
 8005164:	40000400 	.word	0x40000400
 8005168:	40000800 	.word	0x40000800
 800516c:	40000c00 	.word	0x40000c00
 8005170:	40010400 	.word	0x40010400
 8005174:	40014000 	.word	0x40014000
 8005178:	40014400 	.word	0x40014400
 800517c:	40014800 	.word	0x40014800
 8005180:	40001800 	.word	0x40001800
 8005184:	40001c00 	.word	0x40001c00
 8005188:	40002000 	.word	0x40002000

0800518c <HAL_TIMEx_CommutCallback>:
 800518c:	b480      	push	{r7}
 800518e:	b083      	sub	sp, #12
 8005190:	af00      	add	r7, sp, #0
 8005192:	6078      	str	r0, [r7, #4]
 8005194:	bf00      	nop
 8005196:	370c      	adds	r7, #12
 8005198:	46bd      	mov	sp, r7
 800519a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800519e:	4770      	bx	lr

080051a0 <HAL_TIMEx_BreakCallback>:
 80051a0:	b480      	push	{r7}
 80051a2:	b083      	sub	sp, #12
 80051a4:	af00      	add	r7, sp, #0
 80051a6:	6078      	str	r0, [r7, #4]
 80051a8:	bf00      	nop
 80051aa:	370c      	adds	r7, #12
 80051ac:	46bd      	mov	sp, r7
 80051ae:	f85d 7b04 	ldr.w	r7, [sp], #4
 80051b2:	4770      	bx	lr

080051b4 <HAL_UART_Init>:
 80051b4:	b580      	push	{r7, lr}
 80051b6:	b082      	sub	sp, #8
 80051b8:	af00      	add	r7, sp, #0
 80051ba:	6078      	str	r0, [r7, #4]
 80051bc:	687b      	ldr	r3, [r7, #4]
 80051be:	2b00      	cmp	r3, #0
 80051c0:	d101      	bne.n	80051c6 <HAL_UART_Init+0x12>
 80051c2:	2301      	movs	r3, #1
 80051c4:	e042      	b.n	800524c <HAL_UART_Init+0x98>
 80051c6:	687b      	ldr	r3, [r7, #4]
 80051c8:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 80051cc:	b2db      	uxtb	r3, r3
 80051ce:	2b00      	cmp	r3, #0
 80051d0:	d106      	bne.n	80051e0 <HAL_UART_Init+0x2c>
 80051d2:	687b      	ldr	r3, [r7, #4]
 80051d4:	2200      	movs	r2, #0
 80051d6:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 80051da:	6878      	ldr	r0, [r7, #4]
 80051dc:	f7fd f88e 	bl	80022fc <HAL_UART_MspInit>
 80051e0:	687b      	ldr	r3, [r7, #4]
 80051e2:	2224      	movs	r2, #36	@ 0x24
 80051e4:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 80051e8:	687b      	ldr	r3, [r7, #4]
 80051ea:	681b      	ldr	r3, [r3, #0]
 80051ec:	68da      	ldr	r2, [r3, #12]
 80051ee:	687b      	ldr	r3, [r7, #4]
 80051f0:	681b      	ldr	r3, [r3, #0]
 80051f2:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
 80051f6:	60da      	str	r2, [r3, #12]
 80051f8:	6878      	ldr	r0, [r7, #4]
 80051fa:	f000 fd7f 	bl	8005cfc <UART_SetConfig>
 80051fe:	687b      	ldr	r3, [r7, #4]
 8005200:	681b      	ldr	r3, [r3, #0]
 8005202:	691a      	ldr	r2, [r3, #16]
 8005204:	687b      	ldr	r3, [r7, #4]
 8005206:	681b      	ldr	r3, [r3, #0]
 8005208:	f422 4290 	bic.w	r2, r2, #18432	@ 0x4800
 800520c:	611a      	str	r2, [r3, #16]
 800520e:	687b      	ldr	r3, [r7, #4]
 8005210:	681b      	ldr	r3, [r3, #0]
 8005212:	695a      	ldr	r2, [r3, #20]
 8005214:	687b      	ldr	r3, [r7, #4]
 8005216:	681b      	ldr	r3, [r3, #0]
 8005218:	f022 022a 	bic.w	r2, r2, #42	@ 0x2a
 800521c:	615a      	str	r2, [r3, #20]
 800521e:	687b      	ldr	r3, [r7, #4]
 8005220:	681b      	ldr	r3, [r3, #0]
 8005222:	68da      	ldr	r2, [r3, #12]
 8005224:	687b      	ldr	r3, [r7, #4]
 8005226:	681b      	ldr	r3, [r3, #0]
 8005228:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
 800522c:	60da      	str	r2, [r3, #12]
 800522e:	687b      	ldr	r3, [r7, #4]
 8005230:	2200      	movs	r2, #0
 8005232:	645a      	str	r2, [r3, #68]	@ 0x44
 8005234:	687b      	ldr	r3, [r7, #4]
 8005236:	2220      	movs	r2, #32
 8005238:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 800523c:	687b      	ldr	r3, [r7, #4]
 800523e:	2220      	movs	r2, #32
 8005240:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8005244:	687b      	ldr	r3, [r7, #4]
 8005246:	2200      	movs	r2, #0
 8005248:	635a      	str	r2, [r3, #52]	@ 0x34
 800524a:	2300      	movs	r3, #0
 800524c:	4618      	mov	r0, r3
 800524e:	3708      	adds	r7, #8
 8005250:	46bd      	mov	sp, r7
 8005252:	bd80      	pop	{r7, pc}

08005254 <HAL_UART_Transmit>:
 8005254:	b580      	push	{r7, lr}
 8005256:	b08a      	sub	sp, #40	@ 0x28
 8005258:	af02      	add	r7, sp, #8
 800525a:	60f8      	str	r0, [r7, #12]
 800525c:	60b9      	str	r1, [r7, #8]
 800525e:	603b      	str	r3, [r7, #0]
 8005260:	4613      	mov	r3, r2
 8005262:	80fb      	strh	r3, [r7, #6]
 8005264:	2300      	movs	r3, #0
 8005266:	617b      	str	r3, [r7, #20]
 8005268:	68fb      	ldr	r3, [r7, #12]
 800526a:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 800526e:	b2db      	uxtb	r3, r3
 8005270:	2b20      	cmp	r3, #32
 8005272:	d175      	bne.n	8005360 <HAL_UART_Transmit+0x10c>
 8005274:	68bb      	ldr	r3, [r7, #8]
 8005276:	2b00      	cmp	r3, #0
 8005278:	d002      	beq.n	8005280 <HAL_UART_Transmit+0x2c>
 800527a:	88fb      	ldrh	r3, [r7, #6]
 800527c:	2b00      	cmp	r3, #0
 800527e:	d101      	bne.n	8005284 <HAL_UART_Transmit+0x30>
 8005280:	2301      	movs	r3, #1
 8005282:	e06e      	b.n	8005362 <HAL_UART_Transmit+0x10e>
 8005284:	68fb      	ldr	r3, [r7, #12]
 8005286:	2200      	movs	r2, #0
 8005288:	645a      	str	r2, [r3, #68]	@ 0x44
 800528a:	68fb      	ldr	r3, [r7, #12]
 800528c:	2221      	movs	r2, #33	@ 0x21
 800528e:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8005292:	f7fd f913 	bl	80024bc <HAL_GetTick>
 8005296:	6178      	str	r0, [r7, #20]
 8005298:	68fb      	ldr	r3, [r7, #12]
 800529a:	88fa      	ldrh	r2, [r7, #6]
 800529c:	849a      	strh	r2, [r3, #36]	@ 0x24
 800529e:	68fb      	ldr	r3, [r7, #12]
 80052a0:	88fa      	ldrh	r2, [r7, #6]
 80052a2:	84da      	strh	r2, [r3, #38]	@ 0x26
 80052a4:	68fb      	ldr	r3, [r7, #12]
 80052a6:	689b      	ldr	r3, [r3, #8]
 80052a8:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 80052ac:	d108      	bne.n	80052c0 <HAL_UART_Transmit+0x6c>
 80052ae:	68fb      	ldr	r3, [r7, #12]
 80052b0:	691b      	ldr	r3, [r3, #16]
 80052b2:	2b00      	cmp	r3, #0
 80052b4:	d104      	bne.n	80052c0 <HAL_UART_Transmit+0x6c>
 80052b6:	2300      	movs	r3, #0
 80052b8:	61fb      	str	r3, [r7, #28]
 80052ba:	68bb      	ldr	r3, [r7, #8]
 80052bc:	61bb      	str	r3, [r7, #24]
 80052be:	e003      	b.n	80052c8 <HAL_UART_Transmit+0x74>
 80052c0:	68bb      	ldr	r3, [r7, #8]
 80052c2:	61fb      	str	r3, [r7, #28]
 80052c4:	2300      	movs	r3, #0
 80052c6:	61bb      	str	r3, [r7, #24]
 80052c8:	e02e      	b.n	8005328 <HAL_UART_Transmit+0xd4>
 80052ca:	683b      	ldr	r3, [r7, #0]
 80052cc:	9300      	str	r3, [sp, #0]
 80052ce:	697b      	ldr	r3, [r7, #20]
 80052d0:	2200      	movs	r2, #0
 80052d2:	2180      	movs	r1, #128	@ 0x80
 80052d4:	68f8      	ldr	r0, [r7, #12]
 80052d6:	f000 fb1d 	bl	8005914 <UART_WaitOnFlagUntilTimeout>
 80052da:	4603      	mov	r3, r0
 80052dc:	2b00      	cmp	r3, #0
 80052de:	d005      	beq.n	80052ec <HAL_UART_Transmit+0x98>
 80052e0:	68fb      	ldr	r3, [r7, #12]
 80052e2:	2220      	movs	r2, #32
 80052e4:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 80052e8:	2303      	movs	r3, #3
 80052ea:	e03a      	b.n	8005362 <HAL_UART_Transmit+0x10e>
 80052ec:	69fb      	ldr	r3, [r7, #28]
 80052ee:	2b00      	cmp	r3, #0
 80052f0:	d10b      	bne.n	800530a <HAL_UART_Transmit+0xb6>
 80052f2:	69bb      	ldr	r3, [r7, #24]
 80052f4:	881b      	ldrh	r3, [r3, #0]
 80052f6:	461a      	mov	r2, r3
 80052f8:	68fb      	ldr	r3, [r7, #12]
 80052fa:	681b      	ldr	r3, [r3, #0]
 80052fc:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8005300:	605a      	str	r2, [r3, #4]
 8005302:	69bb      	ldr	r3, [r7, #24]
 8005304:	3302      	adds	r3, #2
 8005306:	61bb      	str	r3, [r7, #24]
 8005308:	e007      	b.n	800531a <HAL_UART_Transmit+0xc6>
 800530a:	69fb      	ldr	r3, [r7, #28]
 800530c:	781a      	ldrb	r2, [r3, #0]
 800530e:	68fb      	ldr	r3, [r7, #12]
 8005310:	681b      	ldr	r3, [r3, #0]
 8005312:	605a      	str	r2, [r3, #4]
 8005314:	69fb      	ldr	r3, [r7, #28]
 8005316:	3301      	adds	r3, #1
 8005318:	61fb      	str	r3, [r7, #28]
 800531a:	68fb      	ldr	r3, [r7, #12]
 800531c:	8cdb      	ldrh	r3, [r3, #38]	@ 0x26
 800531e:	b29b      	uxth	r3, r3
 8005320:	3b01      	subs	r3, #1
 8005322:	b29a      	uxth	r2, r3
 8005324:	68fb      	ldr	r3, [r7, #12]
 8005326:	84da      	strh	r2, [r3, #38]	@ 0x26
 8005328:	68fb      	ldr	r3, [r7, #12]
 800532a:	8cdb      	ldrh	r3, [r3, #38]	@ 0x26
 800532c:	b29b      	uxth	r3, r3
 800532e:	2b00      	cmp	r3, #0
 8005330:	d1cb      	bne.n	80052ca <HAL_UART_Transmit+0x76>
 8005332:	683b      	ldr	r3, [r7, #0]
 8005334:	9300      	str	r3, [sp, #0]
 8005336:	697b      	ldr	r3, [r7, #20]
 8005338:	2200      	movs	r2, #0
 800533a:	2140      	movs	r1, #64	@ 0x40
 800533c:	68f8      	ldr	r0, [r7, #12]
 800533e:	f000 fae9 	bl	8005914 <UART_WaitOnFlagUntilTimeout>
 8005342:	4603      	mov	r3, r0
 8005344:	2b00      	cmp	r3, #0
 8005346:	d005      	beq.n	8005354 <HAL_UART_Transmit+0x100>
 8005348:	68fb      	ldr	r3, [r7, #12]
 800534a:	2220      	movs	r2, #32
 800534c:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8005350:	2303      	movs	r3, #3
 8005352:	e006      	b.n	8005362 <HAL_UART_Transmit+0x10e>
 8005354:	68fb      	ldr	r3, [r7, #12]
 8005356:	2220      	movs	r2, #32
 8005358:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 800535c:	2300      	movs	r3, #0
 800535e:	e000      	b.n	8005362 <HAL_UART_Transmit+0x10e>
 8005360:	2302      	movs	r3, #2
 8005362:	4618      	mov	r0, r3
 8005364:	3720      	adds	r7, #32
 8005366:	46bd      	mov	sp, r7
 8005368:	bd80      	pop	{r7, pc}
	...

0800536c <HAL_UART_IRQHandler>:
 800536c:	b580      	push	{r7, lr}
 800536e:	b0ba      	sub	sp, #232	@ 0xe8
 8005370:	af00      	add	r7, sp, #0
 8005372:	6078      	str	r0, [r7, #4]
 8005374:	687b      	ldr	r3, [r7, #4]
 8005376:	681b      	ldr	r3, [r3, #0]
 8005378:	681b      	ldr	r3, [r3, #0]
 800537a:	f8c7 30e4 	str.w	r3, [r7, #228]	@ 0xe4
 800537e:	687b      	ldr	r3, [r7, #4]
 8005380:	681b      	ldr	r3, [r3, #0]
 8005382:	68db      	ldr	r3, [r3, #12]
 8005384:	f8c7 30e0 	str.w	r3, [r7, #224]	@ 0xe0
 8005388:	687b      	ldr	r3, [r7, #4]
 800538a:	681b      	ldr	r3, [r3, #0]
 800538c:	695b      	ldr	r3, [r3, #20]
 800538e:	f8c7 30dc 	str.w	r3, [r7, #220]	@ 0xdc
 8005392:	2300      	movs	r3, #0
 8005394:	f8c7 30d8 	str.w	r3, [r7, #216]	@ 0xd8
 8005398:	2300      	movs	r3, #0
 800539a:	f8c7 30d4 	str.w	r3, [r7, #212]	@ 0xd4
 800539e:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 80053a2:	f003 030f 	and.w	r3, r3, #15
 80053a6:	f8c7 30d8 	str.w	r3, [r7, #216]	@ 0xd8
 80053aa:	f8d7 30d8 	ldr.w	r3, [r7, #216]	@ 0xd8
 80053ae:	2b00      	cmp	r3, #0
 80053b0:	d10f      	bne.n	80053d2 <HAL_UART_IRQHandler+0x66>
 80053b2:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 80053b6:	f003 0320 	and.w	r3, r3, #32
 80053ba:	2b00      	cmp	r3, #0
 80053bc:	d009      	beq.n	80053d2 <HAL_UART_IRQHandler+0x66>
 80053be:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 80053c2:	f003 0320 	and.w	r3, r3, #32
 80053c6:	2b00      	cmp	r3, #0
 80053c8:	d003      	beq.n	80053d2 <HAL_UART_IRQHandler+0x66>
 80053ca:	6878      	ldr	r0, [r7, #4]
 80053cc:	f000 fbd7 	bl	8005b7e <UART_Receive_IT>
 80053d0:	e273      	b.n	80058ba <HAL_UART_IRQHandler+0x54e>
 80053d2:	f8d7 30d8 	ldr.w	r3, [r7, #216]	@ 0xd8
 80053d6:	2b00      	cmp	r3, #0
 80053d8:	f000 80de 	beq.w	8005598 <HAL_UART_IRQHandler+0x22c>
 80053dc:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 80053e0:	f003 0301 	and.w	r3, r3, #1
 80053e4:	2b00      	cmp	r3, #0
 80053e6:	d106      	bne.n	80053f6 <HAL_UART_IRQHandler+0x8a>
 80053e8:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 80053ec:	f403 7390 	and.w	r3, r3, #288	@ 0x120
 80053f0:	2b00      	cmp	r3, #0
 80053f2:	f000 80d1 	beq.w	8005598 <HAL_UART_IRQHandler+0x22c>
 80053f6:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 80053fa:	f003 0301 	and.w	r3, r3, #1
 80053fe:	2b00      	cmp	r3, #0
 8005400:	d00b      	beq.n	800541a <HAL_UART_IRQHandler+0xae>
 8005402:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8005406:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800540a:	2b00      	cmp	r3, #0
 800540c:	d005      	beq.n	800541a <HAL_UART_IRQHandler+0xae>
 800540e:	687b      	ldr	r3, [r7, #4]
 8005410:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8005412:	f043 0201 	orr.w	r2, r3, #1
 8005416:	687b      	ldr	r3, [r7, #4]
 8005418:	645a      	str	r2, [r3, #68]	@ 0x44
 800541a:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 800541e:	f003 0304 	and.w	r3, r3, #4
 8005422:	2b00      	cmp	r3, #0
 8005424:	d00b      	beq.n	800543e <HAL_UART_IRQHandler+0xd2>
 8005426:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 800542a:	f003 0301 	and.w	r3, r3, #1
 800542e:	2b00      	cmp	r3, #0
 8005430:	d005      	beq.n	800543e <HAL_UART_IRQHandler+0xd2>
 8005432:	687b      	ldr	r3, [r7, #4]
 8005434:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8005436:	f043 0202 	orr.w	r2, r3, #2
 800543a:	687b      	ldr	r3, [r7, #4]
 800543c:	645a      	str	r2, [r3, #68]	@ 0x44
 800543e:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8005442:	f003 0302 	and.w	r3, r3, #2
 8005446:	2b00      	cmp	r3, #0
 8005448:	d00b      	beq.n	8005462 <HAL_UART_IRQHandler+0xf6>
 800544a:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 800544e:	f003 0301 	and.w	r3, r3, #1
 8005452:	2b00      	cmp	r3, #0
 8005454:	d005      	beq.n	8005462 <HAL_UART_IRQHandler+0xf6>
 8005456:	687b      	ldr	r3, [r7, #4]
 8005458:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800545a:	f043 0204 	orr.w	r2, r3, #4
 800545e:	687b      	ldr	r3, [r7, #4]
 8005460:	645a      	str	r2, [r3, #68]	@ 0x44
 8005462:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8005466:	f003 0308 	and.w	r3, r3, #8
 800546a:	2b00      	cmp	r3, #0
 800546c:	d011      	beq.n	8005492 <HAL_UART_IRQHandler+0x126>
 800546e:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8005472:	f003 0320 	and.w	r3, r3, #32
 8005476:	2b00      	cmp	r3, #0
 8005478:	d105      	bne.n	8005486 <HAL_UART_IRQHandler+0x11a>
 800547a:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 800547e:	f003 0301 	and.w	r3, r3, #1
 8005482:	2b00      	cmp	r3, #0
 8005484:	d005      	beq.n	8005492 <HAL_UART_IRQHandler+0x126>
 8005486:	687b      	ldr	r3, [r7, #4]
 8005488:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800548a:	f043 0208 	orr.w	r2, r3, #8
 800548e:	687b      	ldr	r3, [r7, #4]
 8005490:	645a      	str	r2, [r3, #68]	@ 0x44
 8005492:	687b      	ldr	r3, [r7, #4]
 8005494:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8005496:	2b00      	cmp	r3, #0
 8005498:	f000 820a 	beq.w	80058b0 <HAL_UART_IRQHandler+0x544>
 800549c:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 80054a0:	f003 0320 	and.w	r3, r3, #32
 80054a4:	2b00      	cmp	r3, #0
 80054a6:	d008      	beq.n	80054ba <HAL_UART_IRQHandler+0x14e>
 80054a8:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 80054ac:	f003 0320 	and.w	r3, r3, #32
 80054b0:	2b00      	cmp	r3, #0
 80054b2:	d002      	beq.n	80054ba <HAL_UART_IRQHandler+0x14e>
 80054b4:	6878      	ldr	r0, [r7, #4]
 80054b6:	f000 fb62 	bl	8005b7e <UART_Receive_IT>
 80054ba:	687b      	ldr	r3, [r7, #4]
 80054bc:	681b      	ldr	r3, [r3, #0]
 80054be:	695b      	ldr	r3, [r3, #20]
 80054c0:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 80054c4:	2b40      	cmp	r3, #64	@ 0x40
 80054c6:	bf0c      	ite	eq
 80054c8:	2301      	moveq	r3, #1
 80054ca:	2300      	movne	r3, #0
 80054cc:	b2db      	uxtb	r3, r3
 80054ce:	f8c7 30d4 	str.w	r3, [r7, #212]	@ 0xd4
 80054d2:	687b      	ldr	r3, [r7, #4]
 80054d4:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80054d6:	f003 0308 	and.w	r3, r3, #8
 80054da:	2b00      	cmp	r3, #0
 80054dc:	d103      	bne.n	80054e6 <HAL_UART_IRQHandler+0x17a>
 80054de:	f8d7 30d4 	ldr.w	r3, [r7, #212]	@ 0xd4
 80054e2:	2b00      	cmp	r3, #0
 80054e4:	d04f      	beq.n	8005586 <HAL_UART_IRQHandler+0x21a>
 80054e6:	6878      	ldr	r0, [r7, #4]
 80054e8:	f000 fa6d 	bl	80059c6 <UART_EndRxTransfer>
 80054ec:	687b      	ldr	r3, [r7, #4]
 80054ee:	681b      	ldr	r3, [r3, #0]
 80054f0:	695b      	ldr	r3, [r3, #20]
 80054f2:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 80054f6:	2b40      	cmp	r3, #64	@ 0x40
 80054f8:	d141      	bne.n	800557e <HAL_UART_IRQHandler+0x212>
 80054fa:	687b      	ldr	r3, [r7, #4]
 80054fc:	681b      	ldr	r3, [r3, #0]
 80054fe:	3314      	adds	r3, #20
 8005500:	f8c7 309c 	str.w	r3, [r7, #156]	@ 0x9c
 8005504:	f8d7 309c 	ldr.w	r3, [r7, #156]	@ 0x9c
 8005508:	e853 3f00 	ldrex	r3, [r3]
 800550c:	f8c7 3098 	str.w	r3, [r7, #152]	@ 0x98
 8005510:	f8d7 3098 	ldr.w	r3, [r7, #152]	@ 0x98
 8005514:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 8005518:	f8c7 30d0 	str.w	r3, [r7, #208]	@ 0xd0
 800551c:	687b      	ldr	r3, [r7, #4]
 800551e:	681b      	ldr	r3, [r3, #0]
 8005520:	3314      	adds	r3, #20
 8005522:	f8d7 20d0 	ldr.w	r2, [r7, #208]	@ 0xd0
 8005526:	f8c7 20a8 	str.w	r2, [r7, #168]	@ 0xa8
 800552a:	f8c7 30a4 	str.w	r3, [r7, #164]	@ 0xa4
 800552e:	f8d7 10a4 	ldr.w	r1, [r7, #164]	@ 0xa4
 8005532:	f8d7 20a8 	ldr.w	r2, [r7, #168]	@ 0xa8
 8005536:	e841 2300 	strex	r3, r2, [r1]
 800553a:	f8c7 30a0 	str.w	r3, [r7, #160]	@ 0xa0
 800553e:	f8d7 30a0 	ldr.w	r3, [r7, #160]	@ 0xa0
 8005542:	2b00      	cmp	r3, #0
 8005544:	d1d9      	bne.n	80054fa <HAL_UART_IRQHandler+0x18e>
 8005546:	687b      	ldr	r3, [r7, #4]
 8005548:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800554a:	2b00      	cmp	r3, #0
 800554c:	d013      	beq.n	8005576 <HAL_UART_IRQHandler+0x20a>
 800554e:	687b      	ldr	r3, [r7, #4]
 8005550:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8005552:	4a8a      	ldr	r2, [pc, #552]	@ (800577c <HAL_UART_IRQHandler+0x410>)
 8005554:	651a      	str	r2, [r3, #80]	@ 0x50
 8005556:	687b      	ldr	r3, [r7, #4]
 8005558:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800555a:	4618      	mov	r0, r3
 800555c:	f7fd f95f 	bl	800281e <HAL_DMA_Abort_IT>
 8005560:	4603      	mov	r3, r0
 8005562:	2b00      	cmp	r3, #0
 8005564:	d016      	beq.n	8005594 <HAL_UART_IRQHandler+0x228>
 8005566:	687b      	ldr	r3, [r7, #4]
 8005568:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800556a:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800556c:	687a      	ldr	r2, [r7, #4]
 800556e:	6bd2      	ldr	r2, [r2, #60]	@ 0x3c
 8005570:	4610      	mov	r0, r2
 8005572:	4798      	blx	r3
 8005574:	e00e      	b.n	8005594 <HAL_UART_IRQHandler+0x228>
 8005576:	6878      	ldr	r0, [r7, #4]
 8005578:	f000 f9b6 	bl	80058e8 <HAL_UART_ErrorCallback>
 800557c:	e00a      	b.n	8005594 <HAL_UART_IRQHandler+0x228>
 800557e:	6878      	ldr	r0, [r7, #4]
 8005580:	f000 f9b2 	bl	80058e8 <HAL_UART_ErrorCallback>
 8005584:	e006      	b.n	8005594 <HAL_UART_IRQHandler+0x228>
 8005586:	6878      	ldr	r0, [r7, #4]
 8005588:	f000 f9ae 	bl	80058e8 <HAL_UART_ErrorCallback>
 800558c:	687b      	ldr	r3, [r7, #4]
 800558e:	2200      	movs	r2, #0
 8005590:	645a      	str	r2, [r3, #68]	@ 0x44
 8005592:	e18d      	b.n	80058b0 <HAL_UART_IRQHandler+0x544>
 8005594:	bf00      	nop
 8005596:	e18b      	b.n	80058b0 <HAL_UART_IRQHandler+0x544>
 8005598:	687b      	ldr	r3, [r7, #4]
 800559a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800559c:	2b01      	cmp	r3, #1
 800559e:	f040 8167 	bne.w	8005870 <HAL_UART_IRQHandler+0x504>
 80055a2:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 80055a6:	f003 0310 	and.w	r3, r3, #16
 80055aa:	2b00      	cmp	r3, #0
 80055ac:	f000 8160 	beq.w	8005870 <HAL_UART_IRQHandler+0x504>
 80055b0:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 80055b4:	f003 0310 	and.w	r3, r3, #16
 80055b8:	2b00      	cmp	r3, #0
 80055ba:	f000 8159 	beq.w	8005870 <HAL_UART_IRQHandler+0x504>
 80055be:	2300      	movs	r3, #0
 80055c0:	60bb      	str	r3, [r7, #8]
 80055c2:	687b      	ldr	r3, [r7, #4]
 80055c4:	681b      	ldr	r3, [r3, #0]
 80055c6:	681b      	ldr	r3, [r3, #0]
 80055c8:	60bb      	str	r3, [r7, #8]
 80055ca:	687b      	ldr	r3, [r7, #4]
 80055cc:	681b      	ldr	r3, [r3, #0]
 80055ce:	685b      	ldr	r3, [r3, #4]
 80055d0:	60bb      	str	r3, [r7, #8]
 80055d2:	68bb      	ldr	r3, [r7, #8]
 80055d4:	687b      	ldr	r3, [r7, #4]
 80055d6:	681b      	ldr	r3, [r3, #0]
 80055d8:	695b      	ldr	r3, [r3, #20]
 80055da:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 80055de:	2b40      	cmp	r3, #64	@ 0x40
 80055e0:	f040 80ce 	bne.w	8005780 <HAL_UART_IRQHandler+0x414>
 80055e4:	687b      	ldr	r3, [r7, #4]
 80055e6:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80055e8:	681b      	ldr	r3, [r3, #0]
 80055ea:	685b      	ldr	r3, [r3, #4]
 80055ec:	f8a7 30be 	strh.w	r3, [r7, #190]	@ 0xbe
 80055f0:	f8b7 30be 	ldrh.w	r3, [r7, #190]	@ 0xbe
 80055f4:	2b00      	cmp	r3, #0
 80055f6:	f000 80a9 	beq.w	800574c <HAL_UART_IRQHandler+0x3e0>
 80055fa:	687b      	ldr	r3, [r7, #4]
 80055fc:	8d9b      	ldrh	r3, [r3, #44]	@ 0x2c
 80055fe:	f8b7 20be 	ldrh.w	r2, [r7, #190]	@ 0xbe
 8005602:	429a      	cmp	r2, r3
 8005604:	f080 80a2 	bcs.w	800574c <HAL_UART_IRQHandler+0x3e0>
 8005608:	687b      	ldr	r3, [r7, #4]
 800560a:	f8b7 20be 	ldrh.w	r2, [r7, #190]	@ 0xbe
 800560e:	85da      	strh	r2, [r3, #46]	@ 0x2e
 8005610:	687b      	ldr	r3, [r7, #4]
 8005612:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8005614:	69db      	ldr	r3, [r3, #28]
 8005616:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 800561a:	f000 8088 	beq.w	800572e <HAL_UART_IRQHandler+0x3c2>
 800561e:	687b      	ldr	r3, [r7, #4]
 8005620:	681b      	ldr	r3, [r3, #0]
 8005622:	330c      	adds	r3, #12
 8005624:	f8c7 3088 	str.w	r3, [r7, #136]	@ 0x88
 8005628:	f8d7 3088 	ldr.w	r3, [r7, #136]	@ 0x88
 800562c:	e853 3f00 	ldrex	r3, [r3]
 8005630:	f8c7 3084 	str.w	r3, [r7, #132]	@ 0x84
 8005634:	f8d7 3084 	ldr.w	r3, [r7, #132]	@ 0x84
 8005638:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 800563c:	f8c7 30b8 	str.w	r3, [r7, #184]	@ 0xb8
 8005640:	687b      	ldr	r3, [r7, #4]
 8005642:	681b      	ldr	r3, [r3, #0]
 8005644:	330c      	adds	r3, #12
 8005646:	f8d7 20b8 	ldr.w	r2, [r7, #184]	@ 0xb8
 800564a:	f8c7 2094 	str.w	r2, [r7, #148]	@ 0x94
 800564e:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
 8005652:	f8d7 1090 	ldr.w	r1, [r7, #144]	@ 0x90
 8005656:	f8d7 2094 	ldr.w	r2, [r7, #148]	@ 0x94
 800565a:	e841 2300 	strex	r3, r2, [r1]
 800565e:	f8c7 308c 	str.w	r3, [r7, #140]	@ 0x8c
 8005662:	f8d7 308c 	ldr.w	r3, [r7, #140]	@ 0x8c
 8005666:	2b00      	cmp	r3, #0
 8005668:	d1d9      	bne.n	800561e <HAL_UART_IRQHandler+0x2b2>
 800566a:	687b      	ldr	r3, [r7, #4]
 800566c:	681b      	ldr	r3, [r3, #0]
 800566e:	3314      	adds	r3, #20
 8005670:	677b      	str	r3, [r7, #116]	@ 0x74
 8005672:	6f7b      	ldr	r3, [r7, #116]	@ 0x74
 8005674:	e853 3f00 	ldrex	r3, [r3]
 8005678:	673b      	str	r3, [r7, #112]	@ 0x70
 800567a:	6f3b      	ldr	r3, [r7, #112]	@ 0x70
 800567c:	f023 0301 	bic.w	r3, r3, #1
 8005680:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
 8005684:	687b      	ldr	r3, [r7, #4]
 8005686:	681b      	ldr	r3, [r3, #0]
 8005688:	3314      	adds	r3, #20
 800568a:	f8d7 20b4 	ldr.w	r2, [r7, #180]	@ 0xb4
 800568e:	f8c7 2080 	str.w	r2, [r7, #128]	@ 0x80
 8005692:	67fb      	str	r3, [r7, #124]	@ 0x7c
 8005694:	6ff9      	ldr	r1, [r7, #124]	@ 0x7c
 8005696:	f8d7 2080 	ldr.w	r2, [r7, #128]	@ 0x80
 800569a:	e841 2300 	strex	r3, r2, [r1]
 800569e:	67bb      	str	r3, [r7, #120]	@ 0x78
 80056a0:	6fbb      	ldr	r3, [r7, #120]	@ 0x78
 80056a2:	2b00      	cmp	r3, #0
 80056a4:	d1e1      	bne.n	800566a <HAL_UART_IRQHandler+0x2fe>
 80056a6:	687b      	ldr	r3, [r7, #4]
 80056a8:	681b      	ldr	r3, [r3, #0]
 80056aa:	3314      	adds	r3, #20
 80056ac:	663b      	str	r3, [r7, #96]	@ 0x60
 80056ae:	6e3b      	ldr	r3, [r7, #96]	@ 0x60
 80056b0:	e853 3f00 	ldrex	r3, [r3]
 80056b4:	65fb      	str	r3, [r7, #92]	@ 0x5c
 80056b6:	6dfb      	ldr	r3, [r7, #92]	@ 0x5c
 80056b8:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 80056bc:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
 80056c0:	687b      	ldr	r3, [r7, #4]
 80056c2:	681b      	ldr	r3, [r3, #0]
 80056c4:	3314      	adds	r3, #20
 80056c6:	f8d7 20b0 	ldr.w	r2, [r7, #176]	@ 0xb0
 80056ca:	66fa      	str	r2, [r7, #108]	@ 0x6c
 80056cc:	66bb      	str	r3, [r7, #104]	@ 0x68
 80056ce:	6eb9      	ldr	r1, [r7, #104]	@ 0x68
 80056d0:	6efa      	ldr	r2, [r7, #108]	@ 0x6c
 80056d2:	e841 2300 	strex	r3, r2, [r1]
 80056d6:	667b      	str	r3, [r7, #100]	@ 0x64
 80056d8:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
 80056da:	2b00      	cmp	r3, #0
 80056dc:	d1e3      	bne.n	80056a6 <HAL_UART_IRQHandler+0x33a>
 80056de:	687b      	ldr	r3, [r7, #4]
 80056e0:	2220      	movs	r2, #32
 80056e2:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 80056e6:	687b      	ldr	r3, [r7, #4]
 80056e8:	2200      	movs	r2, #0
 80056ea:	631a      	str	r2, [r3, #48]	@ 0x30
 80056ec:	687b      	ldr	r3, [r7, #4]
 80056ee:	681b      	ldr	r3, [r3, #0]
 80056f0:	330c      	adds	r3, #12
 80056f2:	64fb      	str	r3, [r7, #76]	@ 0x4c
 80056f4:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 80056f6:	e853 3f00 	ldrex	r3, [r3]
 80056fa:	64bb      	str	r3, [r7, #72]	@ 0x48
 80056fc:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
 80056fe:	f023 0310 	bic.w	r3, r3, #16
 8005702:	f8c7 30ac 	str.w	r3, [r7, #172]	@ 0xac
 8005706:	687b      	ldr	r3, [r7, #4]
 8005708:	681b      	ldr	r3, [r3, #0]
 800570a:	330c      	adds	r3, #12
 800570c:	f8d7 20ac 	ldr.w	r2, [r7, #172]	@ 0xac
 8005710:	65ba      	str	r2, [r7, #88]	@ 0x58
 8005712:	657b      	str	r3, [r7, #84]	@ 0x54
 8005714:	6d79      	ldr	r1, [r7, #84]	@ 0x54
 8005716:	6dba      	ldr	r2, [r7, #88]	@ 0x58
 8005718:	e841 2300 	strex	r3, r2, [r1]
 800571c:	653b      	str	r3, [r7, #80]	@ 0x50
 800571e:	6d3b      	ldr	r3, [r7, #80]	@ 0x50
 8005720:	2b00      	cmp	r3, #0
 8005722:	d1e3      	bne.n	80056ec <HAL_UART_IRQHandler+0x380>
 8005724:	687b      	ldr	r3, [r7, #4]
 8005726:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8005728:	4618      	mov	r0, r3
 800572a:	f7fd f808 	bl	800273e <HAL_DMA_Abort>
 800572e:	687b      	ldr	r3, [r7, #4]
 8005730:	2202      	movs	r2, #2
 8005732:	635a      	str	r2, [r3, #52]	@ 0x34
 8005734:	687b      	ldr	r3, [r7, #4]
 8005736:	8d9a      	ldrh	r2, [r3, #44]	@ 0x2c
 8005738:	687b      	ldr	r3, [r7, #4]
 800573a:	8ddb      	ldrh	r3, [r3, #46]	@ 0x2e
 800573c:	b29b      	uxth	r3, r3
 800573e:	1ad3      	subs	r3, r2, r3
 8005740:	b29b      	uxth	r3, r3
 8005742:	4619      	mov	r1, r3
 8005744:	6878      	ldr	r0, [r7, #4]
 8005746:	f000 f8d9 	bl	80058fc <HAL_UARTEx_RxEventCallback>
 800574a:	e0b3      	b.n	80058b4 <HAL_UART_IRQHandler+0x548>
 800574c:	687b      	ldr	r3, [r7, #4]
 800574e:	8d9b      	ldrh	r3, [r3, #44]	@ 0x2c
 8005750:	f8b7 20be 	ldrh.w	r2, [r7, #190]	@ 0xbe
 8005754:	429a      	cmp	r2, r3
 8005756:	f040 80ad 	bne.w	80058b4 <HAL_UART_IRQHandler+0x548>
 800575a:	687b      	ldr	r3, [r7, #4]
 800575c:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800575e:	69db      	ldr	r3, [r3, #28]
 8005760:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 8005764:	f040 80a6 	bne.w	80058b4 <HAL_UART_IRQHandler+0x548>
 8005768:	687b      	ldr	r3, [r7, #4]
 800576a:	2202      	movs	r2, #2
 800576c:	635a      	str	r2, [r3, #52]	@ 0x34
 800576e:	687b      	ldr	r3, [r7, #4]
 8005770:	8d9b      	ldrh	r3, [r3, #44]	@ 0x2c
 8005772:	4619      	mov	r1, r3
 8005774:	6878      	ldr	r0, [r7, #4]
 8005776:	f000 f8c1 	bl	80058fc <HAL_UARTEx_RxEventCallback>
 800577a:	e09b      	b.n	80058b4 <HAL_UART_IRQHandler+0x548>
 800577c:	08005a8d 	.word	0x08005a8d
 8005780:	687b      	ldr	r3, [r7, #4]
 8005782:	8d9a      	ldrh	r2, [r3, #44]	@ 0x2c
 8005784:	687b      	ldr	r3, [r7, #4]
 8005786:	8ddb      	ldrh	r3, [r3, #46]	@ 0x2e
 8005788:	b29b      	uxth	r3, r3
 800578a:	1ad3      	subs	r3, r2, r3
 800578c:	f8a7 30ce 	strh.w	r3, [r7, #206]	@ 0xce
 8005790:	687b      	ldr	r3, [r7, #4]
 8005792:	8ddb      	ldrh	r3, [r3, #46]	@ 0x2e
 8005794:	b29b      	uxth	r3, r3
 8005796:	2b00      	cmp	r3, #0
 8005798:	f000 808e 	beq.w	80058b8 <HAL_UART_IRQHandler+0x54c>
 800579c:	f8b7 30ce 	ldrh.w	r3, [r7, #206]	@ 0xce
 80057a0:	2b00      	cmp	r3, #0
 80057a2:	f000 8089 	beq.w	80058b8 <HAL_UART_IRQHandler+0x54c>
 80057a6:	687b      	ldr	r3, [r7, #4]
 80057a8:	681b      	ldr	r3, [r3, #0]
 80057aa:	330c      	adds	r3, #12
 80057ac:	63bb      	str	r3, [r7, #56]	@ 0x38
 80057ae:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 80057b0:	e853 3f00 	ldrex	r3, [r3]
 80057b4:	637b      	str	r3, [r7, #52]	@ 0x34
 80057b6:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 80057b8:	f423 7390 	bic.w	r3, r3, #288	@ 0x120
 80057bc:	f8c7 30c8 	str.w	r3, [r7, #200]	@ 0xc8
 80057c0:	687b      	ldr	r3, [r7, #4]
 80057c2:	681b      	ldr	r3, [r3, #0]
 80057c4:	330c      	adds	r3, #12
 80057c6:	f8d7 20c8 	ldr.w	r2, [r7, #200]	@ 0xc8
 80057ca:	647a      	str	r2, [r7, #68]	@ 0x44
 80057cc:	643b      	str	r3, [r7, #64]	@ 0x40
 80057ce:	6c39      	ldr	r1, [r7, #64]	@ 0x40
 80057d0:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
 80057d2:	e841 2300 	strex	r3, r2, [r1]
 80057d6:	63fb      	str	r3, [r7, #60]	@ 0x3c
 80057d8:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 80057da:	2b00      	cmp	r3, #0
 80057dc:	d1e3      	bne.n	80057a6 <HAL_UART_IRQHandler+0x43a>
 80057de:	687b      	ldr	r3, [r7, #4]
 80057e0:	681b      	ldr	r3, [r3, #0]
 80057e2:	3314      	adds	r3, #20
 80057e4:	627b      	str	r3, [r7, #36]	@ 0x24
 80057e6:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80057e8:	e853 3f00 	ldrex	r3, [r3]
 80057ec:	623b      	str	r3, [r7, #32]
 80057ee:	6a3b      	ldr	r3, [r7, #32]
 80057f0:	f023 0301 	bic.w	r3, r3, #1
 80057f4:	f8c7 30c4 	str.w	r3, [r7, #196]	@ 0xc4
 80057f8:	687b      	ldr	r3, [r7, #4]
 80057fa:	681b      	ldr	r3, [r3, #0]
 80057fc:	3314      	adds	r3, #20
 80057fe:	f8d7 20c4 	ldr.w	r2, [r7, #196]	@ 0xc4
 8005802:	633a      	str	r2, [r7, #48]	@ 0x30
 8005804:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8005806:	6af9      	ldr	r1, [r7, #44]	@ 0x2c
 8005808:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 800580a:	e841 2300 	strex	r3, r2, [r1]
 800580e:	62bb      	str	r3, [r7, #40]	@ 0x28
 8005810:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8005812:	2b00      	cmp	r3, #0
 8005814:	d1e3      	bne.n	80057de <HAL_UART_IRQHandler+0x472>
 8005816:	687b      	ldr	r3, [r7, #4]
 8005818:	2220      	movs	r2, #32
 800581a:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 800581e:	687b      	ldr	r3, [r7, #4]
 8005820:	2200      	movs	r2, #0
 8005822:	631a      	str	r2, [r3, #48]	@ 0x30
 8005824:	687b      	ldr	r3, [r7, #4]
 8005826:	681b      	ldr	r3, [r3, #0]
 8005828:	330c      	adds	r3, #12
 800582a:	613b      	str	r3, [r7, #16]
 800582c:	693b      	ldr	r3, [r7, #16]
 800582e:	e853 3f00 	ldrex	r3, [r3]
 8005832:	60fb      	str	r3, [r7, #12]
 8005834:	68fb      	ldr	r3, [r7, #12]
 8005836:	f023 0310 	bic.w	r3, r3, #16
 800583a:	f8c7 30c0 	str.w	r3, [r7, #192]	@ 0xc0
 800583e:	687b      	ldr	r3, [r7, #4]
 8005840:	681b      	ldr	r3, [r3, #0]
 8005842:	330c      	adds	r3, #12
 8005844:	f8d7 20c0 	ldr.w	r2, [r7, #192]	@ 0xc0
 8005848:	61fa      	str	r2, [r7, #28]
 800584a:	61bb      	str	r3, [r7, #24]
 800584c:	69b9      	ldr	r1, [r7, #24]
 800584e:	69fa      	ldr	r2, [r7, #28]
 8005850:	e841 2300 	strex	r3, r2, [r1]
 8005854:	617b      	str	r3, [r7, #20]
 8005856:	697b      	ldr	r3, [r7, #20]
 8005858:	2b00      	cmp	r3, #0
 800585a:	d1e3      	bne.n	8005824 <HAL_UART_IRQHandler+0x4b8>
 800585c:	687b      	ldr	r3, [r7, #4]
 800585e:	2202      	movs	r2, #2
 8005860:	635a      	str	r2, [r3, #52]	@ 0x34
 8005862:	f8b7 30ce 	ldrh.w	r3, [r7, #206]	@ 0xce
 8005866:	4619      	mov	r1, r3
 8005868:	6878      	ldr	r0, [r7, #4]
 800586a:	f000 f847 	bl	80058fc <HAL_UARTEx_RxEventCallback>
 800586e:	e023      	b.n	80058b8 <HAL_UART_IRQHandler+0x54c>
 8005870:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8005874:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8005878:	2b00      	cmp	r3, #0
 800587a:	d009      	beq.n	8005890 <HAL_UART_IRQHandler+0x524>
 800587c:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8005880:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8005884:	2b00      	cmp	r3, #0
 8005886:	d003      	beq.n	8005890 <HAL_UART_IRQHandler+0x524>
 8005888:	6878      	ldr	r0, [r7, #4]
 800588a:	f000 f910 	bl	8005aae <UART_Transmit_IT>
 800588e:	e014      	b.n	80058ba <HAL_UART_IRQHandler+0x54e>
 8005890:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8005894:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8005898:	2b00      	cmp	r3, #0
 800589a:	d00e      	beq.n	80058ba <HAL_UART_IRQHandler+0x54e>
 800589c:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 80058a0:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 80058a4:	2b00      	cmp	r3, #0
 80058a6:	d008      	beq.n	80058ba <HAL_UART_IRQHandler+0x54e>
 80058a8:	6878      	ldr	r0, [r7, #4]
 80058aa:	f000 f950 	bl	8005b4e <UART_EndTransmit_IT>
 80058ae:	e004      	b.n	80058ba <HAL_UART_IRQHandler+0x54e>
 80058b0:	bf00      	nop
 80058b2:	e002      	b.n	80058ba <HAL_UART_IRQHandler+0x54e>
 80058b4:	bf00      	nop
 80058b6:	e000      	b.n	80058ba <HAL_UART_IRQHandler+0x54e>
 80058b8:	bf00      	nop
 80058ba:	37e8      	adds	r7, #232	@ 0xe8
 80058bc:	46bd      	mov	sp, r7
 80058be:	bd80      	pop	{r7, pc}

080058c0 <HAL_UART_TxCpltCallback>:
 80058c0:	b480      	push	{r7}
 80058c2:	b083      	sub	sp, #12
 80058c4:	af00      	add	r7, sp, #0
 80058c6:	6078      	str	r0, [r7, #4]
 80058c8:	bf00      	nop
 80058ca:	370c      	adds	r7, #12
 80058cc:	46bd      	mov	sp, r7
 80058ce:	f85d 7b04 	ldr.w	r7, [sp], #4
 80058d2:	4770      	bx	lr

080058d4 <HAL_UART_RxCpltCallback>:
 80058d4:	b480      	push	{r7}
 80058d6:	b083      	sub	sp, #12
 80058d8:	af00      	add	r7, sp, #0
 80058da:	6078      	str	r0, [r7, #4]
 80058dc:	bf00      	nop
 80058de:	370c      	adds	r7, #12
 80058e0:	46bd      	mov	sp, r7
 80058e2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80058e6:	4770      	bx	lr

080058e8 <HAL_UART_ErrorCallback>:
 80058e8:	b480      	push	{r7}
 80058ea:	b083      	sub	sp, #12
 80058ec:	af00      	add	r7, sp, #0
 80058ee:	6078      	str	r0, [r7, #4]
 80058f0:	bf00      	nop
 80058f2:	370c      	adds	r7, #12
 80058f4:	46bd      	mov	sp, r7
 80058f6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80058fa:	4770      	bx	lr

080058fc <HAL_UARTEx_RxEventCallback>:
 80058fc:	b480      	push	{r7}
 80058fe:	b083      	sub	sp, #12
 8005900:	af00      	add	r7, sp, #0
 8005902:	6078      	str	r0, [r7, #4]
 8005904:	460b      	mov	r3, r1
 8005906:	807b      	strh	r3, [r7, #2]
 8005908:	bf00      	nop
 800590a:	370c      	adds	r7, #12
 800590c:	46bd      	mov	sp, r7
 800590e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005912:	4770      	bx	lr

08005914 <UART_WaitOnFlagUntilTimeout>:
 8005914:	b580      	push	{r7, lr}
 8005916:	b086      	sub	sp, #24
 8005918:	af00      	add	r7, sp, #0
 800591a:	60f8      	str	r0, [r7, #12]
 800591c:	60b9      	str	r1, [r7, #8]
 800591e:	603b      	str	r3, [r7, #0]
 8005920:	4613      	mov	r3, r2
 8005922:	71fb      	strb	r3, [r7, #7]
 8005924:	e03b      	b.n	800599e <UART_WaitOnFlagUntilTimeout+0x8a>
 8005926:	6a3b      	ldr	r3, [r7, #32]
 8005928:	f1b3 3fff 	cmp.w	r3, #4294967295
 800592c:	d037      	beq.n	800599e <UART_WaitOnFlagUntilTimeout+0x8a>
 800592e:	f7fc fdc5 	bl	80024bc <HAL_GetTick>
 8005932:	4602      	mov	r2, r0
 8005934:	683b      	ldr	r3, [r7, #0]
 8005936:	1ad3      	subs	r3, r2, r3
 8005938:	6a3a      	ldr	r2, [r7, #32]
 800593a:	429a      	cmp	r2, r3
 800593c:	d302      	bcc.n	8005944 <UART_WaitOnFlagUntilTimeout+0x30>
 800593e:	6a3b      	ldr	r3, [r7, #32]
 8005940:	2b00      	cmp	r3, #0
 8005942:	d101      	bne.n	8005948 <UART_WaitOnFlagUntilTimeout+0x34>
 8005944:	2303      	movs	r3, #3
 8005946:	e03a      	b.n	80059be <UART_WaitOnFlagUntilTimeout+0xaa>
 8005948:	68fb      	ldr	r3, [r7, #12]
 800594a:	681b      	ldr	r3, [r3, #0]
 800594c:	68db      	ldr	r3, [r3, #12]
 800594e:	f003 0304 	and.w	r3, r3, #4
 8005952:	2b00      	cmp	r3, #0
 8005954:	d023      	beq.n	800599e <UART_WaitOnFlagUntilTimeout+0x8a>
 8005956:	68bb      	ldr	r3, [r7, #8]
 8005958:	2b80      	cmp	r3, #128	@ 0x80
 800595a:	d020      	beq.n	800599e <UART_WaitOnFlagUntilTimeout+0x8a>
 800595c:	68bb      	ldr	r3, [r7, #8]
 800595e:	2b40      	cmp	r3, #64	@ 0x40
 8005960:	d01d      	beq.n	800599e <UART_WaitOnFlagUntilTimeout+0x8a>
 8005962:	68fb      	ldr	r3, [r7, #12]
 8005964:	681b      	ldr	r3, [r3, #0]
 8005966:	681b      	ldr	r3, [r3, #0]
 8005968:	f003 0308 	and.w	r3, r3, #8
 800596c:	2b08      	cmp	r3, #8
 800596e:	d116      	bne.n	800599e <UART_WaitOnFlagUntilTimeout+0x8a>
 8005970:	2300      	movs	r3, #0
 8005972:	617b      	str	r3, [r7, #20]
 8005974:	68fb      	ldr	r3, [r7, #12]
 8005976:	681b      	ldr	r3, [r3, #0]
 8005978:	681b      	ldr	r3, [r3, #0]
 800597a:	617b      	str	r3, [r7, #20]
 800597c:	68fb      	ldr	r3, [r7, #12]
 800597e:	681b      	ldr	r3, [r3, #0]
 8005980:	685b      	ldr	r3, [r3, #4]
 8005982:	617b      	str	r3, [r7, #20]
 8005984:	697b      	ldr	r3, [r7, #20]
 8005986:	68f8      	ldr	r0, [r7, #12]
 8005988:	f000 f81d 	bl	80059c6 <UART_EndRxTransfer>
 800598c:	68fb      	ldr	r3, [r7, #12]
 800598e:	2208      	movs	r2, #8
 8005990:	645a      	str	r2, [r3, #68]	@ 0x44
 8005992:	68fb      	ldr	r3, [r7, #12]
 8005994:	2200      	movs	r2, #0
 8005996:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 800599a:	2301      	movs	r3, #1
 800599c:	e00f      	b.n	80059be <UART_WaitOnFlagUntilTimeout+0xaa>
 800599e:	68fb      	ldr	r3, [r7, #12]
 80059a0:	681b      	ldr	r3, [r3, #0]
 80059a2:	681a      	ldr	r2, [r3, #0]
 80059a4:	68bb      	ldr	r3, [r7, #8]
 80059a6:	4013      	ands	r3, r2
 80059a8:	68ba      	ldr	r2, [r7, #8]
 80059aa:	429a      	cmp	r2, r3
 80059ac:	bf0c      	ite	eq
 80059ae:	2301      	moveq	r3, #1
 80059b0:	2300      	movne	r3, #0
 80059b2:	b2db      	uxtb	r3, r3
 80059b4:	461a      	mov	r2, r3
 80059b6:	79fb      	ldrb	r3, [r7, #7]
 80059b8:	429a      	cmp	r2, r3
 80059ba:	d0b4      	beq.n	8005926 <UART_WaitOnFlagUntilTimeout+0x12>
 80059bc:	2300      	movs	r3, #0
 80059be:	4618      	mov	r0, r3
 80059c0:	3718      	adds	r7, #24
 80059c2:	46bd      	mov	sp, r7
 80059c4:	bd80      	pop	{r7, pc}

080059c6 <UART_EndRxTransfer>:
 80059c6:	b480      	push	{r7}
 80059c8:	b095      	sub	sp, #84	@ 0x54
 80059ca:	af00      	add	r7, sp, #0
 80059cc:	6078      	str	r0, [r7, #4]
 80059ce:	687b      	ldr	r3, [r7, #4]
 80059d0:	681b      	ldr	r3, [r3, #0]
 80059d2:	330c      	adds	r3, #12
 80059d4:	637b      	str	r3, [r7, #52]	@ 0x34
 80059d6:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 80059d8:	e853 3f00 	ldrex	r3, [r3]
 80059dc:	633b      	str	r3, [r7, #48]	@ 0x30
 80059de:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80059e0:	f423 7390 	bic.w	r3, r3, #288	@ 0x120
 80059e4:	64fb      	str	r3, [r7, #76]	@ 0x4c
 80059e6:	687b      	ldr	r3, [r7, #4]
 80059e8:	681b      	ldr	r3, [r3, #0]
 80059ea:	330c      	adds	r3, #12
 80059ec:	6cfa      	ldr	r2, [r7, #76]	@ 0x4c
 80059ee:	643a      	str	r2, [r7, #64]	@ 0x40
 80059f0:	63fb      	str	r3, [r7, #60]	@ 0x3c
 80059f2:	6bf9      	ldr	r1, [r7, #60]	@ 0x3c
 80059f4:	6c3a      	ldr	r2, [r7, #64]	@ 0x40
 80059f6:	e841 2300 	strex	r3, r2, [r1]
 80059fa:	63bb      	str	r3, [r7, #56]	@ 0x38
 80059fc:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 80059fe:	2b00      	cmp	r3, #0
 8005a00:	d1e5      	bne.n	80059ce <UART_EndRxTransfer+0x8>
 8005a02:	687b      	ldr	r3, [r7, #4]
 8005a04:	681b      	ldr	r3, [r3, #0]
 8005a06:	3314      	adds	r3, #20
 8005a08:	623b      	str	r3, [r7, #32]
 8005a0a:	6a3b      	ldr	r3, [r7, #32]
 8005a0c:	e853 3f00 	ldrex	r3, [r3]
 8005a10:	61fb      	str	r3, [r7, #28]
 8005a12:	69fb      	ldr	r3, [r7, #28]
 8005a14:	f023 0301 	bic.w	r3, r3, #1
 8005a18:	64bb      	str	r3, [r7, #72]	@ 0x48
 8005a1a:	687b      	ldr	r3, [r7, #4]
 8005a1c:	681b      	ldr	r3, [r3, #0]
 8005a1e:	3314      	adds	r3, #20
 8005a20:	6cba      	ldr	r2, [r7, #72]	@ 0x48
 8005a22:	62fa      	str	r2, [r7, #44]	@ 0x2c
 8005a24:	62bb      	str	r3, [r7, #40]	@ 0x28
 8005a26:	6ab9      	ldr	r1, [r7, #40]	@ 0x28
 8005a28:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 8005a2a:	e841 2300 	strex	r3, r2, [r1]
 8005a2e:	627b      	str	r3, [r7, #36]	@ 0x24
 8005a30:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8005a32:	2b00      	cmp	r3, #0
 8005a34:	d1e5      	bne.n	8005a02 <UART_EndRxTransfer+0x3c>
 8005a36:	687b      	ldr	r3, [r7, #4]
 8005a38:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8005a3a:	2b01      	cmp	r3, #1
 8005a3c:	d119      	bne.n	8005a72 <UART_EndRxTransfer+0xac>
 8005a3e:	687b      	ldr	r3, [r7, #4]
 8005a40:	681b      	ldr	r3, [r3, #0]
 8005a42:	330c      	adds	r3, #12
 8005a44:	60fb      	str	r3, [r7, #12]
 8005a46:	68fb      	ldr	r3, [r7, #12]
 8005a48:	e853 3f00 	ldrex	r3, [r3]
 8005a4c:	60bb      	str	r3, [r7, #8]
 8005a4e:	68bb      	ldr	r3, [r7, #8]
 8005a50:	f023 0310 	bic.w	r3, r3, #16
 8005a54:	647b      	str	r3, [r7, #68]	@ 0x44
 8005a56:	687b      	ldr	r3, [r7, #4]
 8005a58:	681b      	ldr	r3, [r3, #0]
 8005a5a:	330c      	adds	r3, #12
 8005a5c:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
 8005a5e:	61ba      	str	r2, [r7, #24]
 8005a60:	617b      	str	r3, [r7, #20]
 8005a62:	6979      	ldr	r1, [r7, #20]
 8005a64:	69ba      	ldr	r2, [r7, #24]
 8005a66:	e841 2300 	strex	r3, r2, [r1]
 8005a6a:	613b      	str	r3, [r7, #16]
 8005a6c:	693b      	ldr	r3, [r7, #16]
 8005a6e:	2b00      	cmp	r3, #0
 8005a70:	d1e5      	bne.n	8005a3e <UART_EndRxTransfer+0x78>
 8005a72:	687b      	ldr	r3, [r7, #4]
 8005a74:	2220      	movs	r2, #32
 8005a76:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8005a7a:	687b      	ldr	r3, [r7, #4]
 8005a7c:	2200      	movs	r2, #0
 8005a7e:	631a      	str	r2, [r3, #48]	@ 0x30
 8005a80:	bf00      	nop
 8005a82:	3754      	adds	r7, #84	@ 0x54
 8005a84:	46bd      	mov	sp, r7
 8005a86:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005a8a:	4770      	bx	lr

08005a8c <UART_DMAAbortOnError>:
 8005a8c:	b580      	push	{r7, lr}
 8005a8e:	b084      	sub	sp, #16
 8005a90:	af00      	add	r7, sp, #0
 8005a92:	6078      	str	r0, [r7, #4]
 8005a94:	687b      	ldr	r3, [r7, #4]
 8005a96:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8005a98:	60fb      	str	r3, [r7, #12]
 8005a9a:	68fb      	ldr	r3, [r7, #12]
 8005a9c:	2200      	movs	r2, #0
 8005a9e:	85da      	strh	r2, [r3, #46]	@ 0x2e
 8005aa0:	68f8      	ldr	r0, [r7, #12]
 8005aa2:	f7ff ff21 	bl	80058e8 <HAL_UART_ErrorCallback>
 8005aa6:	bf00      	nop
 8005aa8:	3710      	adds	r7, #16
 8005aaa:	46bd      	mov	sp, r7
 8005aac:	bd80      	pop	{r7, pc}

08005aae <UART_Transmit_IT>:
 8005aae:	b480      	push	{r7}
 8005ab0:	b085      	sub	sp, #20
 8005ab2:	af00      	add	r7, sp, #0
 8005ab4:	6078      	str	r0, [r7, #4]
 8005ab6:	687b      	ldr	r3, [r7, #4]
 8005ab8:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 8005abc:	b2db      	uxtb	r3, r3
 8005abe:	2b21      	cmp	r3, #33	@ 0x21
 8005ac0:	d13e      	bne.n	8005b40 <UART_Transmit_IT+0x92>
 8005ac2:	687b      	ldr	r3, [r7, #4]
 8005ac4:	689b      	ldr	r3, [r3, #8]
 8005ac6:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8005aca:	d114      	bne.n	8005af6 <UART_Transmit_IT+0x48>
 8005acc:	687b      	ldr	r3, [r7, #4]
 8005ace:	691b      	ldr	r3, [r3, #16]
 8005ad0:	2b00      	cmp	r3, #0
 8005ad2:	d110      	bne.n	8005af6 <UART_Transmit_IT+0x48>
 8005ad4:	687b      	ldr	r3, [r7, #4]
 8005ad6:	6a1b      	ldr	r3, [r3, #32]
 8005ad8:	60fb      	str	r3, [r7, #12]
 8005ada:	68fb      	ldr	r3, [r7, #12]
 8005adc:	881b      	ldrh	r3, [r3, #0]
 8005ade:	461a      	mov	r2, r3
 8005ae0:	687b      	ldr	r3, [r7, #4]
 8005ae2:	681b      	ldr	r3, [r3, #0]
 8005ae4:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8005ae8:	605a      	str	r2, [r3, #4]
 8005aea:	687b      	ldr	r3, [r7, #4]
 8005aec:	6a1b      	ldr	r3, [r3, #32]
 8005aee:	1c9a      	adds	r2, r3, #2
 8005af0:	687b      	ldr	r3, [r7, #4]
 8005af2:	621a      	str	r2, [r3, #32]
 8005af4:	e008      	b.n	8005b08 <UART_Transmit_IT+0x5a>
 8005af6:	687b      	ldr	r3, [r7, #4]
 8005af8:	6a1b      	ldr	r3, [r3, #32]
 8005afa:	1c59      	adds	r1, r3, #1
 8005afc:	687a      	ldr	r2, [r7, #4]
 8005afe:	6211      	str	r1, [r2, #32]
 8005b00:	781a      	ldrb	r2, [r3, #0]
 8005b02:	687b      	ldr	r3, [r7, #4]
 8005b04:	681b      	ldr	r3, [r3, #0]
 8005b06:	605a      	str	r2, [r3, #4]
 8005b08:	687b      	ldr	r3, [r7, #4]
 8005b0a:	8cdb      	ldrh	r3, [r3, #38]	@ 0x26
 8005b0c:	b29b      	uxth	r3, r3
 8005b0e:	3b01      	subs	r3, #1
 8005b10:	b29b      	uxth	r3, r3
 8005b12:	687a      	ldr	r2, [r7, #4]
 8005b14:	4619      	mov	r1, r3
 8005b16:	84d1      	strh	r1, [r2, #38]	@ 0x26
 8005b18:	2b00      	cmp	r3, #0
 8005b1a:	d10f      	bne.n	8005b3c <UART_Transmit_IT+0x8e>
 8005b1c:	687b      	ldr	r3, [r7, #4]
 8005b1e:	681b      	ldr	r3, [r3, #0]
 8005b20:	68da      	ldr	r2, [r3, #12]
 8005b22:	687b      	ldr	r3, [r7, #4]
 8005b24:	681b      	ldr	r3, [r3, #0]
 8005b26:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
 8005b2a:	60da      	str	r2, [r3, #12]
 8005b2c:	687b      	ldr	r3, [r7, #4]
 8005b2e:	681b      	ldr	r3, [r3, #0]
 8005b30:	68da      	ldr	r2, [r3, #12]
 8005b32:	687b      	ldr	r3, [r7, #4]
 8005b34:	681b      	ldr	r3, [r3, #0]
 8005b36:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 8005b3a:	60da      	str	r2, [r3, #12]
 8005b3c:	2300      	movs	r3, #0
 8005b3e:	e000      	b.n	8005b42 <UART_Transmit_IT+0x94>
 8005b40:	2302      	movs	r3, #2
 8005b42:	4618      	mov	r0, r3
 8005b44:	3714      	adds	r7, #20
 8005b46:	46bd      	mov	sp, r7
 8005b48:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005b4c:	4770      	bx	lr

08005b4e <UART_EndTransmit_IT>:
 8005b4e:	b580      	push	{r7, lr}
 8005b50:	b082      	sub	sp, #8
 8005b52:	af00      	add	r7, sp, #0
 8005b54:	6078      	str	r0, [r7, #4]
 8005b56:	687b      	ldr	r3, [r7, #4]
 8005b58:	681b      	ldr	r3, [r3, #0]
 8005b5a:	68da      	ldr	r2, [r3, #12]
 8005b5c:	687b      	ldr	r3, [r7, #4]
 8005b5e:	681b      	ldr	r3, [r3, #0]
 8005b60:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 8005b64:	60da      	str	r2, [r3, #12]
 8005b66:	687b      	ldr	r3, [r7, #4]
 8005b68:	2220      	movs	r2, #32
 8005b6a:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8005b6e:	6878      	ldr	r0, [r7, #4]
 8005b70:	f7ff fea6 	bl	80058c0 <HAL_UART_TxCpltCallback>
 8005b74:	2300      	movs	r3, #0
 8005b76:	4618      	mov	r0, r3
 8005b78:	3708      	adds	r7, #8
 8005b7a:	46bd      	mov	sp, r7
 8005b7c:	bd80      	pop	{r7, pc}

08005b7e <UART_Receive_IT>:
 8005b7e:	b580      	push	{r7, lr}
 8005b80:	b08c      	sub	sp, #48	@ 0x30
 8005b82:	af00      	add	r7, sp, #0
 8005b84:	6078      	str	r0, [r7, #4]
 8005b86:	2300      	movs	r3, #0
 8005b88:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8005b8a:	2300      	movs	r3, #0
 8005b8c:	62bb      	str	r3, [r7, #40]	@ 0x28
 8005b8e:	687b      	ldr	r3, [r7, #4]
 8005b90:	f893 3042 	ldrb.w	r3, [r3, #66]	@ 0x42
 8005b94:	b2db      	uxtb	r3, r3
 8005b96:	2b22      	cmp	r3, #34	@ 0x22
 8005b98:	f040 80aa 	bne.w	8005cf0 <UART_Receive_IT+0x172>
 8005b9c:	687b      	ldr	r3, [r7, #4]
 8005b9e:	689b      	ldr	r3, [r3, #8]
 8005ba0:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8005ba4:	d115      	bne.n	8005bd2 <UART_Receive_IT+0x54>
 8005ba6:	687b      	ldr	r3, [r7, #4]
 8005ba8:	691b      	ldr	r3, [r3, #16]
 8005baa:	2b00      	cmp	r3, #0
 8005bac:	d111      	bne.n	8005bd2 <UART_Receive_IT+0x54>
 8005bae:	687b      	ldr	r3, [r7, #4]
 8005bb0:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8005bb2:	62bb      	str	r3, [r7, #40]	@ 0x28
 8005bb4:	687b      	ldr	r3, [r7, #4]
 8005bb6:	681b      	ldr	r3, [r3, #0]
 8005bb8:	685b      	ldr	r3, [r3, #4]
 8005bba:	b29b      	uxth	r3, r3
 8005bbc:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8005bc0:	b29a      	uxth	r2, r3
 8005bc2:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8005bc4:	801a      	strh	r2, [r3, #0]
 8005bc6:	687b      	ldr	r3, [r7, #4]
 8005bc8:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8005bca:	1c9a      	adds	r2, r3, #2
 8005bcc:	687b      	ldr	r3, [r7, #4]
 8005bce:	629a      	str	r2, [r3, #40]	@ 0x28
 8005bd0:	e024      	b.n	8005c1c <UART_Receive_IT+0x9e>
 8005bd2:	687b      	ldr	r3, [r7, #4]
 8005bd4:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8005bd6:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8005bd8:	687b      	ldr	r3, [r7, #4]
 8005bda:	689b      	ldr	r3, [r3, #8]
 8005bdc:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8005be0:	d007      	beq.n	8005bf2 <UART_Receive_IT+0x74>
 8005be2:	687b      	ldr	r3, [r7, #4]
 8005be4:	689b      	ldr	r3, [r3, #8]
 8005be6:	2b00      	cmp	r3, #0
 8005be8:	d10a      	bne.n	8005c00 <UART_Receive_IT+0x82>
 8005bea:	687b      	ldr	r3, [r7, #4]
 8005bec:	691b      	ldr	r3, [r3, #16]
 8005bee:	2b00      	cmp	r3, #0
 8005bf0:	d106      	bne.n	8005c00 <UART_Receive_IT+0x82>
 8005bf2:	687b      	ldr	r3, [r7, #4]
 8005bf4:	681b      	ldr	r3, [r3, #0]
 8005bf6:	685b      	ldr	r3, [r3, #4]
 8005bf8:	b2da      	uxtb	r2, r3
 8005bfa:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8005bfc:	701a      	strb	r2, [r3, #0]
 8005bfe:	e008      	b.n	8005c12 <UART_Receive_IT+0x94>
 8005c00:	687b      	ldr	r3, [r7, #4]
 8005c02:	681b      	ldr	r3, [r3, #0]
 8005c04:	685b      	ldr	r3, [r3, #4]
 8005c06:	b2db      	uxtb	r3, r3
 8005c08:	f003 037f 	and.w	r3, r3, #127	@ 0x7f
 8005c0c:	b2da      	uxtb	r2, r3
 8005c0e:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8005c10:	701a      	strb	r2, [r3, #0]
 8005c12:	687b      	ldr	r3, [r7, #4]
 8005c14:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8005c16:	1c5a      	adds	r2, r3, #1
 8005c18:	687b      	ldr	r3, [r7, #4]
 8005c1a:	629a      	str	r2, [r3, #40]	@ 0x28
 8005c1c:	687b      	ldr	r3, [r7, #4]
 8005c1e:	8ddb      	ldrh	r3, [r3, #46]	@ 0x2e
 8005c20:	b29b      	uxth	r3, r3
 8005c22:	3b01      	subs	r3, #1
 8005c24:	b29b      	uxth	r3, r3
 8005c26:	687a      	ldr	r2, [r7, #4]
 8005c28:	4619      	mov	r1, r3
 8005c2a:	85d1      	strh	r1, [r2, #46]	@ 0x2e
 8005c2c:	2b00      	cmp	r3, #0
 8005c2e:	d15d      	bne.n	8005cec <UART_Receive_IT+0x16e>
 8005c30:	687b      	ldr	r3, [r7, #4]
 8005c32:	681b      	ldr	r3, [r3, #0]
 8005c34:	68da      	ldr	r2, [r3, #12]
 8005c36:	687b      	ldr	r3, [r7, #4]
 8005c38:	681b      	ldr	r3, [r3, #0]
 8005c3a:	f022 0220 	bic.w	r2, r2, #32
 8005c3e:	60da      	str	r2, [r3, #12]
 8005c40:	687b      	ldr	r3, [r7, #4]
 8005c42:	681b      	ldr	r3, [r3, #0]
 8005c44:	68da      	ldr	r2, [r3, #12]
 8005c46:	687b      	ldr	r3, [r7, #4]
 8005c48:	681b      	ldr	r3, [r3, #0]
 8005c4a:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
 8005c4e:	60da      	str	r2, [r3, #12]
 8005c50:	687b      	ldr	r3, [r7, #4]
 8005c52:	681b      	ldr	r3, [r3, #0]
 8005c54:	695a      	ldr	r2, [r3, #20]
 8005c56:	687b      	ldr	r3, [r7, #4]
 8005c58:	681b      	ldr	r3, [r3, #0]
 8005c5a:	f022 0201 	bic.w	r2, r2, #1
 8005c5e:	615a      	str	r2, [r3, #20]
 8005c60:	687b      	ldr	r3, [r7, #4]
 8005c62:	2220      	movs	r2, #32
 8005c64:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8005c68:	687b      	ldr	r3, [r7, #4]
 8005c6a:	2200      	movs	r2, #0
 8005c6c:	635a      	str	r2, [r3, #52]	@ 0x34
 8005c6e:	687b      	ldr	r3, [r7, #4]
 8005c70:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8005c72:	2b01      	cmp	r3, #1
 8005c74:	d135      	bne.n	8005ce2 <UART_Receive_IT+0x164>
 8005c76:	687b      	ldr	r3, [r7, #4]
 8005c78:	2200      	movs	r2, #0
 8005c7a:	631a      	str	r2, [r3, #48]	@ 0x30
 8005c7c:	687b      	ldr	r3, [r7, #4]
 8005c7e:	681b      	ldr	r3, [r3, #0]
 8005c80:	330c      	adds	r3, #12
 8005c82:	617b      	str	r3, [r7, #20]
 8005c84:	697b      	ldr	r3, [r7, #20]
 8005c86:	e853 3f00 	ldrex	r3, [r3]
 8005c8a:	613b      	str	r3, [r7, #16]
 8005c8c:	693b      	ldr	r3, [r7, #16]
 8005c8e:	f023 0310 	bic.w	r3, r3, #16
 8005c92:	627b      	str	r3, [r7, #36]	@ 0x24
 8005c94:	687b      	ldr	r3, [r7, #4]
 8005c96:	681b      	ldr	r3, [r3, #0]
 8005c98:	330c      	adds	r3, #12
 8005c9a:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8005c9c:	623a      	str	r2, [r7, #32]
 8005c9e:	61fb      	str	r3, [r7, #28]
 8005ca0:	69f9      	ldr	r1, [r7, #28]
 8005ca2:	6a3a      	ldr	r2, [r7, #32]
 8005ca4:	e841 2300 	strex	r3, r2, [r1]
 8005ca8:	61bb      	str	r3, [r7, #24]
 8005caa:	69bb      	ldr	r3, [r7, #24]
 8005cac:	2b00      	cmp	r3, #0
 8005cae:	d1e5      	bne.n	8005c7c <UART_Receive_IT+0xfe>
 8005cb0:	687b      	ldr	r3, [r7, #4]
 8005cb2:	681b      	ldr	r3, [r3, #0]
 8005cb4:	681b      	ldr	r3, [r3, #0]
 8005cb6:	f003 0310 	and.w	r3, r3, #16
 8005cba:	2b10      	cmp	r3, #16
 8005cbc:	d10a      	bne.n	8005cd4 <UART_Receive_IT+0x156>
 8005cbe:	2300      	movs	r3, #0
 8005cc0:	60fb      	str	r3, [r7, #12]
 8005cc2:	687b      	ldr	r3, [r7, #4]
 8005cc4:	681b      	ldr	r3, [r3, #0]
 8005cc6:	681b      	ldr	r3, [r3, #0]
 8005cc8:	60fb      	str	r3, [r7, #12]
 8005cca:	687b      	ldr	r3, [r7, #4]
 8005ccc:	681b      	ldr	r3, [r3, #0]
 8005cce:	685b      	ldr	r3, [r3, #4]
 8005cd0:	60fb      	str	r3, [r7, #12]
 8005cd2:	68fb      	ldr	r3, [r7, #12]
 8005cd4:	687b      	ldr	r3, [r7, #4]
 8005cd6:	8d9b      	ldrh	r3, [r3, #44]	@ 0x2c
 8005cd8:	4619      	mov	r1, r3
 8005cda:	6878      	ldr	r0, [r7, #4]
 8005cdc:	f7ff fe0e 	bl	80058fc <HAL_UARTEx_RxEventCallback>
 8005ce0:	e002      	b.n	8005ce8 <UART_Receive_IT+0x16a>
 8005ce2:	6878      	ldr	r0, [r7, #4]
 8005ce4:	f7ff fdf6 	bl	80058d4 <HAL_UART_RxCpltCallback>
 8005ce8:	2300      	movs	r3, #0
 8005cea:	e002      	b.n	8005cf2 <UART_Receive_IT+0x174>
 8005cec:	2300      	movs	r3, #0
 8005cee:	e000      	b.n	8005cf2 <UART_Receive_IT+0x174>
 8005cf0:	2302      	movs	r3, #2
 8005cf2:	4618      	mov	r0, r3
 8005cf4:	3730      	adds	r7, #48	@ 0x30
 8005cf6:	46bd      	mov	sp, r7
 8005cf8:	bd80      	pop	{r7, pc}
	...

08005cfc <UART_SetConfig>:
 8005cfc:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 8005d00:	b0c0      	sub	sp, #256	@ 0x100
 8005d02:	af00      	add	r7, sp, #0
 8005d04:	f8c7 00f4 	str.w	r0, [r7, #244]	@ 0xf4
 8005d08:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8005d0c:	681b      	ldr	r3, [r3, #0]
 8005d0e:	691b      	ldr	r3, [r3, #16]
 8005d10:	f423 5040 	bic.w	r0, r3, #12288	@ 0x3000
 8005d14:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8005d18:	68d9      	ldr	r1, [r3, #12]
 8005d1a:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8005d1e:	681a      	ldr	r2, [r3, #0]
 8005d20:	ea40 0301 	orr.w	r3, r0, r1
 8005d24:	6113      	str	r3, [r2, #16]
 8005d26:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8005d2a:	689a      	ldr	r2, [r3, #8]
 8005d2c:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8005d30:	691b      	ldr	r3, [r3, #16]
 8005d32:	431a      	orrs	r2, r3
 8005d34:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8005d38:	695b      	ldr	r3, [r3, #20]
 8005d3a:	431a      	orrs	r2, r3
 8005d3c:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8005d40:	69db      	ldr	r3, [r3, #28]
 8005d42:	4313      	orrs	r3, r2
 8005d44:	f8c7 30f8 	str.w	r3, [r7, #248]	@ 0xf8
 8005d48:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8005d4c:	681b      	ldr	r3, [r3, #0]
 8005d4e:	68db      	ldr	r3, [r3, #12]
 8005d50:	f423 4116 	bic.w	r1, r3, #38400	@ 0x9600
 8005d54:	f021 010c 	bic.w	r1, r1, #12
 8005d58:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8005d5c:	681a      	ldr	r2, [r3, #0]
 8005d5e:	f8d7 30f8 	ldr.w	r3, [r7, #248]	@ 0xf8
 8005d62:	430b      	orrs	r3, r1
 8005d64:	60d3      	str	r3, [r2, #12]
 8005d66:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8005d6a:	681b      	ldr	r3, [r3, #0]
 8005d6c:	695b      	ldr	r3, [r3, #20]
 8005d6e:	f423 7040 	bic.w	r0, r3, #768	@ 0x300
 8005d72:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8005d76:	6999      	ldr	r1, [r3, #24]
 8005d78:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8005d7c:	681a      	ldr	r2, [r3, #0]
 8005d7e:	ea40 0301 	orr.w	r3, r0, r1
 8005d82:	6153      	str	r3, [r2, #20]
 8005d84:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8005d88:	681a      	ldr	r2, [r3, #0]
 8005d8a:	4b8f      	ldr	r3, [pc, #572]	@ (8005fc8 <UART_SetConfig+0x2cc>)
 8005d8c:	429a      	cmp	r2, r3
 8005d8e:	d005      	beq.n	8005d9c <UART_SetConfig+0xa0>
 8005d90:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8005d94:	681a      	ldr	r2, [r3, #0]
 8005d96:	4b8d      	ldr	r3, [pc, #564]	@ (8005fcc <UART_SetConfig+0x2d0>)
 8005d98:	429a      	cmp	r2, r3
 8005d9a:	d104      	bne.n	8005da6 <UART_SetConfig+0xaa>
 8005d9c:	f7fe f852 	bl	8003e44 <HAL_RCC_GetPCLK2Freq>
 8005da0:	f8c7 00fc 	str.w	r0, [r7, #252]	@ 0xfc
 8005da4:	e003      	b.n	8005dae <UART_SetConfig+0xb2>
 8005da6:	f7fe f839 	bl	8003e1c <HAL_RCC_GetPCLK1Freq>
 8005daa:	f8c7 00fc 	str.w	r0, [r7, #252]	@ 0xfc
 8005dae:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8005db2:	69db      	ldr	r3, [r3, #28]
 8005db4:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 8005db8:	f040 810c 	bne.w	8005fd4 <UART_SetConfig+0x2d8>
 8005dbc:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 8005dc0:	2200      	movs	r2, #0
 8005dc2:	f8c7 30e8 	str.w	r3, [r7, #232]	@ 0xe8
 8005dc6:	f8c7 20ec 	str.w	r2, [r7, #236]	@ 0xec
 8005dca:	e9d7 453a 	ldrd	r4, r5, [r7, #232]	@ 0xe8
 8005dce:	4622      	mov	r2, r4
 8005dd0:	462b      	mov	r3, r5
 8005dd2:	1891      	adds	r1, r2, r2
 8005dd4:	65b9      	str	r1, [r7, #88]	@ 0x58
 8005dd6:	415b      	adcs	r3, r3
 8005dd8:	65fb      	str	r3, [r7, #92]	@ 0x5c
 8005dda:	e9d7 2316 	ldrd	r2, r3, [r7, #88]	@ 0x58
 8005dde:	4621      	mov	r1, r4
 8005de0:	eb12 0801 	adds.w	r8, r2, r1
 8005de4:	4629      	mov	r1, r5
 8005de6:	eb43 0901 	adc.w	r9, r3, r1
 8005dea:	f04f 0200 	mov.w	r2, #0
 8005dee:	f04f 0300 	mov.w	r3, #0
 8005df2:	ea4f 03c9 	mov.w	r3, r9, lsl #3
 8005df6:	ea43 7358 	orr.w	r3, r3, r8, lsr #29
 8005dfa:	ea4f 02c8 	mov.w	r2, r8, lsl #3
 8005dfe:	4690      	mov	r8, r2
 8005e00:	4699      	mov	r9, r3
 8005e02:	4623      	mov	r3, r4
 8005e04:	eb18 0303 	adds.w	r3, r8, r3
 8005e08:	f8c7 30e0 	str.w	r3, [r7, #224]	@ 0xe0
 8005e0c:	462b      	mov	r3, r5
 8005e0e:	eb49 0303 	adc.w	r3, r9, r3
 8005e12:	f8c7 30e4 	str.w	r3, [r7, #228]	@ 0xe4
 8005e16:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8005e1a:	685b      	ldr	r3, [r3, #4]
 8005e1c:	2200      	movs	r2, #0
 8005e1e:	f8c7 30d8 	str.w	r3, [r7, #216]	@ 0xd8
 8005e22:	f8c7 20dc 	str.w	r2, [r7, #220]	@ 0xdc
 8005e26:	e9d7 1236 	ldrd	r1, r2, [r7, #216]	@ 0xd8
 8005e2a:	460b      	mov	r3, r1
 8005e2c:	18db      	adds	r3, r3, r3
 8005e2e:	653b      	str	r3, [r7, #80]	@ 0x50
 8005e30:	4613      	mov	r3, r2
 8005e32:	eb42 0303 	adc.w	r3, r2, r3
 8005e36:	657b      	str	r3, [r7, #84]	@ 0x54
 8005e38:	e9d7 2314 	ldrd	r2, r3, [r7, #80]	@ 0x50
 8005e3c:	e9d7 0138 	ldrd	r0, r1, [r7, #224]	@ 0xe0
 8005e40:	f7fa ff22 	bl	8000c88 <__aeabi_uldivmod>
 8005e44:	4602      	mov	r2, r0
 8005e46:	460b      	mov	r3, r1
 8005e48:	4b61      	ldr	r3, [pc, #388]	@ (8005fd0 <UART_SetConfig+0x2d4>)
 8005e4a:	fba3 2302 	umull	r2, r3, r3, r2
 8005e4e:	095b      	lsrs	r3, r3, #5
 8005e50:	011c      	lsls	r4, r3, #4
 8005e52:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 8005e56:	2200      	movs	r2, #0
 8005e58:	f8c7 30d0 	str.w	r3, [r7, #208]	@ 0xd0
 8005e5c:	f8c7 20d4 	str.w	r2, [r7, #212]	@ 0xd4
 8005e60:	e9d7 8934 	ldrd	r8, r9, [r7, #208]	@ 0xd0
 8005e64:	4642      	mov	r2, r8
 8005e66:	464b      	mov	r3, r9
 8005e68:	1891      	adds	r1, r2, r2
 8005e6a:	64b9      	str	r1, [r7, #72]	@ 0x48
 8005e6c:	415b      	adcs	r3, r3
 8005e6e:	64fb      	str	r3, [r7, #76]	@ 0x4c
 8005e70:	e9d7 2312 	ldrd	r2, r3, [r7, #72]	@ 0x48
 8005e74:	4641      	mov	r1, r8
 8005e76:	eb12 0a01 	adds.w	sl, r2, r1
 8005e7a:	4649      	mov	r1, r9
 8005e7c:	eb43 0b01 	adc.w	fp, r3, r1
 8005e80:	f04f 0200 	mov.w	r2, #0
 8005e84:	f04f 0300 	mov.w	r3, #0
 8005e88:	ea4f 03cb 	mov.w	r3, fp, lsl #3
 8005e8c:	ea43 735a 	orr.w	r3, r3, sl, lsr #29
 8005e90:	ea4f 02ca 	mov.w	r2, sl, lsl #3
 8005e94:	4692      	mov	sl, r2
 8005e96:	469b      	mov	fp, r3
 8005e98:	4643      	mov	r3, r8
 8005e9a:	eb1a 0303 	adds.w	r3, sl, r3
 8005e9e:	f8c7 30c8 	str.w	r3, [r7, #200]	@ 0xc8
 8005ea2:	464b      	mov	r3, r9
 8005ea4:	eb4b 0303 	adc.w	r3, fp, r3
 8005ea8:	f8c7 30cc 	str.w	r3, [r7, #204]	@ 0xcc
 8005eac:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8005eb0:	685b      	ldr	r3, [r3, #4]
 8005eb2:	2200      	movs	r2, #0
 8005eb4:	f8c7 30c0 	str.w	r3, [r7, #192]	@ 0xc0
 8005eb8:	f8c7 20c4 	str.w	r2, [r7, #196]	@ 0xc4
 8005ebc:	e9d7 1230 	ldrd	r1, r2, [r7, #192]	@ 0xc0
 8005ec0:	460b      	mov	r3, r1
 8005ec2:	18db      	adds	r3, r3, r3
 8005ec4:	643b      	str	r3, [r7, #64]	@ 0x40
 8005ec6:	4613      	mov	r3, r2
 8005ec8:	eb42 0303 	adc.w	r3, r2, r3
 8005ecc:	647b      	str	r3, [r7, #68]	@ 0x44
 8005ece:	e9d7 2310 	ldrd	r2, r3, [r7, #64]	@ 0x40
 8005ed2:	e9d7 0132 	ldrd	r0, r1, [r7, #200]	@ 0xc8
 8005ed6:	f7fa fed7 	bl	8000c88 <__aeabi_uldivmod>
 8005eda:	4602      	mov	r2, r0
 8005edc:	460b      	mov	r3, r1
 8005ede:	4611      	mov	r1, r2
 8005ee0:	4b3b      	ldr	r3, [pc, #236]	@ (8005fd0 <UART_SetConfig+0x2d4>)
 8005ee2:	fba3 2301 	umull	r2, r3, r3, r1
 8005ee6:	095b      	lsrs	r3, r3, #5
 8005ee8:	2264      	movs	r2, #100	@ 0x64
 8005eea:	fb02 f303 	mul.w	r3, r2, r3
 8005eee:	1acb      	subs	r3, r1, r3
 8005ef0:	00db      	lsls	r3, r3, #3
 8005ef2:	f103 0232 	add.w	r2, r3, #50	@ 0x32
 8005ef6:	4b36      	ldr	r3, [pc, #216]	@ (8005fd0 <UART_SetConfig+0x2d4>)
 8005ef8:	fba3 2302 	umull	r2, r3, r3, r2
 8005efc:	095b      	lsrs	r3, r3, #5
 8005efe:	005b      	lsls	r3, r3, #1
 8005f00:	f403 73f8 	and.w	r3, r3, #496	@ 0x1f0
 8005f04:	441c      	add	r4, r3
 8005f06:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 8005f0a:	2200      	movs	r2, #0
 8005f0c:	f8c7 30b8 	str.w	r3, [r7, #184]	@ 0xb8
 8005f10:	f8c7 20bc 	str.w	r2, [r7, #188]	@ 0xbc
 8005f14:	e9d7 892e 	ldrd	r8, r9, [r7, #184]	@ 0xb8
 8005f18:	4642      	mov	r2, r8
 8005f1a:	464b      	mov	r3, r9
 8005f1c:	1891      	adds	r1, r2, r2
 8005f1e:	63b9      	str	r1, [r7, #56]	@ 0x38
 8005f20:	415b      	adcs	r3, r3
 8005f22:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8005f24:	e9d7 230e 	ldrd	r2, r3, [r7, #56]	@ 0x38
 8005f28:	4641      	mov	r1, r8
 8005f2a:	1851      	adds	r1, r2, r1
 8005f2c:	6339      	str	r1, [r7, #48]	@ 0x30
 8005f2e:	4649      	mov	r1, r9
 8005f30:	414b      	adcs	r3, r1
 8005f32:	637b      	str	r3, [r7, #52]	@ 0x34
 8005f34:	f04f 0200 	mov.w	r2, #0
 8005f38:	f04f 0300 	mov.w	r3, #0
 8005f3c:	e9d7 ab0c 	ldrd	sl, fp, [r7, #48]	@ 0x30
 8005f40:	4659      	mov	r1, fp
 8005f42:	00cb      	lsls	r3, r1, #3
 8005f44:	4651      	mov	r1, sl
 8005f46:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 8005f4a:	4651      	mov	r1, sl
 8005f4c:	00ca      	lsls	r2, r1, #3
 8005f4e:	4610      	mov	r0, r2
 8005f50:	4619      	mov	r1, r3
 8005f52:	4603      	mov	r3, r0
 8005f54:	4642      	mov	r2, r8
 8005f56:	189b      	adds	r3, r3, r2
 8005f58:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
 8005f5c:	464b      	mov	r3, r9
 8005f5e:	460a      	mov	r2, r1
 8005f60:	eb42 0303 	adc.w	r3, r2, r3
 8005f64:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
 8005f68:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8005f6c:	685b      	ldr	r3, [r3, #4]
 8005f6e:	2200      	movs	r2, #0
 8005f70:	f8c7 30a8 	str.w	r3, [r7, #168]	@ 0xa8
 8005f74:	f8c7 20ac 	str.w	r2, [r7, #172]	@ 0xac
 8005f78:	e9d7 122a 	ldrd	r1, r2, [r7, #168]	@ 0xa8
 8005f7c:	460b      	mov	r3, r1
 8005f7e:	18db      	adds	r3, r3, r3
 8005f80:	62bb      	str	r3, [r7, #40]	@ 0x28
 8005f82:	4613      	mov	r3, r2
 8005f84:	eb42 0303 	adc.w	r3, r2, r3
 8005f88:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8005f8a:	e9d7 230a 	ldrd	r2, r3, [r7, #40]	@ 0x28
 8005f8e:	e9d7 012c 	ldrd	r0, r1, [r7, #176]	@ 0xb0
 8005f92:	f7fa fe79 	bl	8000c88 <__aeabi_uldivmod>
 8005f96:	4602      	mov	r2, r0
 8005f98:	460b      	mov	r3, r1
 8005f9a:	4b0d      	ldr	r3, [pc, #52]	@ (8005fd0 <UART_SetConfig+0x2d4>)
 8005f9c:	fba3 1302 	umull	r1, r3, r3, r2
 8005fa0:	095b      	lsrs	r3, r3, #5
 8005fa2:	2164      	movs	r1, #100	@ 0x64
 8005fa4:	fb01 f303 	mul.w	r3, r1, r3
 8005fa8:	1ad3      	subs	r3, r2, r3
 8005faa:	00db      	lsls	r3, r3, #3
 8005fac:	3332      	adds	r3, #50	@ 0x32
 8005fae:	4a08      	ldr	r2, [pc, #32]	@ (8005fd0 <UART_SetConfig+0x2d4>)
 8005fb0:	fba2 2303 	umull	r2, r3, r2, r3
 8005fb4:	095b      	lsrs	r3, r3, #5
 8005fb6:	f003 0207 	and.w	r2, r3, #7
 8005fba:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8005fbe:	681b      	ldr	r3, [r3, #0]
 8005fc0:	4422      	add	r2, r4
 8005fc2:	609a      	str	r2, [r3, #8]
 8005fc4:	e106      	b.n	80061d4 <UART_SetConfig+0x4d8>
 8005fc6:	bf00      	nop
 8005fc8:	40011000 	.word	0x40011000
 8005fcc:	40011400 	.word	0x40011400
 8005fd0:	51eb851f 	.word	0x51eb851f
 8005fd4:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 8005fd8:	2200      	movs	r2, #0
 8005fda:	f8c7 30a0 	str.w	r3, [r7, #160]	@ 0xa0
 8005fde:	f8c7 20a4 	str.w	r2, [r7, #164]	@ 0xa4
 8005fe2:	e9d7 8928 	ldrd	r8, r9, [r7, #160]	@ 0xa0
 8005fe6:	4642      	mov	r2, r8
 8005fe8:	464b      	mov	r3, r9
 8005fea:	1891      	adds	r1, r2, r2
 8005fec:	6239      	str	r1, [r7, #32]
 8005fee:	415b      	adcs	r3, r3
 8005ff0:	627b      	str	r3, [r7, #36]	@ 0x24
 8005ff2:	e9d7 2308 	ldrd	r2, r3, [r7, #32]
 8005ff6:	4641      	mov	r1, r8
 8005ff8:	1854      	adds	r4, r2, r1
 8005ffa:	4649      	mov	r1, r9
 8005ffc:	eb43 0501 	adc.w	r5, r3, r1
 8006000:	f04f 0200 	mov.w	r2, #0
 8006004:	f04f 0300 	mov.w	r3, #0
 8006008:	00eb      	lsls	r3, r5, #3
 800600a:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 800600e:	00e2      	lsls	r2, r4, #3
 8006010:	4614      	mov	r4, r2
 8006012:	461d      	mov	r5, r3
 8006014:	4643      	mov	r3, r8
 8006016:	18e3      	adds	r3, r4, r3
 8006018:	f8c7 3098 	str.w	r3, [r7, #152]	@ 0x98
 800601c:	464b      	mov	r3, r9
 800601e:	eb45 0303 	adc.w	r3, r5, r3
 8006022:	f8c7 309c 	str.w	r3, [r7, #156]	@ 0x9c
 8006026:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 800602a:	685b      	ldr	r3, [r3, #4]
 800602c:	2200      	movs	r2, #0
 800602e:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
 8006032:	f8c7 2094 	str.w	r2, [r7, #148]	@ 0x94
 8006036:	f04f 0200 	mov.w	r2, #0
 800603a:	f04f 0300 	mov.w	r3, #0
 800603e:	e9d7 4524 	ldrd	r4, r5, [r7, #144]	@ 0x90
 8006042:	4629      	mov	r1, r5
 8006044:	008b      	lsls	r3, r1, #2
 8006046:	4621      	mov	r1, r4
 8006048:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 800604c:	4621      	mov	r1, r4
 800604e:	008a      	lsls	r2, r1, #2
 8006050:	e9d7 0126 	ldrd	r0, r1, [r7, #152]	@ 0x98
 8006054:	f7fa fe18 	bl	8000c88 <__aeabi_uldivmod>
 8006058:	4602      	mov	r2, r0
 800605a:	460b      	mov	r3, r1
 800605c:	4b60      	ldr	r3, [pc, #384]	@ (80061e0 <UART_SetConfig+0x4e4>)
 800605e:	fba3 2302 	umull	r2, r3, r3, r2
 8006062:	095b      	lsrs	r3, r3, #5
 8006064:	011c      	lsls	r4, r3, #4
 8006066:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 800606a:	2200      	movs	r2, #0
 800606c:	f8c7 3088 	str.w	r3, [r7, #136]	@ 0x88
 8006070:	f8c7 208c 	str.w	r2, [r7, #140]	@ 0x8c
 8006074:	e9d7 8922 	ldrd	r8, r9, [r7, #136]	@ 0x88
 8006078:	4642      	mov	r2, r8
 800607a:	464b      	mov	r3, r9
 800607c:	1891      	adds	r1, r2, r2
 800607e:	61b9      	str	r1, [r7, #24]
 8006080:	415b      	adcs	r3, r3
 8006082:	61fb      	str	r3, [r7, #28]
 8006084:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 8006088:	4641      	mov	r1, r8
 800608a:	1851      	adds	r1, r2, r1
 800608c:	6139      	str	r1, [r7, #16]
 800608e:	4649      	mov	r1, r9
 8006090:	414b      	adcs	r3, r1
 8006092:	617b      	str	r3, [r7, #20]
 8006094:	f04f 0200 	mov.w	r2, #0
 8006098:	f04f 0300 	mov.w	r3, #0
 800609c:	e9d7 ab04 	ldrd	sl, fp, [r7, #16]
 80060a0:	4659      	mov	r1, fp
 80060a2:	00cb      	lsls	r3, r1, #3
 80060a4:	4651      	mov	r1, sl
 80060a6:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 80060aa:	4651      	mov	r1, sl
 80060ac:	00ca      	lsls	r2, r1, #3
 80060ae:	4610      	mov	r0, r2
 80060b0:	4619      	mov	r1, r3
 80060b2:	4603      	mov	r3, r0
 80060b4:	4642      	mov	r2, r8
 80060b6:	189b      	adds	r3, r3, r2
 80060b8:	f8c7 3080 	str.w	r3, [r7, #128]	@ 0x80
 80060bc:	464b      	mov	r3, r9
 80060be:	460a      	mov	r2, r1
 80060c0:	eb42 0303 	adc.w	r3, r2, r3
 80060c4:	f8c7 3084 	str.w	r3, [r7, #132]	@ 0x84
 80060c8:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80060cc:	685b      	ldr	r3, [r3, #4]
 80060ce:	2200      	movs	r2, #0
 80060d0:	67bb      	str	r3, [r7, #120]	@ 0x78
 80060d2:	67fa      	str	r2, [r7, #124]	@ 0x7c
 80060d4:	f04f 0200 	mov.w	r2, #0
 80060d8:	f04f 0300 	mov.w	r3, #0
 80060dc:	e9d7 891e 	ldrd	r8, r9, [r7, #120]	@ 0x78
 80060e0:	4649      	mov	r1, r9
 80060e2:	008b      	lsls	r3, r1, #2
 80060e4:	4641      	mov	r1, r8
 80060e6:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 80060ea:	4641      	mov	r1, r8
 80060ec:	008a      	lsls	r2, r1, #2
 80060ee:	e9d7 0120 	ldrd	r0, r1, [r7, #128]	@ 0x80
 80060f2:	f7fa fdc9 	bl	8000c88 <__aeabi_uldivmod>
 80060f6:	4602      	mov	r2, r0
 80060f8:	460b      	mov	r3, r1
 80060fa:	4611      	mov	r1, r2
 80060fc:	4b38      	ldr	r3, [pc, #224]	@ (80061e0 <UART_SetConfig+0x4e4>)
 80060fe:	fba3 2301 	umull	r2, r3, r3, r1
 8006102:	095b      	lsrs	r3, r3, #5
 8006104:	2264      	movs	r2, #100	@ 0x64
 8006106:	fb02 f303 	mul.w	r3, r2, r3
 800610a:	1acb      	subs	r3, r1, r3
 800610c:	011b      	lsls	r3, r3, #4
 800610e:	3332      	adds	r3, #50	@ 0x32
 8006110:	4a33      	ldr	r2, [pc, #204]	@ (80061e0 <UART_SetConfig+0x4e4>)
 8006112:	fba2 2303 	umull	r2, r3, r2, r3
 8006116:	095b      	lsrs	r3, r3, #5
 8006118:	f003 03f0 	and.w	r3, r3, #240	@ 0xf0
 800611c:	441c      	add	r4, r3
 800611e:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 8006122:	2200      	movs	r2, #0
 8006124:	673b      	str	r3, [r7, #112]	@ 0x70
 8006126:	677a      	str	r2, [r7, #116]	@ 0x74
 8006128:	e9d7 891c 	ldrd	r8, r9, [r7, #112]	@ 0x70
 800612c:	4642      	mov	r2, r8
 800612e:	464b      	mov	r3, r9
 8006130:	1891      	adds	r1, r2, r2
 8006132:	60b9      	str	r1, [r7, #8]
 8006134:	415b      	adcs	r3, r3
 8006136:	60fb      	str	r3, [r7, #12]
 8006138:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 800613c:	4641      	mov	r1, r8
 800613e:	1851      	adds	r1, r2, r1
 8006140:	6039      	str	r1, [r7, #0]
 8006142:	4649      	mov	r1, r9
 8006144:	414b      	adcs	r3, r1
 8006146:	607b      	str	r3, [r7, #4]
 8006148:	f04f 0200 	mov.w	r2, #0
 800614c:	f04f 0300 	mov.w	r3, #0
 8006150:	e9d7 ab00 	ldrd	sl, fp, [r7]
 8006154:	4659      	mov	r1, fp
 8006156:	00cb      	lsls	r3, r1, #3
 8006158:	4651      	mov	r1, sl
 800615a:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 800615e:	4651      	mov	r1, sl
 8006160:	00ca      	lsls	r2, r1, #3
 8006162:	4610      	mov	r0, r2
 8006164:	4619      	mov	r1, r3
 8006166:	4603      	mov	r3, r0
 8006168:	4642      	mov	r2, r8
 800616a:	189b      	adds	r3, r3, r2
 800616c:	66bb      	str	r3, [r7, #104]	@ 0x68
 800616e:	464b      	mov	r3, r9
 8006170:	460a      	mov	r2, r1
 8006172:	eb42 0303 	adc.w	r3, r2, r3
 8006176:	66fb      	str	r3, [r7, #108]	@ 0x6c
 8006178:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 800617c:	685b      	ldr	r3, [r3, #4]
 800617e:	2200      	movs	r2, #0
 8006180:	663b      	str	r3, [r7, #96]	@ 0x60
 8006182:	667a      	str	r2, [r7, #100]	@ 0x64
 8006184:	f04f 0200 	mov.w	r2, #0
 8006188:	f04f 0300 	mov.w	r3, #0
 800618c:	e9d7 8918 	ldrd	r8, r9, [r7, #96]	@ 0x60
 8006190:	4649      	mov	r1, r9
 8006192:	008b      	lsls	r3, r1, #2
 8006194:	4641      	mov	r1, r8
 8006196:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 800619a:	4641      	mov	r1, r8
 800619c:	008a      	lsls	r2, r1, #2
 800619e:	e9d7 011a 	ldrd	r0, r1, [r7, #104]	@ 0x68
 80061a2:	f7fa fd71 	bl	8000c88 <__aeabi_uldivmod>
 80061a6:	4602      	mov	r2, r0
 80061a8:	460b      	mov	r3, r1
 80061aa:	4b0d      	ldr	r3, [pc, #52]	@ (80061e0 <UART_SetConfig+0x4e4>)
 80061ac:	fba3 1302 	umull	r1, r3, r3, r2
 80061b0:	095b      	lsrs	r3, r3, #5
 80061b2:	2164      	movs	r1, #100	@ 0x64
 80061b4:	fb01 f303 	mul.w	r3, r1, r3
 80061b8:	1ad3      	subs	r3, r2, r3
 80061ba:	011b      	lsls	r3, r3, #4
 80061bc:	3332      	adds	r3, #50	@ 0x32
 80061be:	4a08      	ldr	r2, [pc, #32]	@ (80061e0 <UART_SetConfig+0x4e4>)
 80061c0:	fba2 2303 	umull	r2, r3, r2, r3
 80061c4:	095b      	lsrs	r3, r3, #5
 80061c6:	f003 020f 	and.w	r2, r3, #15
 80061ca:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80061ce:	681b      	ldr	r3, [r3, #0]
 80061d0:	4422      	add	r2, r4
 80061d2:	609a      	str	r2, [r3, #8]
 80061d4:	bf00      	nop
 80061d6:	f507 7780 	add.w	r7, r7, #256	@ 0x100
 80061da:	46bd      	mov	sp, r7
 80061dc:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 80061e0:	51eb851f 	.word	0x51eb851f

080061e4 <srand>:
 80061e4:	b538      	push	{r3, r4, r5, lr}
 80061e6:	4b10      	ldr	r3, [pc, #64]	@ (8006228 <srand+0x44>)
 80061e8:	681d      	ldr	r5, [r3, #0]
 80061ea:	6b2b      	ldr	r3, [r5, #48]	@ 0x30
 80061ec:	4604      	mov	r4, r0
 80061ee:	b9b3      	cbnz	r3, 800621e <srand+0x3a>
 80061f0:	2018      	movs	r0, #24
 80061f2:	f001 fd37 	bl	8007c64 <malloc>
 80061f6:	4602      	mov	r2, r0
 80061f8:	6328      	str	r0, [r5, #48]	@ 0x30
 80061fa:	b920      	cbnz	r0, 8006206 <srand+0x22>
 80061fc:	4b0b      	ldr	r3, [pc, #44]	@ (800622c <srand+0x48>)
 80061fe:	480c      	ldr	r0, [pc, #48]	@ (8006230 <srand+0x4c>)
 8006200:	2146      	movs	r1, #70	@ 0x46
 8006202:	f000 fe6d 	bl	8006ee0 <__assert_func>
 8006206:	490b      	ldr	r1, [pc, #44]	@ (8006234 <srand+0x50>)
 8006208:	4b0b      	ldr	r3, [pc, #44]	@ (8006238 <srand+0x54>)
 800620a:	e9c0 1300 	strd	r1, r3, [r0]
 800620e:	4b0b      	ldr	r3, [pc, #44]	@ (800623c <srand+0x58>)
 8006210:	6083      	str	r3, [r0, #8]
 8006212:	230b      	movs	r3, #11
 8006214:	8183      	strh	r3, [r0, #12]
 8006216:	2100      	movs	r1, #0
 8006218:	2001      	movs	r0, #1
 800621a:	e9c2 0104 	strd	r0, r1, [r2, #16]
 800621e:	6b2b      	ldr	r3, [r5, #48]	@ 0x30
 8006220:	2200      	movs	r2, #0
 8006222:	611c      	str	r4, [r3, #16]
 8006224:	615a      	str	r2, [r3, #20]
 8006226:	bd38      	pop	{r3, r4, r5, pc}
 8006228:	20000048 	.word	0x20000048
 800622c:	0800922c 	.word	0x0800922c
 8006230:	08009243 	.word	0x08009243
 8006234:	abcd330e 	.word	0xabcd330e
 8006238:	e66d1234 	.word	0xe66d1234
 800623c:	0005deec 	.word	0x0005deec

08006240 <rand>:
 8006240:	4b16      	ldr	r3, [pc, #88]	@ (800629c <rand+0x5c>)
 8006242:	b510      	push	{r4, lr}
 8006244:	681c      	ldr	r4, [r3, #0]
 8006246:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8006248:	b9b3      	cbnz	r3, 8006278 <rand+0x38>
 800624a:	2018      	movs	r0, #24
 800624c:	f001 fd0a 	bl	8007c64 <malloc>
 8006250:	4602      	mov	r2, r0
 8006252:	6320      	str	r0, [r4, #48]	@ 0x30
 8006254:	b920      	cbnz	r0, 8006260 <rand+0x20>
 8006256:	4b12      	ldr	r3, [pc, #72]	@ (80062a0 <rand+0x60>)
 8006258:	4812      	ldr	r0, [pc, #72]	@ (80062a4 <rand+0x64>)
 800625a:	2152      	movs	r1, #82	@ 0x52
 800625c:	f000 fe40 	bl	8006ee0 <__assert_func>
 8006260:	4911      	ldr	r1, [pc, #68]	@ (80062a8 <rand+0x68>)
 8006262:	4b12      	ldr	r3, [pc, #72]	@ (80062ac <rand+0x6c>)
 8006264:	e9c0 1300 	strd	r1, r3, [r0]
 8006268:	4b11      	ldr	r3, [pc, #68]	@ (80062b0 <rand+0x70>)
 800626a:	6083      	str	r3, [r0, #8]
 800626c:	230b      	movs	r3, #11
 800626e:	8183      	strh	r3, [r0, #12]
 8006270:	2100      	movs	r1, #0
 8006272:	2001      	movs	r0, #1
 8006274:	e9c2 0104 	strd	r0, r1, [r2, #16]
 8006278:	6b21      	ldr	r1, [r4, #48]	@ 0x30
 800627a:	480e      	ldr	r0, [pc, #56]	@ (80062b4 <rand+0x74>)
 800627c:	690b      	ldr	r3, [r1, #16]
 800627e:	694c      	ldr	r4, [r1, #20]
 8006280:	4a0d      	ldr	r2, [pc, #52]	@ (80062b8 <rand+0x78>)
 8006282:	4358      	muls	r0, r3
 8006284:	fb02 0004 	mla	r0, r2, r4, r0
 8006288:	fba3 3202 	umull	r3, r2, r3, r2
 800628c:	3301      	adds	r3, #1
 800628e:	eb40 0002 	adc.w	r0, r0, r2
 8006292:	e9c1 3004 	strd	r3, r0, [r1, #16]
 8006296:	f020 4000 	bic.w	r0, r0, #2147483648	@ 0x80000000
 800629a:	bd10      	pop	{r4, pc}
 800629c:	20000048 	.word	0x20000048
 80062a0:	0800922c 	.word	0x0800922c
 80062a4:	08009243 	.word	0x08009243
 80062a8:	abcd330e 	.word	0xabcd330e
 80062ac:	e66d1234 	.word	0xe66d1234
 80062b0:	0005deec 	.word	0x0005deec
 80062b4:	5851f42d 	.word	0x5851f42d
 80062b8:	4c957f2d 	.word	0x4c957f2d

080062bc <__cvt>:
 80062bc:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 80062c0:	ec57 6b10 	vmov	r6, r7, d0
 80062c4:	2f00      	cmp	r7, #0
 80062c6:	460c      	mov	r4, r1
 80062c8:	4619      	mov	r1, r3
 80062ca:	463b      	mov	r3, r7
 80062cc:	bfbb      	ittet	lt
 80062ce:	f107 4300 	addlt.w	r3, r7, #2147483648	@ 0x80000000
 80062d2:	461f      	movlt	r7, r3
 80062d4:	2300      	movge	r3, #0
 80062d6:	232d      	movlt	r3, #45	@ 0x2d
 80062d8:	700b      	strb	r3, [r1, #0]
 80062da:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80062dc:	f8dd a030 	ldr.w	sl, [sp, #48]	@ 0x30
 80062e0:	4691      	mov	r9, r2
 80062e2:	f023 0820 	bic.w	r8, r3, #32
 80062e6:	bfbc      	itt	lt
 80062e8:	4632      	movlt	r2, r6
 80062ea:	4616      	movlt	r6, r2
 80062ec:	f1b8 0f46 	cmp.w	r8, #70	@ 0x46
 80062f0:	d005      	beq.n	80062fe <__cvt+0x42>
 80062f2:	f1b8 0f45 	cmp.w	r8, #69	@ 0x45
 80062f6:	d100      	bne.n	80062fa <__cvt+0x3e>
 80062f8:	3401      	adds	r4, #1
 80062fa:	2102      	movs	r1, #2
 80062fc:	e000      	b.n	8006300 <__cvt+0x44>
 80062fe:	2103      	movs	r1, #3
 8006300:	ab03      	add	r3, sp, #12
 8006302:	9301      	str	r3, [sp, #4]
 8006304:	ab02      	add	r3, sp, #8
 8006306:	9300      	str	r3, [sp, #0]
 8006308:	ec47 6b10 	vmov	d0, r6, r7
 800630c:	4653      	mov	r3, sl
 800630e:	4622      	mov	r2, r4
 8006310:	f000 fe8e 	bl	8007030 <_dtoa_r>
 8006314:	f1b8 0f47 	cmp.w	r8, #71	@ 0x47
 8006318:	4605      	mov	r5, r0
 800631a:	d119      	bne.n	8006350 <__cvt+0x94>
 800631c:	f019 0f01 	tst.w	r9, #1
 8006320:	d00e      	beq.n	8006340 <__cvt+0x84>
 8006322:	eb00 0904 	add.w	r9, r0, r4
 8006326:	2200      	movs	r2, #0
 8006328:	2300      	movs	r3, #0
 800632a:	4630      	mov	r0, r6
 800632c:	4639      	mov	r1, r7
 800632e:	f7fa fbeb 	bl	8000b08 <__aeabi_dcmpeq>
 8006332:	b108      	cbz	r0, 8006338 <__cvt+0x7c>
 8006334:	f8cd 900c 	str.w	r9, [sp, #12]
 8006338:	2230      	movs	r2, #48	@ 0x30
 800633a:	9b03      	ldr	r3, [sp, #12]
 800633c:	454b      	cmp	r3, r9
 800633e:	d31e      	bcc.n	800637e <__cvt+0xc2>
 8006340:	9b03      	ldr	r3, [sp, #12]
 8006342:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8006344:	1b5b      	subs	r3, r3, r5
 8006346:	4628      	mov	r0, r5
 8006348:	6013      	str	r3, [r2, #0]
 800634a:	b004      	add	sp, #16
 800634c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8006350:	f1b8 0f46 	cmp.w	r8, #70	@ 0x46
 8006354:	eb00 0904 	add.w	r9, r0, r4
 8006358:	d1e5      	bne.n	8006326 <__cvt+0x6a>
 800635a:	7803      	ldrb	r3, [r0, #0]
 800635c:	2b30      	cmp	r3, #48	@ 0x30
 800635e:	d10a      	bne.n	8006376 <__cvt+0xba>
 8006360:	2200      	movs	r2, #0
 8006362:	2300      	movs	r3, #0
 8006364:	4630      	mov	r0, r6
 8006366:	4639      	mov	r1, r7
 8006368:	f7fa fbce 	bl	8000b08 <__aeabi_dcmpeq>
 800636c:	b918      	cbnz	r0, 8006376 <__cvt+0xba>
 800636e:	f1c4 0401 	rsb	r4, r4, #1
 8006372:	f8ca 4000 	str.w	r4, [sl]
 8006376:	f8da 3000 	ldr.w	r3, [sl]
 800637a:	4499      	add	r9, r3
 800637c:	e7d3      	b.n	8006326 <__cvt+0x6a>
 800637e:	1c59      	adds	r1, r3, #1
 8006380:	9103      	str	r1, [sp, #12]
 8006382:	701a      	strb	r2, [r3, #0]
 8006384:	e7d9      	b.n	800633a <__cvt+0x7e>

08006386 <__exponent>:
 8006386:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8006388:	2900      	cmp	r1, #0
 800638a:	bfba      	itte	lt
 800638c:	4249      	neglt	r1, r1
 800638e:	232d      	movlt	r3, #45	@ 0x2d
 8006390:	232b      	movge	r3, #43	@ 0x2b
 8006392:	2909      	cmp	r1, #9
 8006394:	7002      	strb	r2, [r0, #0]
 8006396:	7043      	strb	r3, [r0, #1]
 8006398:	dd29      	ble.n	80063ee <__exponent+0x68>
 800639a:	f10d 0307 	add.w	r3, sp, #7
 800639e:	461d      	mov	r5, r3
 80063a0:	270a      	movs	r7, #10
 80063a2:	461a      	mov	r2, r3
 80063a4:	fbb1 f6f7 	udiv	r6, r1, r7
 80063a8:	fb07 1416 	mls	r4, r7, r6, r1
 80063ac:	3430      	adds	r4, #48	@ 0x30
 80063ae:	f802 4c01 	strb.w	r4, [r2, #-1]
 80063b2:	460c      	mov	r4, r1
 80063b4:	2c63      	cmp	r4, #99	@ 0x63
 80063b6:	f103 33ff 	add.w	r3, r3, #4294967295
 80063ba:	4631      	mov	r1, r6
 80063bc:	dcf1      	bgt.n	80063a2 <__exponent+0x1c>
 80063be:	3130      	adds	r1, #48	@ 0x30
 80063c0:	1e94      	subs	r4, r2, #2
 80063c2:	f803 1c01 	strb.w	r1, [r3, #-1]
 80063c6:	1c41      	adds	r1, r0, #1
 80063c8:	4623      	mov	r3, r4
 80063ca:	42ab      	cmp	r3, r5
 80063cc:	d30a      	bcc.n	80063e4 <__exponent+0x5e>
 80063ce:	f10d 0309 	add.w	r3, sp, #9
 80063d2:	1a9b      	subs	r3, r3, r2
 80063d4:	42ac      	cmp	r4, r5
 80063d6:	bf88      	it	hi
 80063d8:	2300      	movhi	r3, #0
 80063da:	3302      	adds	r3, #2
 80063dc:	4403      	add	r3, r0
 80063de:	1a18      	subs	r0, r3, r0
 80063e0:	b003      	add	sp, #12
 80063e2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80063e4:	f813 6b01 	ldrb.w	r6, [r3], #1
 80063e8:	f801 6f01 	strb.w	r6, [r1, #1]!
 80063ec:	e7ed      	b.n	80063ca <__exponent+0x44>
 80063ee:	2330      	movs	r3, #48	@ 0x30
 80063f0:	3130      	adds	r1, #48	@ 0x30
 80063f2:	7083      	strb	r3, [r0, #2]
 80063f4:	70c1      	strb	r1, [r0, #3]
 80063f6:	1d03      	adds	r3, r0, #4
 80063f8:	e7f1      	b.n	80063de <__exponent+0x58>
	...

080063fc <_printf_float>:
 80063fc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006400:	b08d      	sub	sp, #52	@ 0x34
 8006402:	460c      	mov	r4, r1
 8006404:	f8dd 8058 	ldr.w	r8, [sp, #88]	@ 0x58
 8006408:	4616      	mov	r6, r2
 800640a:	461f      	mov	r7, r3
 800640c:	4605      	mov	r5, r0
 800640e:	f000 fcef 	bl	8006df0 <_localeconv_r>
 8006412:	6803      	ldr	r3, [r0, #0]
 8006414:	9304      	str	r3, [sp, #16]
 8006416:	4618      	mov	r0, r3
 8006418:	f7f9 ff4a 	bl	80002b0 <strlen>
 800641c:	2300      	movs	r3, #0
 800641e:	930a      	str	r3, [sp, #40]	@ 0x28
 8006420:	f8d8 3000 	ldr.w	r3, [r8]
 8006424:	9005      	str	r0, [sp, #20]
 8006426:	3307      	adds	r3, #7
 8006428:	f023 0307 	bic.w	r3, r3, #7
 800642c:	f103 0208 	add.w	r2, r3, #8
 8006430:	f894 a018 	ldrb.w	sl, [r4, #24]
 8006434:	f8d4 b000 	ldr.w	fp, [r4]
 8006438:	f8c8 2000 	str.w	r2, [r8]
 800643c:	e9d3 8900 	ldrd	r8, r9, [r3]
 8006440:	f029 4300 	bic.w	r3, r9, #2147483648	@ 0x80000000
 8006444:	9307      	str	r3, [sp, #28]
 8006446:	f8cd 8018 	str.w	r8, [sp, #24]
 800644a:	e9c4 8912 	strd	r8, r9, [r4, #72]	@ 0x48
 800644e:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8006452:	4b9c      	ldr	r3, [pc, #624]	@ (80066c4 <_printf_float+0x2c8>)
 8006454:	f04f 32ff 	mov.w	r2, #4294967295
 8006458:	f7fa fb88 	bl	8000b6c <__aeabi_dcmpun>
 800645c:	bb70      	cbnz	r0, 80064bc <_printf_float+0xc0>
 800645e:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8006462:	4b98      	ldr	r3, [pc, #608]	@ (80066c4 <_printf_float+0x2c8>)
 8006464:	f04f 32ff 	mov.w	r2, #4294967295
 8006468:	f7fa fb62 	bl	8000b30 <__aeabi_dcmple>
 800646c:	bb30      	cbnz	r0, 80064bc <_printf_float+0xc0>
 800646e:	2200      	movs	r2, #0
 8006470:	2300      	movs	r3, #0
 8006472:	4640      	mov	r0, r8
 8006474:	4649      	mov	r1, r9
 8006476:	f7fa fb51 	bl	8000b1c <__aeabi_dcmplt>
 800647a:	b110      	cbz	r0, 8006482 <_printf_float+0x86>
 800647c:	232d      	movs	r3, #45	@ 0x2d
 800647e:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8006482:	4a91      	ldr	r2, [pc, #580]	@ (80066c8 <_printf_float+0x2cc>)
 8006484:	4b91      	ldr	r3, [pc, #580]	@ (80066cc <_printf_float+0x2d0>)
 8006486:	f1ba 0f47 	cmp.w	sl, #71	@ 0x47
 800648a:	bf8c      	ite	hi
 800648c:	4690      	movhi	r8, r2
 800648e:	4698      	movls	r8, r3
 8006490:	2303      	movs	r3, #3
 8006492:	6123      	str	r3, [r4, #16]
 8006494:	f02b 0304 	bic.w	r3, fp, #4
 8006498:	6023      	str	r3, [r4, #0]
 800649a:	f04f 0900 	mov.w	r9, #0
 800649e:	9700      	str	r7, [sp, #0]
 80064a0:	4633      	mov	r3, r6
 80064a2:	aa0b      	add	r2, sp, #44	@ 0x2c
 80064a4:	4621      	mov	r1, r4
 80064a6:	4628      	mov	r0, r5
 80064a8:	f000 f9d2 	bl	8006850 <_printf_common>
 80064ac:	3001      	adds	r0, #1
 80064ae:	f040 808d 	bne.w	80065cc <_printf_float+0x1d0>
 80064b2:	f04f 30ff 	mov.w	r0, #4294967295
 80064b6:	b00d      	add	sp, #52	@ 0x34
 80064b8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80064bc:	4642      	mov	r2, r8
 80064be:	464b      	mov	r3, r9
 80064c0:	4640      	mov	r0, r8
 80064c2:	4649      	mov	r1, r9
 80064c4:	f7fa fb52 	bl	8000b6c <__aeabi_dcmpun>
 80064c8:	b140      	cbz	r0, 80064dc <_printf_float+0xe0>
 80064ca:	464b      	mov	r3, r9
 80064cc:	2b00      	cmp	r3, #0
 80064ce:	bfbc      	itt	lt
 80064d0:	232d      	movlt	r3, #45	@ 0x2d
 80064d2:	f884 3043 	strblt.w	r3, [r4, #67]	@ 0x43
 80064d6:	4a7e      	ldr	r2, [pc, #504]	@ (80066d0 <_printf_float+0x2d4>)
 80064d8:	4b7e      	ldr	r3, [pc, #504]	@ (80066d4 <_printf_float+0x2d8>)
 80064da:	e7d4      	b.n	8006486 <_printf_float+0x8a>
 80064dc:	6863      	ldr	r3, [r4, #4]
 80064de:	f00a 02df 	and.w	r2, sl, #223	@ 0xdf
 80064e2:	9206      	str	r2, [sp, #24]
 80064e4:	1c5a      	adds	r2, r3, #1
 80064e6:	d13b      	bne.n	8006560 <_printf_float+0x164>
 80064e8:	2306      	movs	r3, #6
 80064ea:	6063      	str	r3, [r4, #4]
 80064ec:	f44b 6280 	orr.w	r2, fp, #1024	@ 0x400
 80064f0:	2300      	movs	r3, #0
 80064f2:	6022      	str	r2, [r4, #0]
 80064f4:	9303      	str	r3, [sp, #12]
 80064f6:	ab0a      	add	r3, sp, #40	@ 0x28
 80064f8:	e9cd a301 	strd	sl, r3, [sp, #4]
 80064fc:	ab09      	add	r3, sp, #36	@ 0x24
 80064fe:	9300      	str	r3, [sp, #0]
 8006500:	6861      	ldr	r1, [r4, #4]
 8006502:	ec49 8b10 	vmov	d0, r8, r9
 8006506:	f10d 0323 	add.w	r3, sp, #35	@ 0x23
 800650a:	4628      	mov	r0, r5
 800650c:	f7ff fed6 	bl	80062bc <__cvt>
 8006510:	9b06      	ldr	r3, [sp, #24]
 8006512:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8006514:	2b47      	cmp	r3, #71	@ 0x47
 8006516:	4680      	mov	r8, r0
 8006518:	d129      	bne.n	800656e <_printf_float+0x172>
 800651a:	1cc8      	adds	r0, r1, #3
 800651c:	db02      	blt.n	8006524 <_printf_float+0x128>
 800651e:	6863      	ldr	r3, [r4, #4]
 8006520:	4299      	cmp	r1, r3
 8006522:	dd41      	ble.n	80065a8 <_printf_float+0x1ac>
 8006524:	f1aa 0a02 	sub.w	sl, sl, #2
 8006528:	fa5f fa8a 	uxtb.w	sl, sl
 800652c:	3901      	subs	r1, #1
 800652e:	4652      	mov	r2, sl
 8006530:	f104 0050 	add.w	r0, r4, #80	@ 0x50
 8006534:	9109      	str	r1, [sp, #36]	@ 0x24
 8006536:	f7ff ff26 	bl	8006386 <__exponent>
 800653a:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 800653c:	1813      	adds	r3, r2, r0
 800653e:	2a01      	cmp	r2, #1
 8006540:	4681      	mov	r9, r0
 8006542:	6123      	str	r3, [r4, #16]
 8006544:	dc02      	bgt.n	800654c <_printf_float+0x150>
 8006546:	6822      	ldr	r2, [r4, #0]
 8006548:	07d2      	lsls	r2, r2, #31
 800654a:	d501      	bpl.n	8006550 <_printf_float+0x154>
 800654c:	3301      	adds	r3, #1
 800654e:	6123      	str	r3, [r4, #16]
 8006550:	f89d 3023 	ldrb.w	r3, [sp, #35]	@ 0x23
 8006554:	2b00      	cmp	r3, #0
 8006556:	d0a2      	beq.n	800649e <_printf_float+0xa2>
 8006558:	232d      	movs	r3, #45	@ 0x2d
 800655a:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 800655e:	e79e      	b.n	800649e <_printf_float+0xa2>
 8006560:	9a06      	ldr	r2, [sp, #24]
 8006562:	2a47      	cmp	r2, #71	@ 0x47
 8006564:	d1c2      	bne.n	80064ec <_printf_float+0xf0>
 8006566:	2b00      	cmp	r3, #0
 8006568:	d1c0      	bne.n	80064ec <_printf_float+0xf0>
 800656a:	2301      	movs	r3, #1
 800656c:	e7bd      	b.n	80064ea <_printf_float+0xee>
 800656e:	f1ba 0f65 	cmp.w	sl, #101	@ 0x65
 8006572:	d9db      	bls.n	800652c <_printf_float+0x130>
 8006574:	f1ba 0f66 	cmp.w	sl, #102	@ 0x66
 8006578:	d118      	bne.n	80065ac <_printf_float+0x1b0>
 800657a:	2900      	cmp	r1, #0
 800657c:	6863      	ldr	r3, [r4, #4]
 800657e:	dd0b      	ble.n	8006598 <_printf_float+0x19c>
 8006580:	6121      	str	r1, [r4, #16]
 8006582:	b913      	cbnz	r3, 800658a <_printf_float+0x18e>
 8006584:	6822      	ldr	r2, [r4, #0]
 8006586:	07d0      	lsls	r0, r2, #31
 8006588:	d502      	bpl.n	8006590 <_printf_float+0x194>
 800658a:	3301      	adds	r3, #1
 800658c:	440b      	add	r3, r1
 800658e:	6123      	str	r3, [r4, #16]
 8006590:	65a1      	str	r1, [r4, #88]	@ 0x58
 8006592:	f04f 0900 	mov.w	r9, #0
 8006596:	e7db      	b.n	8006550 <_printf_float+0x154>
 8006598:	b913      	cbnz	r3, 80065a0 <_printf_float+0x1a4>
 800659a:	6822      	ldr	r2, [r4, #0]
 800659c:	07d2      	lsls	r2, r2, #31
 800659e:	d501      	bpl.n	80065a4 <_printf_float+0x1a8>
 80065a0:	3302      	adds	r3, #2
 80065a2:	e7f4      	b.n	800658e <_printf_float+0x192>
 80065a4:	2301      	movs	r3, #1
 80065a6:	e7f2      	b.n	800658e <_printf_float+0x192>
 80065a8:	f04f 0a67 	mov.w	sl, #103	@ 0x67
 80065ac:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80065ae:	4299      	cmp	r1, r3
 80065b0:	db05      	blt.n	80065be <_printf_float+0x1c2>
 80065b2:	6823      	ldr	r3, [r4, #0]
 80065b4:	6121      	str	r1, [r4, #16]
 80065b6:	07d8      	lsls	r0, r3, #31
 80065b8:	d5ea      	bpl.n	8006590 <_printf_float+0x194>
 80065ba:	1c4b      	adds	r3, r1, #1
 80065bc:	e7e7      	b.n	800658e <_printf_float+0x192>
 80065be:	2900      	cmp	r1, #0
 80065c0:	bfd4      	ite	le
 80065c2:	f1c1 0202 	rsble	r2, r1, #2
 80065c6:	2201      	movgt	r2, #1
 80065c8:	4413      	add	r3, r2
 80065ca:	e7e0      	b.n	800658e <_printf_float+0x192>
 80065cc:	6823      	ldr	r3, [r4, #0]
 80065ce:	055a      	lsls	r2, r3, #21
 80065d0:	d407      	bmi.n	80065e2 <_printf_float+0x1e6>
 80065d2:	6923      	ldr	r3, [r4, #16]
 80065d4:	4642      	mov	r2, r8
 80065d6:	4631      	mov	r1, r6
 80065d8:	4628      	mov	r0, r5
 80065da:	47b8      	blx	r7
 80065dc:	3001      	adds	r0, #1
 80065de:	d12b      	bne.n	8006638 <_printf_float+0x23c>
 80065e0:	e767      	b.n	80064b2 <_printf_float+0xb6>
 80065e2:	f1ba 0f65 	cmp.w	sl, #101	@ 0x65
 80065e6:	f240 80dd 	bls.w	80067a4 <_printf_float+0x3a8>
 80065ea:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	@ 0x48
 80065ee:	2200      	movs	r2, #0
 80065f0:	2300      	movs	r3, #0
 80065f2:	f7fa fa89 	bl	8000b08 <__aeabi_dcmpeq>
 80065f6:	2800      	cmp	r0, #0
 80065f8:	d033      	beq.n	8006662 <_printf_float+0x266>
 80065fa:	4a37      	ldr	r2, [pc, #220]	@ (80066d8 <_printf_float+0x2dc>)
 80065fc:	2301      	movs	r3, #1
 80065fe:	4631      	mov	r1, r6
 8006600:	4628      	mov	r0, r5
 8006602:	47b8      	blx	r7
 8006604:	3001      	adds	r0, #1
 8006606:	f43f af54 	beq.w	80064b2 <_printf_float+0xb6>
 800660a:	e9dd 3809 	ldrd	r3, r8, [sp, #36]	@ 0x24
 800660e:	4543      	cmp	r3, r8
 8006610:	db02      	blt.n	8006618 <_printf_float+0x21c>
 8006612:	6823      	ldr	r3, [r4, #0]
 8006614:	07d8      	lsls	r0, r3, #31
 8006616:	d50f      	bpl.n	8006638 <_printf_float+0x23c>
 8006618:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 800661c:	4631      	mov	r1, r6
 800661e:	4628      	mov	r0, r5
 8006620:	47b8      	blx	r7
 8006622:	3001      	adds	r0, #1
 8006624:	f43f af45 	beq.w	80064b2 <_printf_float+0xb6>
 8006628:	f04f 0900 	mov.w	r9, #0
 800662c:	f108 38ff 	add.w	r8, r8, #4294967295
 8006630:	f104 0a1a 	add.w	sl, r4, #26
 8006634:	45c8      	cmp	r8, r9
 8006636:	dc09      	bgt.n	800664c <_printf_float+0x250>
 8006638:	6823      	ldr	r3, [r4, #0]
 800663a:	079b      	lsls	r3, r3, #30
 800663c:	f100 8103 	bmi.w	8006846 <_printf_float+0x44a>
 8006640:	68e0      	ldr	r0, [r4, #12]
 8006642:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8006644:	4298      	cmp	r0, r3
 8006646:	bfb8      	it	lt
 8006648:	4618      	movlt	r0, r3
 800664a:	e734      	b.n	80064b6 <_printf_float+0xba>
 800664c:	2301      	movs	r3, #1
 800664e:	4652      	mov	r2, sl
 8006650:	4631      	mov	r1, r6
 8006652:	4628      	mov	r0, r5
 8006654:	47b8      	blx	r7
 8006656:	3001      	adds	r0, #1
 8006658:	f43f af2b 	beq.w	80064b2 <_printf_float+0xb6>
 800665c:	f109 0901 	add.w	r9, r9, #1
 8006660:	e7e8      	b.n	8006634 <_printf_float+0x238>
 8006662:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8006664:	2b00      	cmp	r3, #0
 8006666:	dc39      	bgt.n	80066dc <_printf_float+0x2e0>
 8006668:	4a1b      	ldr	r2, [pc, #108]	@ (80066d8 <_printf_float+0x2dc>)
 800666a:	2301      	movs	r3, #1
 800666c:	4631      	mov	r1, r6
 800666e:	4628      	mov	r0, r5
 8006670:	47b8      	blx	r7
 8006672:	3001      	adds	r0, #1
 8006674:	f43f af1d 	beq.w	80064b2 <_printf_float+0xb6>
 8006678:	e9dd 3909 	ldrd	r3, r9, [sp, #36]	@ 0x24
 800667c:	ea59 0303 	orrs.w	r3, r9, r3
 8006680:	d102      	bne.n	8006688 <_printf_float+0x28c>
 8006682:	6823      	ldr	r3, [r4, #0]
 8006684:	07d9      	lsls	r1, r3, #31
 8006686:	d5d7      	bpl.n	8006638 <_printf_float+0x23c>
 8006688:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 800668c:	4631      	mov	r1, r6
 800668e:	4628      	mov	r0, r5
 8006690:	47b8      	blx	r7
 8006692:	3001      	adds	r0, #1
 8006694:	f43f af0d 	beq.w	80064b2 <_printf_float+0xb6>
 8006698:	f04f 0a00 	mov.w	sl, #0
 800669c:	f104 0b1a 	add.w	fp, r4, #26
 80066a0:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80066a2:	425b      	negs	r3, r3
 80066a4:	4553      	cmp	r3, sl
 80066a6:	dc01      	bgt.n	80066ac <_printf_float+0x2b0>
 80066a8:	464b      	mov	r3, r9
 80066aa:	e793      	b.n	80065d4 <_printf_float+0x1d8>
 80066ac:	2301      	movs	r3, #1
 80066ae:	465a      	mov	r2, fp
 80066b0:	4631      	mov	r1, r6
 80066b2:	4628      	mov	r0, r5
 80066b4:	47b8      	blx	r7
 80066b6:	3001      	adds	r0, #1
 80066b8:	f43f aefb 	beq.w	80064b2 <_printf_float+0xb6>
 80066bc:	f10a 0a01 	add.w	sl, sl, #1
 80066c0:	e7ee      	b.n	80066a0 <_printf_float+0x2a4>
 80066c2:	bf00      	nop
 80066c4:	7fefffff 	.word	0x7fefffff
 80066c8:	0800929f 	.word	0x0800929f
 80066cc:	0800929b 	.word	0x0800929b
 80066d0:	080092a7 	.word	0x080092a7
 80066d4:	080092a3 	.word	0x080092a3
 80066d8:	080092ab 	.word	0x080092ab
 80066dc:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 80066de:	f8dd a028 	ldr.w	sl, [sp, #40]	@ 0x28
 80066e2:	4553      	cmp	r3, sl
 80066e4:	bfa8      	it	ge
 80066e6:	4653      	movge	r3, sl
 80066e8:	2b00      	cmp	r3, #0
 80066ea:	4699      	mov	r9, r3
 80066ec:	dc36      	bgt.n	800675c <_printf_float+0x360>
 80066ee:	f04f 0b00 	mov.w	fp, #0
 80066f2:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 80066f6:	f104 021a 	add.w	r2, r4, #26
 80066fa:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 80066fc:	9306      	str	r3, [sp, #24]
 80066fe:	eba3 0309 	sub.w	r3, r3, r9
 8006702:	455b      	cmp	r3, fp
 8006704:	dc31      	bgt.n	800676a <_printf_float+0x36e>
 8006706:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8006708:	459a      	cmp	sl, r3
 800670a:	dc3a      	bgt.n	8006782 <_printf_float+0x386>
 800670c:	6823      	ldr	r3, [r4, #0]
 800670e:	07da      	lsls	r2, r3, #31
 8006710:	d437      	bmi.n	8006782 <_printf_float+0x386>
 8006712:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8006714:	ebaa 0903 	sub.w	r9, sl, r3
 8006718:	9b06      	ldr	r3, [sp, #24]
 800671a:	ebaa 0303 	sub.w	r3, sl, r3
 800671e:	4599      	cmp	r9, r3
 8006720:	bfa8      	it	ge
 8006722:	4699      	movge	r9, r3
 8006724:	f1b9 0f00 	cmp.w	r9, #0
 8006728:	dc33      	bgt.n	8006792 <_printf_float+0x396>
 800672a:	f04f 0800 	mov.w	r8, #0
 800672e:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 8006732:	f104 0b1a 	add.w	fp, r4, #26
 8006736:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8006738:	ebaa 0303 	sub.w	r3, sl, r3
 800673c:	eba3 0309 	sub.w	r3, r3, r9
 8006740:	4543      	cmp	r3, r8
 8006742:	f77f af79 	ble.w	8006638 <_printf_float+0x23c>
 8006746:	2301      	movs	r3, #1
 8006748:	465a      	mov	r2, fp
 800674a:	4631      	mov	r1, r6
 800674c:	4628      	mov	r0, r5
 800674e:	47b8      	blx	r7
 8006750:	3001      	adds	r0, #1
 8006752:	f43f aeae 	beq.w	80064b2 <_printf_float+0xb6>
 8006756:	f108 0801 	add.w	r8, r8, #1
 800675a:	e7ec      	b.n	8006736 <_printf_float+0x33a>
 800675c:	4642      	mov	r2, r8
 800675e:	4631      	mov	r1, r6
 8006760:	4628      	mov	r0, r5
 8006762:	47b8      	blx	r7
 8006764:	3001      	adds	r0, #1
 8006766:	d1c2      	bne.n	80066ee <_printf_float+0x2f2>
 8006768:	e6a3      	b.n	80064b2 <_printf_float+0xb6>
 800676a:	2301      	movs	r3, #1
 800676c:	4631      	mov	r1, r6
 800676e:	4628      	mov	r0, r5
 8006770:	9206      	str	r2, [sp, #24]
 8006772:	47b8      	blx	r7
 8006774:	3001      	adds	r0, #1
 8006776:	f43f ae9c 	beq.w	80064b2 <_printf_float+0xb6>
 800677a:	9a06      	ldr	r2, [sp, #24]
 800677c:	f10b 0b01 	add.w	fp, fp, #1
 8006780:	e7bb      	b.n	80066fa <_printf_float+0x2fe>
 8006782:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8006786:	4631      	mov	r1, r6
 8006788:	4628      	mov	r0, r5
 800678a:	47b8      	blx	r7
 800678c:	3001      	adds	r0, #1
 800678e:	d1c0      	bne.n	8006712 <_printf_float+0x316>
 8006790:	e68f      	b.n	80064b2 <_printf_float+0xb6>
 8006792:	9a06      	ldr	r2, [sp, #24]
 8006794:	464b      	mov	r3, r9
 8006796:	4442      	add	r2, r8
 8006798:	4631      	mov	r1, r6
 800679a:	4628      	mov	r0, r5
 800679c:	47b8      	blx	r7
 800679e:	3001      	adds	r0, #1
 80067a0:	d1c3      	bne.n	800672a <_printf_float+0x32e>
 80067a2:	e686      	b.n	80064b2 <_printf_float+0xb6>
 80067a4:	f8dd a028 	ldr.w	sl, [sp, #40]	@ 0x28
 80067a8:	f1ba 0f01 	cmp.w	sl, #1
 80067ac:	dc01      	bgt.n	80067b2 <_printf_float+0x3b6>
 80067ae:	07db      	lsls	r3, r3, #31
 80067b0:	d536      	bpl.n	8006820 <_printf_float+0x424>
 80067b2:	2301      	movs	r3, #1
 80067b4:	4642      	mov	r2, r8
 80067b6:	4631      	mov	r1, r6
 80067b8:	4628      	mov	r0, r5
 80067ba:	47b8      	blx	r7
 80067bc:	3001      	adds	r0, #1
 80067be:	f43f ae78 	beq.w	80064b2 <_printf_float+0xb6>
 80067c2:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 80067c6:	4631      	mov	r1, r6
 80067c8:	4628      	mov	r0, r5
 80067ca:	47b8      	blx	r7
 80067cc:	3001      	adds	r0, #1
 80067ce:	f43f ae70 	beq.w	80064b2 <_printf_float+0xb6>
 80067d2:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	@ 0x48
 80067d6:	2200      	movs	r2, #0
 80067d8:	2300      	movs	r3, #0
 80067da:	f10a 3aff 	add.w	sl, sl, #4294967295
 80067de:	f7fa f993 	bl	8000b08 <__aeabi_dcmpeq>
 80067e2:	b9c0      	cbnz	r0, 8006816 <_printf_float+0x41a>
 80067e4:	4653      	mov	r3, sl
 80067e6:	f108 0201 	add.w	r2, r8, #1
 80067ea:	4631      	mov	r1, r6
 80067ec:	4628      	mov	r0, r5
 80067ee:	47b8      	blx	r7
 80067f0:	3001      	adds	r0, #1
 80067f2:	d10c      	bne.n	800680e <_printf_float+0x412>
 80067f4:	e65d      	b.n	80064b2 <_printf_float+0xb6>
 80067f6:	2301      	movs	r3, #1
 80067f8:	465a      	mov	r2, fp
 80067fa:	4631      	mov	r1, r6
 80067fc:	4628      	mov	r0, r5
 80067fe:	47b8      	blx	r7
 8006800:	3001      	adds	r0, #1
 8006802:	f43f ae56 	beq.w	80064b2 <_printf_float+0xb6>
 8006806:	f108 0801 	add.w	r8, r8, #1
 800680a:	45d0      	cmp	r8, sl
 800680c:	dbf3      	blt.n	80067f6 <_printf_float+0x3fa>
 800680e:	464b      	mov	r3, r9
 8006810:	f104 0250 	add.w	r2, r4, #80	@ 0x50
 8006814:	e6df      	b.n	80065d6 <_printf_float+0x1da>
 8006816:	f04f 0800 	mov.w	r8, #0
 800681a:	f104 0b1a 	add.w	fp, r4, #26
 800681e:	e7f4      	b.n	800680a <_printf_float+0x40e>
 8006820:	2301      	movs	r3, #1
 8006822:	4642      	mov	r2, r8
 8006824:	e7e1      	b.n	80067ea <_printf_float+0x3ee>
 8006826:	2301      	movs	r3, #1
 8006828:	464a      	mov	r2, r9
 800682a:	4631      	mov	r1, r6
 800682c:	4628      	mov	r0, r5
 800682e:	47b8      	blx	r7
 8006830:	3001      	adds	r0, #1
 8006832:	f43f ae3e 	beq.w	80064b2 <_printf_float+0xb6>
 8006836:	f108 0801 	add.w	r8, r8, #1
 800683a:	68e3      	ldr	r3, [r4, #12]
 800683c:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 800683e:	1a5b      	subs	r3, r3, r1
 8006840:	4543      	cmp	r3, r8
 8006842:	dcf0      	bgt.n	8006826 <_printf_float+0x42a>
 8006844:	e6fc      	b.n	8006640 <_printf_float+0x244>
 8006846:	f04f 0800 	mov.w	r8, #0
 800684a:	f104 0919 	add.w	r9, r4, #25
 800684e:	e7f4      	b.n	800683a <_printf_float+0x43e>

08006850 <_printf_common>:
 8006850:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8006854:	4616      	mov	r6, r2
 8006856:	4698      	mov	r8, r3
 8006858:	688a      	ldr	r2, [r1, #8]
 800685a:	690b      	ldr	r3, [r1, #16]
 800685c:	f8dd 9020 	ldr.w	r9, [sp, #32]
 8006860:	4293      	cmp	r3, r2
 8006862:	bfb8      	it	lt
 8006864:	4613      	movlt	r3, r2
 8006866:	6033      	str	r3, [r6, #0]
 8006868:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 800686c:	4607      	mov	r7, r0
 800686e:	460c      	mov	r4, r1
 8006870:	b10a      	cbz	r2, 8006876 <_printf_common+0x26>
 8006872:	3301      	adds	r3, #1
 8006874:	6033      	str	r3, [r6, #0]
 8006876:	6823      	ldr	r3, [r4, #0]
 8006878:	0699      	lsls	r1, r3, #26
 800687a:	bf42      	ittt	mi
 800687c:	6833      	ldrmi	r3, [r6, #0]
 800687e:	3302      	addmi	r3, #2
 8006880:	6033      	strmi	r3, [r6, #0]
 8006882:	6825      	ldr	r5, [r4, #0]
 8006884:	f015 0506 	ands.w	r5, r5, #6
 8006888:	d106      	bne.n	8006898 <_printf_common+0x48>
 800688a:	f104 0a19 	add.w	sl, r4, #25
 800688e:	68e3      	ldr	r3, [r4, #12]
 8006890:	6832      	ldr	r2, [r6, #0]
 8006892:	1a9b      	subs	r3, r3, r2
 8006894:	42ab      	cmp	r3, r5
 8006896:	dc26      	bgt.n	80068e6 <_printf_common+0x96>
 8006898:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 800689c:	6822      	ldr	r2, [r4, #0]
 800689e:	3b00      	subs	r3, #0
 80068a0:	bf18      	it	ne
 80068a2:	2301      	movne	r3, #1
 80068a4:	0692      	lsls	r2, r2, #26
 80068a6:	d42b      	bmi.n	8006900 <_printf_common+0xb0>
 80068a8:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 80068ac:	4641      	mov	r1, r8
 80068ae:	4638      	mov	r0, r7
 80068b0:	47c8      	blx	r9
 80068b2:	3001      	adds	r0, #1
 80068b4:	d01e      	beq.n	80068f4 <_printf_common+0xa4>
 80068b6:	6823      	ldr	r3, [r4, #0]
 80068b8:	6922      	ldr	r2, [r4, #16]
 80068ba:	f003 0306 	and.w	r3, r3, #6
 80068be:	2b04      	cmp	r3, #4
 80068c0:	bf02      	ittt	eq
 80068c2:	68e5      	ldreq	r5, [r4, #12]
 80068c4:	6833      	ldreq	r3, [r6, #0]
 80068c6:	1aed      	subeq	r5, r5, r3
 80068c8:	68a3      	ldr	r3, [r4, #8]
 80068ca:	bf0c      	ite	eq
 80068cc:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 80068d0:	2500      	movne	r5, #0
 80068d2:	4293      	cmp	r3, r2
 80068d4:	bfc4      	itt	gt
 80068d6:	1a9b      	subgt	r3, r3, r2
 80068d8:	18ed      	addgt	r5, r5, r3
 80068da:	2600      	movs	r6, #0
 80068dc:	341a      	adds	r4, #26
 80068de:	42b5      	cmp	r5, r6
 80068e0:	d11a      	bne.n	8006918 <_printf_common+0xc8>
 80068e2:	2000      	movs	r0, #0
 80068e4:	e008      	b.n	80068f8 <_printf_common+0xa8>
 80068e6:	2301      	movs	r3, #1
 80068e8:	4652      	mov	r2, sl
 80068ea:	4641      	mov	r1, r8
 80068ec:	4638      	mov	r0, r7
 80068ee:	47c8      	blx	r9
 80068f0:	3001      	adds	r0, #1
 80068f2:	d103      	bne.n	80068fc <_printf_common+0xac>
 80068f4:	f04f 30ff 	mov.w	r0, #4294967295
 80068f8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80068fc:	3501      	adds	r5, #1
 80068fe:	e7c6      	b.n	800688e <_printf_common+0x3e>
 8006900:	18e1      	adds	r1, r4, r3
 8006902:	1c5a      	adds	r2, r3, #1
 8006904:	2030      	movs	r0, #48	@ 0x30
 8006906:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 800690a:	4422      	add	r2, r4
 800690c:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 8006910:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 8006914:	3302      	adds	r3, #2
 8006916:	e7c7      	b.n	80068a8 <_printf_common+0x58>
 8006918:	2301      	movs	r3, #1
 800691a:	4622      	mov	r2, r4
 800691c:	4641      	mov	r1, r8
 800691e:	4638      	mov	r0, r7
 8006920:	47c8      	blx	r9
 8006922:	3001      	adds	r0, #1
 8006924:	d0e6      	beq.n	80068f4 <_printf_common+0xa4>
 8006926:	3601      	adds	r6, #1
 8006928:	e7d9      	b.n	80068de <_printf_common+0x8e>
	...

0800692c <_printf_i>:
 800692c:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8006930:	7e0f      	ldrb	r7, [r1, #24]
 8006932:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 8006934:	2f78      	cmp	r7, #120	@ 0x78
 8006936:	4691      	mov	r9, r2
 8006938:	4680      	mov	r8, r0
 800693a:	460c      	mov	r4, r1
 800693c:	469a      	mov	sl, r3
 800693e:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 8006942:	d807      	bhi.n	8006954 <_printf_i+0x28>
 8006944:	2f62      	cmp	r7, #98	@ 0x62
 8006946:	d80a      	bhi.n	800695e <_printf_i+0x32>
 8006948:	2f00      	cmp	r7, #0
 800694a:	f000 80d1 	beq.w	8006af0 <_printf_i+0x1c4>
 800694e:	2f58      	cmp	r7, #88	@ 0x58
 8006950:	f000 80b8 	beq.w	8006ac4 <_printf_i+0x198>
 8006954:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8006958:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 800695c:	e03a      	b.n	80069d4 <_printf_i+0xa8>
 800695e:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 8006962:	2b15      	cmp	r3, #21
 8006964:	d8f6      	bhi.n	8006954 <_printf_i+0x28>
 8006966:	a101      	add	r1, pc, #4	@ (adr r1, 800696c <_printf_i+0x40>)
 8006968:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 800696c:	080069c5 	.word	0x080069c5
 8006970:	080069d9 	.word	0x080069d9
 8006974:	08006955 	.word	0x08006955
 8006978:	08006955 	.word	0x08006955
 800697c:	08006955 	.word	0x08006955
 8006980:	08006955 	.word	0x08006955
 8006984:	080069d9 	.word	0x080069d9
 8006988:	08006955 	.word	0x08006955
 800698c:	08006955 	.word	0x08006955
 8006990:	08006955 	.word	0x08006955
 8006994:	08006955 	.word	0x08006955
 8006998:	08006ad7 	.word	0x08006ad7
 800699c:	08006a03 	.word	0x08006a03
 80069a0:	08006a91 	.word	0x08006a91
 80069a4:	08006955 	.word	0x08006955
 80069a8:	08006955 	.word	0x08006955
 80069ac:	08006af9 	.word	0x08006af9
 80069b0:	08006955 	.word	0x08006955
 80069b4:	08006a03 	.word	0x08006a03
 80069b8:	08006955 	.word	0x08006955
 80069bc:	08006955 	.word	0x08006955
 80069c0:	08006a99 	.word	0x08006a99
 80069c4:	6833      	ldr	r3, [r6, #0]
 80069c6:	1d1a      	adds	r2, r3, #4
 80069c8:	681b      	ldr	r3, [r3, #0]
 80069ca:	6032      	str	r2, [r6, #0]
 80069cc:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 80069d0:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 80069d4:	2301      	movs	r3, #1
 80069d6:	e09c      	b.n	8006b12 <_printf_i+0x1e6>
 80069d8:	6833      	ldr	r3, [r6, #0]
 80069da:	6820      	ldr	r0, [r4, #0]
 80069dc:	1d19      	adds	r1, r3, #4
 80069de:	6031      	str	r1, [r6, #0]
 80069e0:	0606      	lsls	r6, r0, #24
 80069e2:	d501      	bpl.n	80069e8 <_printf_i+0xbc>
 80069e4:	681d      	ldr	r5, [r3, #0]
 80069e6:	e003      	b.n	80069f0 <_printf_i+0xc4>
 80069e8:	0645      	lsls	r5, r0, #25
 80069ea:	d5fb      	bpl.n	80069e4 <_printf_i+0xb8>
 80069ec:	f9b3 5000 	ldrsh.w	r5, [r3]
 80069f0:	2d00      	cmp	r5, #0
 80069f2:	da03      	bge.n	80069fc <_printf_i+0xd0>
 80069f4:	232d      	movs	r3, #45	@ 0x2d
 80069f6:	426d      	negs	r5, r5
 80069f8:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 80069fc:	4858      	ldr	r0, [pc, #352]	@ (8006b60 <_printf_i+0x234>)
 80069fe:	230a      	movs	r3, #10
 8006a00:	e011      	b.n	8006a26 <_printf_i+0xfa>
 8006a02:	6821      	ldr	r1, [r4, #0]
 8006a04:	6833      	ldr	r3, [r6, #0]
 8006a06:	0608      	lsls	r0, r1, #24
 8006a08:	f853 5b04 	ldr.w	r5, [r3], #4
 8006a0c:	d402      	bmi.n	8006a14 <_printf_i+0xe8>
 8006a0e:	0649      	lsls	r1, r1, #25
 8006a10:	bf48      	it	mi
 8006a12:	b2ad      	uxthmi	r5, r5
 8006a14:	2f6f      	cmp	r7, #111	@ 0x6f
 8006a16:	4852      	ldr	r0, [pc, #328]	@ (8006b60 <_printf_i+0x234>)
 8006a18:	6033      	str	r3, [r6, #0]
 8006a1a:	bf14      	ite	ne
 8006a1c:	230a      	movne	r3, #10
 8006a1e:	2308      	moveq	r3, #8
 8006a20:	2100      	movs	r1, #0
 8006a22:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 8006a26:	6866      	ldr	r6, [r4, #4]
 8006a28:	60a6      	str	r6, [r4, #8]
 8006a2a:	2e00      	cmp	r6, #0
 8006a2c:	db05      	blt.n	8006a3a <_printf_i+0x10e>
 8006a2e:	6821      	ldr	r1, [r4, #0]
 8006a30:	432e      	orrs	r6, r5
 8006a32:	f021 0104 	bic.w	r1, r1, #4
 8006a36:	6021      	str	r1, [r4, #0]
 8006a38:	d04b      	beq.n	8006ad2 <_printf_i+0x1a6>
 8006a3a:	4616      	mov	r6, r2
 8006a3c:	fbb5 f1f3 	udiv	r1, r5, r3
 8006a40:	fb03 5711 	mls	r7, r3, r1, r5
 8006a44:	5dc7      	ldrb	r7, [r0, r7]
 8006a46:	f806 7d01 	strb.w	r7, [r6, #-1]!
 8006a4a:	462f      	mov	r7, r5
 8006a4c:	42bb      	cmp	r3, r7
 8006a4e:	460d      	mov	r5, r1
 8006a50:	d9f4      	bls.n	8006a3c <_printf_i+0x110>
 8006a52:	2b08      	cmp	r3, #8
 8006a54:	d10b      	bne.n	8006a6e <_printf_i+0x142>
 8006a56:	6823      	ldr	r3, [r4, #0]
 8006a58:	07df      	lsls	r7, r3, #31
 8006a5a:	d508      	bpl.n	8006a6e <_printf_i+0x142>
 8006a5c:	6923      	ldr	r3, [r4, #16]
 8006a5e:	6861      	ldr	r1, [r4, #4]
 8006a60:	4299      	cmp	r1, r3
 8006a62:	bfde      	ittt	le
 8006a64:	2330      	movle	r3, #48	@ 0x30
 8006a66:	f806 3c01 	strble.w	r3, [r6, #-1]
 8006a6a:	f106 36ff 	addle.w	r6, r6, #4294967295
 8006a6e:	1b92      	subs	r2, r2, r6
 8006a70:	6122      	str	r2, [r4, #16]
 8006a72:	f8cd a000 	str.w	sl, [sp]
 8006a76:	464b      	mov	r3, r9
 8006a78:	aa03      	add	r2, sp, #12
 8006a7a:	4621      	mov	r1, r4
 8006a7c:	4640      	mov	r0, r8
 8006a7e:	f7ff fee7 	bl	8006850 <_printf_common>
 8006a82:	3001      	adds	r0, #1
 8006a84:	d14a      	bne.n	8006b1c <_printf_i+0x1f0>
 8006a86:	f04f 30ff 	mov.w	r0, #4294967295
 8006a8a:	b004      	add	sp, #16
 8006a8c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8006a90:	6823      	ldr	r3, [r4, #0]
 8006a92:	f043 0320 	orr.w	r3, r3, #32
 8006a96:	6023      	str	r3, [r4, #0]
 8006a98:	4832      	ldr	r0, [pc, #200]	@ (8006b64 <_printf_i+0x238>)
 8006a9a:	2778      	movs	r7, #120	@ 0x78
 8006a9c:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 8006aa0:	6823      	ldr	r3, [r4, #0]
 8006aa2:	6831      	ldr	r1, [r6, #0]
 8006aa4:	061f      	lsls	r7, r3, #24
 8006aa6:	f851 5b04 	ldr.w	r5, [r1], #4
 8006aaa:	d402      	bmi.n	8006ab2 <_printf_i+0x186>
 8006aac:	065f      	lsls	r7, r3, #25
 8006aae:	bf48      	it	mi
 8006ab0:	b2ad      	uxthmi	r5, r5
 8006ab2:	6031      	str	r1, [r6, #0]
 8006ab4:	07d9      	lsls	r1, r3, #31
 8006ab6:	bf44      	itt	mi
 8006ab8:	f043 0320 	orrmi.w	r3, r3, #32
 8006abc:	6023      	strmi	r3, [r4, #0]
 8006abe:	b11d      	cbz	r5, 8006ac8 <_printf_i+0x19c>
 8006ac0:	2310      	movs	r3, #16
 8006ac2:	e7ad      	b.n	8006a20 <_printf_i+0xf4>
 8006ac4:	4826      	ldr	r0, [pc, #152]	@ (8006b60 <_printf_i+0x234>)
 8006ac6:	e7e9      	b.n	8006a9c <_printf_i+0x170>
 8006ac8:	6823      	ldr	r3, [r4, #0]
 8006aca:	f023 0320 	bic.w	r3, r3, #32
 8006ace:	6023      	str	r3, [r4, #0]
 8006ad0:	e7f6      	b.n	8006ac0 <_printf_i+0x194>
 8006ad2:	4616      	mov	r6, r2
 8006ad4:	e7bd      	b.n	8006a52 <_printf_i+0x126>
 8006ad6:	6833      	ldr	r3, [r6, #0]
 8006ad8:	6825      	ldr	r5, [r4, #0]
 8006ada:	6961      	ldr	r1, [r4, #20]
 8006adc:	1d18      	adds	r0, r3, #4
 8006ade:	6030      	str	r0, [r6, #0]
 8006ae0:	062e      	lsls	r6, r5, #24
 8006ae2:	681b      	ldr	r3, [r3, #0]
 8006ae4:	d501      	bpl.n	8006aea <_printf_i+0x1be>
 8006ae6:	6019      	str	r1, [r3, #0]
 8006ae8:	e002      	b.n	8006af0 <_printf_i+0x1c4>
 8006aea:	0668      	lsls	r0, r5, #25
 8006aec:	d5fb      	bpl.n	8006ae6 <_printf_i+0x1ba>
 8006aee:	8019      	strh	r1, [r3, #0]
 8006af0:	2300      	movs	r3, #0
 8006af2:	6123      	str	r3, [r4, #16]
 8006af4:	4616      	mov	r6, r2
 8006af6:	e7bc      	b.n	8006a72 <_printf_i+0x146>
 8006af8:	6833      	ldr	r3, [r6, #0]
 8006afa:	1d1a      	adds	r2, r3, #4
 8006afc:	6032      	str	r2, [r6, #0]
 8006afe:	681e      	ldr	r6, [r3, #0]
 8006b00:	6862      	ldr	r2, [r4, #4]
 8006b02:	2100      	movs	r1, #0
 8006b04:	4630      	mov	r0, r6
 8006b06:	f7f9 fb83 	bl	8000210 <memchr>
 8006b0a:	b108      	cbz	r0, 8006b10 <_printf_i+0x1e4>
 8006b0c:	1b80      	subs	r0, r0, r6
 8006b0e:	6060      	str	r0, [r4, #4]
 8006b10:	6863      	ldr	r3, [r4, #4]
 8006b12:	6123      	str	r3, [r4, #16]
 8006b14:	2300      	movs	r3, #0
 8006b16:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8006b1a:	e7aa      	b.n	8006a72 <_printf_i+0x146>
 8006b1c:	6923      	ldr	r3, [r4, #16]
 8006b1e:	4632      	mov	r2, r6
 8006b20:	4649      	mov	r1, r9
 8006b22:	4640      	mov	r0, r8
 8006b24:	47d0      	blx	sl
 8006b26:	3001      	adds	r0, #1
 8006b28:	d0ad      	beq.n	8006a86 <_printf_i+0x15a>
 8006b2a:	6823      	ldr	r3, [r4, #0]
 8006b2c:	079b      	lsls	r3, r3, #30
 8006b2e:	d413      	bmi.n	8006b58 <_printf_i+0x22c>
 8006b30:	68e0      	ldr	r0, [r4, #12]
 8006b32:	9b03      	ldr	r3, [sp, #12]
 8006b34:	4298      	cmp	r0, r3
 8006b36:	bfb8      	it	lt
 8006b38:	4618      	movlt	r0, r3
 8006b3a:	e7a6      	b.n	8006a8a <_printf_i+0x15e>
 8006b3c:	2301      	movs	r3, #1
 8006b3e:	4632      	mov	r2, r6
 8006b40:	4649      	mov	r1, r9
 8006b42:	4640      	mov	r0, r8
 8006b44:	47d0      	blx	sl
 8006b46:	3001      	adds	r0, #1
 8006b48:	d09d      	beq.n	8006a86 <_printf_i+0x15a>
 8006b4a:	3501      	adds	r5, #1
 8006b4c:	68e3      	ldr	r3, [r4, #12]
 8006b4e:	9903      	ldr	r1, [sp, #12]
 8006b50:	1a5b      	subs	r3, r3, r1
 8006b52:	42ab      	cmp	r3, r5
 8006b54:	dcf2      	bgt.n	8006b3c <_printf_i+0x210>
 8006b56:	e7eb      	b.n	8006b30 <_printf_i+0x204>
 8006b58:	2500      	movs	r5, #0
 8006b5a:	f104 0619 	add.w	r6, r4, #25
 8006b5e:	e7f5      	b.n	8006b4c <_printf_i+0x220>
 8006b60:	080092ad 	.word	0x080092ad
 8006b64:	080092be 	.word	0x080092be

08006b68 <std>:
 8006b68:	2300      	movs	r3, #0
 8006b6a:	b510      	push	{r4, lr}
 8006b6c:	4604      	mov	r4, r0
 8006b6e:	e9c0 3300 	strd	r3, r3, [r0]
 8006b72:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8006b76:	6083      	str	r3, [r0, #8]
 8006b78:	8181      	strh	r1, [r0, #12]
 8006b7a:	6643      	str	r3, [r0, #100]	@ 0x64
 8006b7c:	81c2      	strh	r2, [r0, #14]
 8006b7e:	6183      	str	r3, [r0, #24]
 8006b80:	4619      	mov	r1, r3
 8006b82:	2208      	movs	r2, #8
 8006b84:	305c      	adds	r0, #92	@ 0x5c
 8006b86:	f000 f92a 	bl	8006dde <memset>
 8006b8a:	4b0d      	ldr	r3, [pc, #52]	@ (8006bc0 <std+0x58>)
 8006b8c:	6263      	str	r3, [r4, #36]	@ 0x24
 8006b8e:	4b0d      	ldr	r3, [pc, #52]	@ (8006bc4 <std+0x5c>)
 8006b90:	62a3      	str	r3, [r4, #40]	@ 0x28
 8006b92:	4b0d      	ldr	r3, [pc, #52]	@ (8006bc8 <std+0x60>)
 8006b94:	62e3      	str	r3, [r4, #44]	@ 0x2c
 8006b96:	4b0d      	ldr	r3, [pc, #52]	@ (8006bcc <std+0x64>)
 8006b98:	6323      	str	r3, [r4, #48]	@ 0x30
 8006b9a:	4b0d      	ldr	r3, [pc, #52]	@ (8006bd0 <std+0x68>)
 8006b9c:	6224      	str	r4, [r4, #32]
 8006b9e:	429c      	cmp	r4, r3
 8006ba0:	d006      	beq.n	8006bb0 <std+0x48>
 8006ba2:	f103 0268 	add.w	r2, r3, #104	@ 0x68
 8006ba6:	4294      	cmp	r4, r2
 8006ba8:	d002      	beq.n	8006bb0 <std+0x48>
 8006baa:	33d0      	adds	r3, #208	@ 0xd0
 8006bac:	429c      	cmp	r4, r3
 8006bae:	d105      	bne.n	8006bbc <std+0x54>
 8006bb0:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 8006bb4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8006bb8:	f000 b98e 	b.w	8006ed8 <__retarget_lock_init_recursive>
 8006bbc:	bd10      	pop	{r4, pc}
 8006bbe:	bf00      	nop
 8006bc0:	08006d59 	.word	0x08006d59
 8006bc4:	08006d7b 	.word	0x08006d7b
 8006bc8:	08006db3 	.word	0x08006db3
 8006bcc:	08006dd7 	.word	0x08006dd7
 8006bd0:	2000057c 	.word	0x2000057c

08006bd4 <stdio_exit_handler>:
 8006bd4:	4a02      	ldr	r2, [pc, #8]	@ (8006be0 <stdio_exit_handler+0xc>)
 8006bd6:	4903      	ldr	r1, [pc, #12]	@ (8006be4 <stdio_exit_handler+0x10>)
 8006bd8:	4803      	ldr	r0, [pc, #12]	@ (8006be8 <stdio_exit_handler+0x14>)
 8006bda:	f000 b869 	b.w	8006cb0 <_fwalk_sglue>
 8006bde:	bf00      	nop
 8006be0:	2000003c 	.word	0x2000003c
 8006be4:	0800887d 	.word	0x0800887d
 8006be8:	2000004c 	.word	0x2000004c

08006bec <cleanup_stdio>:
 8006bec:	6841      	ldr	r1, [r0, #4]
 8006bee:	4b0c      	ldr	r3, [pc, #48]	@ (8006c20 <cleanup_stdio+0x34>)
 8006bf0:	4299      	cmp	r1, r3
 8006bf2:	b510      	push	{r4, lr}
 8006bf4:	4604      	mov	r4, r0
 8006bf6:	d001      	beq.n	8006bfc <cleanup_stdio+0x10>
 8006bf8:	f001 fe40 	bl	800887c <_fflush_r>
 8006bfc:	68a1      	ldr	r1, [r4, #8]
 8006bfe:	4b09      	ldr	r3, [pc, #36]	@ (8006c24 <cleanup_stdio+0x38>)
 8006c00:	4299      	cmp	r1, r3
 8006c02:	d002      	beq.n	8006c0a <cleanup_stdio+0x1e>
 8006c04:	4620      	mov	r0, r4
 8006c06:	f001 fe39 	bl	800887c <_fflush_r>
 8006c0a:	68e1      	ldr	r1, [r4, #12]
 8006c0c:	4b06      	ldr	r3, [pc, #24]	@ (8006c28 <cleanup_stdio+0x3c>)
 8006c0e:	4299      	cmp	r1, r3
 8006c10:	d004      	beq.n	8006c1c <cleanup_stdio+0x30>
 8006c12:	4620      	mov	r0, r4
 8006c14:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8006c18:	f001 be30 	b.w	800887c <_fflush_r>
 8006c1c:	bd10      	pop	{r4, pc}
 8006c1e:	bf00      	nop
 8006c20:	2000057c 	.word	0x2000057c
 8006c24:	200005e4 	.word	0x200005e4
 8006c28:	2000064c 	.word	0x2000064c

08006c2c <global_stdio_init.part.0>:
 8006c2c:	b510      	push	{r4, lr}
 8006c2e:	4b0b      	ldr	r3, [pc, #44]	@ (8006c5c <global_stdio_init.part.0+0x30>)
 8006c30:	4c0b      	ldr	r4, [pc, #44]	@ (8006c60 <global_stdio_init.part.0+0x34>)
 8006c32:	4a0c      	ldr	r2, [pc, #48]	@ (8006c64 <global_stdio_init.part.0+0x38>)
 8006c34:	601a      	str	r2, [r3, #0]
 8006c36:	4620      	mov	r0, r4
 8006c38:	2200      	movs	r2, #0
 8006c3a:	2104      	movs	r1, #4
 8006c3c:	f7ff ff94 	bl	8006b68 <std>
 8006c40:	f104 0068 	add.w	r0, r4, #104	@ 0x68
 8006c44:	2201      	movs	r2, #1
 8006c46:	2109      	movs	r1, #9
 8006c48:	f7ff ff8e 	bl	8006b68 <std>
 8006c4c:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
 8006c50:	2202      	movs	r2, #2
 8006c52:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8006c56:	2112      	movs	r1, #18
 8006c58:	f7ff bf86 	b.w	8006b68 <std>
 8006c5c:	200006b4 	.word	0x200006b4
 8006c60:	2000057c 	.word	0x2000057c
 8006c64:	08006bd5 	.word	0x08006bd5

08006c68 <__sfp_lock_acquire>:
 8006c68:	4801      	ldr	r0, [pc, #4]	@ (8006c70 <__sfp_lock_acquire+0x8>)
 8006c6a:	f000 b936 	b.w	8006eda <__retarget_lock_acquire_recursive>
 8006c6e:	bf00      	nop
 8006c70:	200006bd 	.word	0x200006bd

08006c74 <__sfp_lock_release>:
 8006c74:	4801      	ldr	r0, [pc, #4]	@ (8006c7c <__sfp_lock_release+0x8>)
 8006c76:	f000 b931 	b.w	8006edc <__retarget_lock_release_recursive>
 8006c7a:	bf00      	nop
 8006c7c:	200006bd 	.word	0x200006bd

08006c80 <__sinit>:
 8006c80:	b510      	push	{r4, lr}
 8006c82:	4604      	mov	r4, r0
 8006c84:	f7ff fff0 	bl	8006c68 <__sfp_lock_acquire>
 8006c88:	6a23      	ldr	r3, [r4, #32]
 8006c8a:	b11b      	cbz	r3, 8006c94 <__sinit+0x14>
 8006c8c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8006c90:	f7ff bff0 	b.w	8006c74 <__sfp_lock_release>
 8006c94:	4b04      	ldr	r3, [pc, #16]	@ (8006ca8 <__sinit+0x28>)
 8006c96:	6223      	str	r3, [r4, #32]
 8006c98:	4b04      	ldr	r3, [pc, #16]	@ (8006cac <__sinit+0x2c>)
 8006c9a:	681b      	ldr	r3, [r3, #0]
 8006c9c:	2b00      	cmp	r3, #0
 8006c9e:	d1f5      	bne.n	8006c8c <__sinit+0xc>
 8006ca0:	f7ff ffc4 	bl	8006c2c <global_stdio_init.part.0>
 8006ca4:	e7f2      	b.n	8006c8c <__sinit+0xc>
 8006ca6:	bf00      	nop
 8006ca8:	08006bed 	.word	0x08006bed
 8006cac:	200006b4 	.word	0x200006b4

08006cb0 <_fwalk_sglue>:
 8006cb0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8006cb4:	4607      	mov	r7, r0
 8006cb6:	4688      	mov	r8, r1
 8006cb8:	4614      	mov	r4, r2
 8006cba:	2600      	movs	r6, #0
 8006cbc:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8006cc0:	f1b9 0901 	subs.w	r9, r9, #1
 8006cc4:	d505      	bpl.n	8006cd2 <_fwalk_sglue+0x22>
 8006cc6:	6824      	ldr	r4, [r4, #0]
 8006cc8:	2c00      	cmp	r4, #0
 8006cca:	d1f7      	bne.n	8006cbc <_fwalk_sglue+0xc>
 8006ccc:	4630      	mov	r0, r6
 8006cce:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8006cd2:	89ab      	ldrh	r3, [r5, #12]
 8006cd4:	2b01      	cmp	r3, #1
 8006cd6:	d907      	bls.n	8006ce8 <_fwalk_sglue+0x38>
 8006cd8:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8006cdc:	3301      	adds	r3, #1
 8006cde:	d003      	beq.n	8006ce8 <_fwalk_sglue+0x38>
 8006ce0:	4629      	mov	r1, r5
 8006ce2:	4638      	mov	r0, r7
 8006ce4:	47c0      	blx	r8
 8006ce6:	4306      	orrs	r6, r0
 8006ce8:	3568      	adds	r5, #104	@ 0x68
 8006cea:	e7e9      	b.n	8006cc0 <_fwalk_sglue+0x10>

08006cec <sniprintf>:
 8006cec:	b40c      	push	{r2, r3}
 8006cee:	b530      	push	{r4, r5, lr}
 8006cf0:	4b18      	ldr	r3, [pc, #96]	@ (8006d54 <sniprintf+0x68>)
 8006cf2:	1e0c      	subs	r4, r1, #0
 8006cf4:	681d      	ldr	r5, [r3, #0]
 8006cf6:	b09d      	sub	sp, #116	@ 0x74
 8006cf8:	da08      	bge.n	8006d0c <sniprintf+0x20>
 8006cfa:	238b      	movs	r3, #139	@ 0x8b
 8006cfc:	602b      	str	r3, [r5, #0]
 8006cfe:	f04f 30ff 	mov.w	r0, #4294967295
 8006d02:	b01d      	add	sp, #116	@ 0x74
 8006d04:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8006d08:	b002      	add	sp, #8
 8006d0a:	4770      	bx	lr
 8006d0c:	f44f 7302 	mov.w	r3, #520	@ 0x208
 8006d10:	f8ad 3014 	strh.w	r3, [sp, #20]
 8006d14:	f04f 0300 	mov.w	r3, #0
 8006d18:	931b      	str	r3, [sp, #108]	@ 0x6c
 8006d1a:	bf14      	ite	ne
 8006d1c:	f104 33ff 	addne.w	r3, r4, #4294967295
 8006d20:	4623      	moveq	r3, r4
 8006d22:	9304      	str	r3, [sp, #16]
 8006d24:	9307      	str	r3, [sp, #28]
 8006d26:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 8006d2a:	9002      	str	r0, [sp, #8]
 8006d2c:	9006      	str	r0, [sp, #24]
 8006d2e:	f8ad 3016 	strh.w	r3, [sp, #22]
 8006d32:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 8006d34:	ab21      	add	r3, sp, #132	@ 0x84
 8006d36:	a902      	add	r1, sp, #8
 8006d38:	4628      	mov	r0, r5
 8006d3a:	9301      	str	r3, [sp, #4]
 8006d3c:	f001 fc1e 	bl	800857c <_svfiprintf_r>
 8006d40:	1c43      	adds	r3, r0, #1
 8006d42:	bfbc      	itt	lt
 8006d44:	238b      	movlt	r3, #139	@ 0x8b
 8006d46:	602b      	strlt	r3, [r5, #0]
 8006d48:	2c00      	cmp	r4, #0
 8006d4a:	d0da      	beq.n	8006d02 <sniprintf+0x16>
 8006d4c:	9b02      	ldr	r3, [sp, #8]
 8006d4e:	2200      	movs	r2, #0
 8006d50:	701a      	strb	r2, [r3, #0]
 8006d52:	e7d6      	b.n	8006d02 <sniprintf+0x16>
 8006d54:	20000048 	.word	0x20000048

08006d58 <__sread>:
 8006d58:	b510      	push	{r4, lr}
 8006d5a:	460c      	mov	r4, r1
 8006d5c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8006d60:	f000 f86c 	bl	8006e3c <_read_r>
 8006d64:	2800      	cmp	r0, #0
 8006d66:	bfab      	itete	ge
 8006d68:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
 8006d6a:	89a3      	ldrhlt	r3, [r4, #12]
 8006d6c:	181b      	addge	r3, r3, r0
 8006d6e:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
 8006d72:	bfac      	ite	ge
 8006d74:	6563      	strge	r3, [r4, #84]	@ 0x54
 8006d76:	81a3      	strhlt	r3, [r4, #12]
 8006d78:	bd10      	pop	{r4, pc}

08006d7a <__swrite>:
 8006d7a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8006d7e:	461f      	mov	r7, r3
 8006d80:	898b      	ldrh	r3, [r1, #12]
 8006d82:	05db      	lsls	r3, r3, #23
 8006d84:	4605      	mov	r5, r0
 8006d86:	460c      	mov	r4, r1
 8006d88:	4616      	mov	r6, r2
 8006d8a:	d505      	bpl.n	8006d98 <__swrite+0x1e>
 8006d8c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8006d90:	2302      	movs	r3, #2
 8006d92:	2200      	movs	r2, #0
 8006d94:	f000 f840 	bl	8006e18 <_lseek_r>
 8006d98:	89a3      	ldrh	r3, [r4, #12]
 8006d9a:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8006d9e:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 8006da2:	81a3      	strh	r3, [r4, #12]
 8006da4:	4632      	mov	r2, r6
 8006da6:	463b      	mov	r3, r7
 8006da8:	4628      	mov	r0, r5
 8006daa:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8006dae:	f000 b857 	b.w	8006e60 <_write_r>

08006db2 <__sseek>:
 8006db2:	b510      	push	{r4, lr}
 8006db4:	460c      	mov	r4, r1
 8006db6:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8006dba:	f000 f82d 	bl	8006e18 <_lseek_r>
 8006dbe:	1c43      	adds	r3, r0, #1
 8006dc0:	89a3      	ldrh	r3, [r4, #12]
 8006dc2:	bf15      	itete	ne
 8006dc4:	6560      	strne	r0, [r4, #84]	@ 0x54
 8006dc6:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
 8006dca:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
 8006dce:	81a3      	strheq	r3, [r4, #12]
 8006dd0:	bf18      	it	ne
 8006dd2:	81a3      	strhne	r3, [r4, #12]
 8006dd4:	bd10      	pop	{r4, pc}

08006dd6 <__sclose>:
 8006dd6:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8006dda:	f000 b80d 	b.w	8006df8 <_close_r>

08006dde <memset>:
 8006dde:	4402      	add	r2, r0
 8006de0:	4603      	mov	r3, r0
 8006de2:	4293      	cmp	r3, r2
 8006de4:	d100      	bne.n	8006de8 <memset+0xa>
 8006de6:	4770      	bx	lr
 8006de8:	f803 1b01 	strb.w	r1, [r3], #1
 8006dec:	e7f9      	b.n	8006de2 <memset+0x4>
	...

08006df0 <_localeconv_r>:
 8006df0:	4800      	ldr	r0, [pc, #0]	@ (8006df4 <_localeconv_r+0x4>)
 8006df2:	4770      	bx	lr
 8006df4:	20000188 	.word	0x20000188

08006df8 <_close_r>:
 8006df8:	b538      	push	{r3, r4, r5, lr}
 8006dfa:	4d06      	ldr	r5, [pc, #24]	@ (8006e14 <_close_r+0x1c>)
 8006dfc:	2300      	movs	r3, #0
 8006dfe:	4604      	mov	r4, r0
 8006e00:	4608      	mov	r0, r1
 8006e02:	602b      	str	r3, [r5, #0]
 8006e04:	f7fb f988 	bl	8002118 <_close>
 8006e08:	1c43      	adds	r3, r0, #1
 8006e0a:	d102      	bne.n	8006e12 <_close_r+0x1a>
 8006e0c:	682b      	ldr	r3, [r5, #0]
 8006e0e:	b103      	cbz	r3, 8006e12 <_close_r+0x1a>
 8006e10:	6023      	str	r3, [r4, #0]
 8006e12:	bd38      	pop	{r3, r4, r5, pc}
 8006e14:	200006b8 	.word	0x200006b8

08006e18 <_lseek_r>:
 8006e18:	b538      	push	{r3, r4, r5, lr}
 8006e1a:	4d07      	ldr	r5, [pc, #28]	@ (8006e38 <_lseek_r+0x20>)
 8006e1c:	4604      	mov	r4, r0
 8006e1e:	4608      	mov	r0, r1
 8006e20:	4611      	mov	r1, r2
 8006e22:	2200      	movs	r2, #0
 8006e24:	602a      	str	r2, [r5, #0]
 8006e26:	461a      	mov	r2, r3
 8006e28:	f7fb f99d 	bl	8002166 <_lseek>
 8006e2c:	1c43      	adds	r3, r0, #1
 8006e2e:	d102      	bne.n	8006e36 <_lseek_r+0x1e>
 8006e30:	682b      	ldr	r3, [r5, #0]
 8006e32:	b103      	cbz	r3, 8006e36 <_lseek_r+0x1e>
 8006e34:	6023      	str	r3, [r4, #0]
 8006e36:	bd38      	pop	{r3, r4, r5, pc}
 8006e38:	200006b8 	.word	0x200006b8

08006e3c <_read_r>:
 8006e3c:	b538      	push	{r3, r4, r5, lr}
 8006e3e:	4d07      	ldr	r5, [pc, #28]	@ (8006e5c <_read_r+0x20>)
 8006e40:	4604      	mov	r4, r0
 8006e42:	4608      	mov	r0, r1
 8006e44:	4611      	mov	r1, r2
 8006e46:	2200      	movs	r2, #0
 8006e48:	602a      	str	r2, [r5, #0]
 8006e4a:	461a      	mov	r2, r3
 8006e4c:	f7fb f92b 	bl	80020a6 <_read>
 8006e50:	1c43      	adds	r3, r0, #1
 8006e52:	d102      	bne.n	8006e5a <_read_r+0x1e>
 8006e54:	682b      	ldr	r3, [r5, #0]
 8006e56:	b103      	cbz	r3, 8006e5a <_read_r+0x1e>
 8006e58:	6023      	str	r3, [r4, #0]
 8006e5a:	bd38      	pop	{r3, r4, r5, pc}
 8006e5c:	200006b8 	.word	0x200006b8

08006e60 <_write_r>:
 8006e60:	b538      	push	{r3, r4, r5, lr}
 8006e62:	4d07      	ldr	r5, [pc, #28]	@ (8006e80 <_write_r+0x20>)
 8006e64:	4604      	mov	r4, r0
 8006e66:	4608      	mov	r0, r1
 8006e68:	4611      	mov	r1, r2
 8006e6a:	2200      	movs	r2, #0
 8006e6c:	602a      	str	r2, [r5, #0]
 8006e6e:	461a      	mov	r2, r3
 8006e70:	f7fb f936 	bl	80020e0 <_write>
 8006e74:	1c43      	adds	r3, r0, #1
 8006e76:	d102      	bne.n	8006e7e <_write_r+0x1e>
 8006e78:	682b      	ldr	r3, [r5, #0]
 8006e7a:	b103      	cbz	r3, 8006e7e <_write_r+0x1e>
 8006e7c:	6023      	str	r3, [r4, #0]
 8006e7e:	bd38      	pop	{r3, r4, r5, pc}
 8006e80:	200006b8 	.word	0x200006b8

08006e84 <__errno>:
 8006e84:	4b01      	ldr	r3, [pc, #4]	@ (8006e8c <__errno+0x8>)
 8006e86:	6818      	ldr	r0, [r3, #0]
 8006e88:	4770      	bx	lr
 8006e8a:	bf00      	nop
 8006e8c:	20000048 	.word	0x20000048

08006e90 <__libc_init_array>:
 8006e90:	b570      	push	{r4, r5, r6, lr}
 8006e92:	4d0d      	ldr	r5, [pc, #52]	@ (8006ec8 <__libc_init_array+0x38>)
 8006e94:	4c0d      	ldr	r4, [pc, #52]	@ (8006ecc <__libc_init_array+0x3c>)
 8006e96:	1b64      	subs	r4, r4, r5
 8006e98:	10a4      	asrs	r4, r4, #2
 8006e9a:	2600      	movs	r6, #0
 8006e9c:	42a6      	cmp	r6, r4
 8006e9e:	d109      	bne.n	8006eb4 <__libc_init_array+0x24>
 8006ea0:	4d0b      	ldr	r5, [pc, #44]	@ (8006ed0 <__libc_init_array+0x40>)
 8006ea2:	4c0c      	ldr	r4, [pc, #48]	@ (8006ed4 <__libc_init_array+0x44>)
 8006ea4:	f002 f86a 	bl	8008f7c <_init>
 8006ea8:	1b64      	subs	r4, r4, r5
 8006eaa:	10a4      	asrs	r4, r4, #2
 8006eac:	2600      	movs	r6, #0
 8006eae:	42a6      	cmp	r6, r4
 8006eb0:	d105      	bne.n	8006ebe <__libc_init_array+0x2e>
 8006eb2:	bd70      	pop	{r4, r5, r6, pc}
 8006eb4:	f855 3b04 	ldr.w	r3, [r5], #4
 8006eb8:	4798      	blx	r3
 8006eba:	3601      	adds	r6, #1
 8006ebc:	e7ee      	b.n	8006e9c <__libc_init_array+0xc>
 8006ebe:	f855 3b04 	ldr.w	r3, [r5], #4
 8006ec2:	4798      	blx	r3
 8006ec4:	3601      	adds	r6, #1
 8006ec6:	e7f2      	b.n	8006eae <__libc_init_array+0x1e>
 8006ec8:	08009604 	.word	0x08009604
 8006ecc:	08009604 	.word	0x08009604
 8006ed0:	08009604 	.word	0x08009604
 8006ed4:	08009608 	.word	0x08009608

08006ed8 <__retarget_lock_init_recursive>:
 8006ed8:	4770      	bx	lr

08006eda <__retarget_lock_acquire_recursive>:
 8006eda:	4770      	bx	lr

08006edc <__retarget_lock_release_recursive>:
 8006edc:	4770      	bx	lr
	...

08006ee0 <__assert_func>:
 8006ee0:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8006ee2:	4614      	mov	r4, r2
 8006ee4:	461a      	mov	r2, r3
 8006ee6:	4b09      	ldr	r3, [pc, #36]	@ (8006f0c <__assert_func+0x2c>)
 8006ee8:	681b      	ldr	r3, [r3, #0]
 8006eea:	4605      	mov	r5, r0
 8006eec:	68d8      	ldr	r0, [r3, #12]
 8006eee:	b14c      	cbz	r4, 8006f04 <__assert_func+0x24>
 8006ef0:	4b07      	ldr	r3, [pc, #28]	@ (8006f10 <__assert_func+0x30>)
 8006ef2:	9100      	str	r1, [sp, #0]
 8006ef4:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8006ef8:	4906      	ldr	r1, [pc, #24]	@ (8006f14 <__assert_func+0x34>)
 8006efa:	462b      	mov	r3, r5
 8006efc:	f001 fce6 	bl	80088cc <fiprintf>
 8006f00:	f001 fd2e 	bl	8008960 <abort>
 8006f04:	4b04      	ldr	r3, [pc, #16]	@ (8006f18 <__assert_func+0x38>)
 8006f06:	461c      	mov	r4, r3
 8006f08:	e7f3      	b.n	8006ef2 <__assert_func+0x12>
 8006f0a:	bf00      	nop
 8006f0c:	20000048 	.word	0x20000048
 8006f10:	080092cf 	.word	0x080092cf
 8006f14:	080092dc 	.word	0x080092dc
 8006f18:	0800930a 	.word	0x0800930a

08006f1c <quorem>:
 8006f1c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006f20:	6903      	ldr	r3, [r0, #16]
 8006f22:	690c      	ldr	r4, [r1, #16]
 8006f24:	42a3      	cmp	r3, r4
 8006f26:	4607      	mov	r7, r0
 8006f28:	db7e      	blt.n	8007028 <quorem+0x10c>
 8006f2a:	3c01      	subs	r4, #1
 8006f2c:	f101 0814 	add.w	r8, r1, #20
 8006f30:	00a3      	lsls	r3, r4, #2
 8006f32:	f100 0514 	add.w	r5, r0, #20
 8006f36:	9300      	str	r3, [sp, #0]
 8006f38:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 8006f3c:	9301      	str	r3, [sp, #4]
 8006f3e:	f858 3024 	ldr.w	r3, [r8, r4, lsl #2]
 8006f42:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 8006f46:	3301      	adds	r3, #1
 8006f48:	429a      	cmp	r2, r3
 8006f4a:	eb08 0984 	add.w	r9, r8, r4, lsl #2
 8006f4e:	fbb2 f6f3 	udiv	r6, r2, r3
 8006f52:	d32e      	bcc.n	8006fb2 <quorem+0x96>
 8006f54:	f04f 0a00 	mov.w	sl, #0
 8006f58:	46c4      	mov	ip, r8
 8006f5a:	46ae      	mov	lr, r5
 8006f5c:	46d3      	mov	fp, sl
 8006f5e:	f85c 3b04 	ldr.w	r3, [ip], #4
 8006f62:	b298      	uxth	r0, r3
 8006f64:	fb06 a000 	mla	r0, r6, r0, sl
 8006f68:	0c02      	lsrs	r2, r0, #16
 8006f6a:	0c1b      	lsrs	r3, r3, #16
 8006f6c:	fb06 2303 	mla	r3, r6, r3, r2
 8006f70:	f8de 2000 	ldr.w	r2, [lr]
 8006f74:	b280      	uxth	r0, r0
 8006f76:	b292      	uxth	r2, r2
 8006f78:	1a12      	subs	r2, r2, r0
 8006f7a:	445a      	add	r2, fp
 8006f7c:	f8de 0000 	ldr.w	r0, [lr]
 8006f80:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 8006f84:	b29b      	uxth	r3, r3
 8006f86:	ebc3 4322 	rsb	r3, r3, r2, asr #16
 8006f8a:	eb03 4310 	add.w	r3, r3, r0, lsr #16
 8006f8e:	b292      	uxth	r2, r2
 8006f90:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
 8006f94:	45e1      	cmp	r9, ip
 8006f96:	f84e 2b04 	str.w	r2, [lr], #4
 8006f9a:	ea4f 4b23 	mov.w	fp, r3, asr #16
 8006f9e:	d2de      	bcs.n	8006f5e <quorem+0x42>
 8006fa0:	9b00      	ldr	r3, [sp, #0]
 8006fa2:	58eb      	ldr	r3, [r5, r3]
 8006fa4:	b92b      	cbnz	r3, 8006fb2 <quorem+0x96>
 8006fa6:	9b01      	ldr	r3, [sp, #4]
 8006fa8:	3b04      	subs	r3, #4
 8006faa:	429d      	cmp	r5, r3
 8006fac:	461a      	mov	r2, r3
 8006fae:	d32f      	bcc.n	8007010 <quorem+0xf4>
 8006fb0:	613c      	str	r4, [r7, #16]
 8006fb2:	4638      	mov	r0, r7
 8006fb4:	f001 f97e 	bl	80082b4 <__mcmp>
 8006fb8:	2800      	cmp	r0, #0
 8006fba:	db25      	blt.n	8007008 <quorem+0xec>
 8006fbc:	4629      	mov	r1, r5
 8006fbe:	2000      	movs	r0, #0
 8006fc0:	f858 2b04 	ldr.w	r2, [r8], #4
 8006fc4:	f8d1 c000 	ldr.w	ip, [r1]
 8006fc8:	fa1f fe82 	uxth.w	lr, r2
 8006fcc:	fa1f f38c 	uxth.w	r3, ip
 8006fd0:	eba3 030e 	sub.w	r3, r3, lr
 8006fd4:	4403      	add	r3, r0
 8006fd6:	0c12      	lsrs	r2, r2, #16
 8006fd8:	ebc2 4223 	rsb	r2, r2, r3, asr #16
 8006fdc:	eb02 421c 	add.w	r2, r2, ip, lsr #16
 8006fe0:	b29b      	uxth	r3, r3
 8006fe2:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8006fe6:	45c1      	cmp	r9, r8
 8006fe8:	f841 3b04 	str.w	r3, [r1], #4
 8006fec:	ea4f 4022 	mov.w	r0, r2, asr #16
 8006ff0:	d2e6      	bcs.n	8006fc0 <quorem+0xa4>
 8006ff2:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 8006ff6:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 8006ffa:	b922      	cbnz	r2, 8007006 <quorem+0xea>
 8006ffc:	3b04      	subs	r3, #4
 8006ffe:	429d      	cmp	r5, r3
 8007000:	461a      	mov	r2, r3
 8007002:	d30b      	bcc.n	800701c <quorem+0x100>
 8007004:	613c      	str	r4, [r7, #16]
 8007006:	3601      	adds	r6, #1
 8007008:	4630      	mov	r0, r6
 800700a:	b003      	add	sp, #12
 800700c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8007010:	6812      	ldr	r2, [r2, #0]
 8007012:	3b04      	subs	r3, #4
 8007014:	2a00      	cmp	r2, #0
 8007016:	d1cb      	bne.n	8006fb0 <quorem+0x94>
 8007018:	3c01      	subs	r4, #1
 800701a:	e7c6      	b.n	8006faa <quorem+0x8e>
 800701c:	6812      	ldr	r2, [r2, #0]
 800701e:	3b04      	subs	r3, #4
 8007020:	2a00      	cmp	r2, #0
 8007022:	d1ef      	bne.n	8007004 <quorem+0xe8>
 8007024:	3c01      	subs	r4, #1
 8007026:	e7ea      	b.n	8006ffe <quorem+0xe2>
 8007028:	2000      	movs	r0, #0
 800702a:	e7ee      	b.n	800700a <quorem+0xee>
 800702c:	0000      	movs	r0, r0
	...

08007030 <_dtoa_r>:
 8007030:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007034:	69c7      	ldr	r7, [r0, #28]
 8007036:	b097      	sub	sp, #92	@ 0x5c
 8007038:	ed8d 0b04 	vstr	d0, [sp, #16]
 800703c:	ec55 4b10 	vmov	r4, r5, d0
 8007040:	9e20      	ldr	r6, [sp, #128]	@ 0x80
 8007042:	9107      	str	r1, [sp, #28]
 8007044:	4681      	mov	r9, r0
 8007046:	920c      	str	r2, [sp, #48]	@ 0x30
 8007048:	9311      	str	r3, [sp, #68]	@ 0x44
 800704a:	b97f      	cbnz	r7, 800706c <_dtoa_r+0x3c>
 800704c:	2010      	movs	r0, #16
 800704e:	f000 fe09 	bl	8007c64 <malloc>
 8007052:	4602      	mov	r2, r0
 8007054:	f8c9 001c 	str.w	r0, [r9, #28]
 8007058:	b920      	cbnz	r0, 8007064 <_dtoa_r+0x34>
 800705a:	4ba9      	ldr	r3, [pc, #676]	@ (8007300 <_dtoa_r+0x2d0>)
 800705c:	21ef      	movs	r1, #239	@ 0xef
 800705e:	48a9      	ldr	r0, [pc, #676]	@ (8007304 <_dtoa_r+0x2d4>)
 8007060:	f7ff ff3e 	bl	8006ee0 <__assert_func>
 8007064:	e9c0 7701 	strd	r7, r7, [r0, #4]
 8007068:	6007      	str	r7, [r0, #0]
 800706a:	60c7      	str	r7, [r0, #12]
 800706c:	f8d9 301c 	ldr.w	r3, [r9, #28]
 8007070:	6819      	ldr	r1, [r3, #0]
 8007072:	b159      	cbz	r1, 800708c <_dtoa_r+0x5c>
 8007074:	685a      	ldr	r2, [r3, #4]
 8007076:	604a      	str	r2, [r1, #4]
 8007078:	2301      	movs	r3, #1
 800707a:	4093      	lsls	r3, r2
 800707c:	608b      	str	r3, [r1, #8]
 800707e:	4648      	mov	r0, r9
 8007080:	f000 fee6 	bl	8007e50 <_Bfree>
 8007084:	f8d9 301c 	ldr.w	r3, [r9, #28]
 8007088:	2200      	movs	r2, #0
 800708a:	601a      	str	r2, [r3, #0]
 800708c:	1e2b      	subs	r3, r5, #0
 800708e:	bfb9      	ittee	lt
 8007090:	f023 4300 	biclt.w	r3, r3, #2147483648	@ 0x80000000
 8007094:	9305      	strlt	r3, [sp, #20]
 8007096:	2300      	movge	r3, #0
 8007098:	6033      	strge	r3, [r6, #0]
 800709a:	9f05      	ldr	r7, [sp, #20]
 800709c:	4b9a      	ldr	r3, [pc, #616]	@ (8007308 <_dtoa_r+0x2d8>)
 800709e:	bfbc      	itt	lt
 80070a0:	2201      	movlt	r2, #1
 80070a2:	6032      	strlt	r2, [r6, #0]
 80070a4:	43bb      	bics	r3, r7
 80070a6:	d112      	bne.n	80070ce <_dtoa_r+0x9e>
 80070a8:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 80070aa:	f242 730f 	movw	r3, #9999	@ 0x270f
 80070ae:	6013      	str	r3, [r2, #0]
 80070b0:	f3c7 0313 	ubfx	r3, r7, #0, #20
 80070b4:	4323      	orrs	r3, r4
 80070b6:	f000 855a 	beq.w	8007b6e <_dtoa_r+0xb3e>
 80070ba:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 80070bc:	f8df a25c 	ldr.w	sl, [pc, #604]	@ 800731c <_dtoa_r+0x2ec>
 80070c0:	2b00      	cmp	r3, #0
 80070c2:	f000 855c 	beq.w	8007b7e <_dtoa_r+0xb4e>
 80070c6:	f10a 0303 	add.w	r3, sl, #3
 80070ca:	f000 bd56 	b.w	8007b7a <_dtoa_r+0xb4a>
 80070ce:	ed9d 7b04 	vldr	d7, [sp, #16]
 80070d2:	2200      	movs	r2, #0
 80070d4:	ec51 0b17 	vmov	r0, r1, d7
 80070d8:	2300      	movs	r3, #0
 80070da:	ed8d 7b0a 	vstr	d7, [sp, #40]	@ 0x28
 80070de:	f7f9 fd13 	bl	8000b08 <__aeabi_dcmpeq>
 80070e2:	4680      	mov	r8, r0
 80070e4:	b158      	cbz	r0, 80070fe <_dtoa_r+0xce>
 80070e6:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 80070e8:	2301      	movs	r3, #1
 80070ea:	6013      	str	r3, [r2, #0]
 80070ec:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 80070ee:	b113      	cbz	r3, 80070f6 <_dtoa_r+0xc6>
 80070f0:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 80070f2:	4b86      	ldr	r3, [pc, #536]	@ (800730c <_dtoa_r+0x2dc>)
 80070f4:	6013      	str	r3, [r2, #0]
 80070f6:	f8df a228 	ldr.w	sl, [pc, #552]	@ 8007320 <_dtoa_r+0x2f0>
 80070fa:	f000 bd40 	b.w	8007b7e <_dtoa_r+0xb4e>
 80070fe:	ed9d 0b0a 	vldr	d0, [sp, #40]	@ 0x28
 8007102:	aa14      	add	r2, sp, #80	@ 0x50
 8007104:	a915      	add	r1, sp, #84	@ 0x54
 8007106:	4648      	mov	r0, r9
 8007108:	f001 f984 	bl	8008414 <__d2b>
 800710c:	f3c7 560a 	ubfx	r6, r7, #20, #11
 8007110:	9002      	str	r0, [sp, #8]
 8007112:	2e00      	cmp	r6, #0
 8007114:	d078      	beq.n	8007208 <_dtoa_r+0x1d8>
 8007116:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8007118:	f8cd 8048 	str.w	r8, [sp, #72]	@ 0x48
 800711c:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8007120:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	@ 0x28
 8007124:	f043 537f 	orr.w	r3, r3, #1069547520	@ 0x3fc00000
 8007128:	f443 1340 	orr.w	r3, r3, #3145728	@ 0x300000
 800712c:	f2a6 36ff 	subw	r6, r6, #1023	@ 0x3ff
 8007130:	4619      	mov	r1, r3
 8007132:	2200      	movs	r2, #0
 8007134:	4b76      	ldr	r3, [pc, #472]	@ (8007310 <_dtoa_r+0x2e0>)
 8007136:	f7f9 f8c7 	bl	80002c8 <__aeabi_dsub>
 800713a:	a36b      	add	r3, pc, #428	@ (adr r3, 80072e8 <_dtoa_r+0x2b8>)
 800713c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007140:	f7f9 fa7a 	bl	8000638 <__aeabi_dmul>
 8007144:	a36a      	add	r3, pc, #424	@ (adr r3, 80072f0 <_dtoa_r+0x2c0>)
 8007146:	e9d3 2300 	ldrd	r2, r3, [r3]
 800714a:	f7f9 f8bf 	bl	80002cc <__adddf3>
 800714e:	4604      	mov	r4, r0
 8007150:	4630      	mov	r0, r6
 8007152:	460d      	mov	r5, r1
 8007154:	f7f9 fa06 	bl	8000564 <__aeabi_i2d>
 8007158:	a367      	add	r3, pc, #412	@ (adr r3, 80072f8 <_dtoa_r+0x2c8>)
 800715a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800715e:	f7f9 fa6b 	bl	8000638 <__aeabi_dmul>
 8007162:	4602      	mov	r2, r0
 8007164:	460b      	mov	r3, r1
 8007166:	4620      	mov	r0, r4
 8007168:	4629      	mov	r1, r5
 800716a:	f7f9 f8af 	bl	80002cc <__adddf3>
 800716e:	4604      	mov	r4, r0
 8007170:	460d      	mov	r5, r1
 8007172:	f7f9 fd11 	bl	8000b98 <__aeabi_d2iz>
 8007176:	2200      	movs	r2, #0
 8007178:	4607      	mov	r7, r0
 800717a:	2300      	movs	r3, #0
 800717c:	4620      	mov	r0, r4
 800717e:	4629      	mov	r1, r5
 8007180:	f7f9 fccc 	bl	8000b1c <__aeabi_dcmplt>
 8007184:	b140      	cbz	r0, 8007198 <_dtoa_r+0x168>
 8007186:	4638      	mov	r0, r7
 8007188:	f7f9 f9ec 	bl	8000564 <__aeabi_i2d>
 800718c:	4622      	mov	r2, r4
 800718e:	462b      	mov	r3, r5
 8007190:	f7f9 fcba 	bl	8000b08 <__aeabi_dcmpeq>
 8007194:	b900      	cbnz	r0, 8007198 <_dtoa_r+0x168>
 8007196:	3f01      	subs	r7, #1
 8007198:	2f16      	cmp	r7, #22
 800719a:	d852      	bhi.n	8007242 <_dtoa_r+0x212>
 800719c:	4b5d      	ldr	r3, [pc, #372]	@ (8007314 <_dtoa_r+0x2e4>)
 800719e:	eb03 03c7 	add.w	r3, r3, r7, lsl #3
 80071a2:	e9d3 2300 	ldrd	r2, r3, [r3]
 80071a6:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	@ 0x28
 80071aa:	f7f9 fcb7 	bl	8000b1c <__aeabi_dcmplt>
 80071ae:	2800      	cmp	r0, #0
 80071b0:	d049      	beq.n	8007246 <_dtoa_r+0x216>
 80071b2:	3f01      	subs	r7, #1
 80071b4:	2300      	movs	r3, #0
 80071b6:	9310      	str	r3, [sp, #64]	@ 0x40
 80071b8:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 80071ba:	1b9b      	subs	r3, r3, r6
 80071bc:	1e5a      	subs	r2, r3, #1
 80071be:	bf45      	ittet	mi
 80071c0:	f1c3 0301 	rsbmi	r3, r3, #1
 80071c4:	9300      	strmi	r3, [sp, #0]
 80071c6:	2300      	movpl	r3, #0
 80071c8:	2300      	movmi	r3, #0
 80071ca:	9206      	str	r2, [sp, #24]
 80071cc:	bf54      	ite	pl
 80071ce:	9300      	strpl	r3, [sp, #0]
 80071d0:	9306      	strmi	r3, [sp, #24]
 80071d2:	2f00      	cmp	r7, #0
 80071d4:	db39      	blt.n	800724a <_dtoa_r+0x21a>
 80071d6:	9b06      	ldr	r3, [sp, #24]
 80071d8:	970d      	str	r7, [sp, #52]	@ 0x34
 80071da:	443b      	add	r3, r7
 80071dc:	9306      	str	r3, [sp, #24]
 80071de:	2300      	movs	r3, #0
 80071e0:	9308      	str	r3, [sp, #32]
 80071e2:	9b07      	ldr	r3, [sp, #28]
 80071e4:	2b09      	cmp	r3, #9
 80071e6:	d863      	bhi.n	80072b0 <_dtoa_r+0x280>
 80071e8:	2b05      	cmp	r3, #5
 80071ea:	bfc4      	itt	gt
 80071ec:	3b04      	subgt	r3, #4
 80071ee:	9307      	strgt	r3, [sp, #28]
 80071f0:	9b07      	ldr	r3, [sp, #28]
 80071f2:	f1a3 0302 	sub.w	r3, r3, #2
 80071f6:	bfcc      	ite	gt
 80071f8:	2400      	movgt	r4, #0
 80071fa:	2401      	movle	r4, #1
 80071fc:	2b03      	cmp	r3, #3
 80071fe:	d863      	bhi.n	80072c8 <_dtoa_r+0x298>
 8007200:	e8df f003 	tbb	[pc, r3]
 8007204:	2b375452 	.word	0x2b375452
 8007208:	e9dd 6314 	ldrd	r6, r3, [sp, #80]	@ 0x50
 800720c:	441e      	add	r6, r3
 800720e:	f206 4332 	addw	r3, r6, #1074	@ 0x432
 8007212:	2b20      	cmp	r3, #32
 8007214:	bfc1      	itttt	gt
 8007216:	f1c3 0340 	rsbgt	r3, r3, #64	@ 0x40
 800721a:	409f      	lslgt	r7, r3
 800721c:	f206 4312 	addwgt	r3, r6, #1042	@ 0x412
 8007220:	fa24 f303 	lsrgt.w	r3, r4, r3
 8007224:	bfd6      	itet	le
 8007226:	f1c3 0320 	rsble	r3, r3, #32
 800722a:	ea47 0003 	orrgt.w	r0, r7, r3
 800722e:	fa04 f003 	lslle.w	r0, r4, r3
 8007232:	f7f9 f987 	bl	8000544 <__aeabi_ui2d>
 8007236:	2201      	movs	r2, #1
 8007238:	f1a1 73f8 	sub.w	r3, r1, #32505856	@ 0x1f00000
 800723c:	3e01      	subs	r6, #1
 800723e:	9212      	str	r2, [sp, #72]	@ 0x48
 8007240:	e776      	b.n	8007130 <_dtoa_r+0x100>
 8007242:	2301      	movs	r3, #1
 8007244:	e7b7      	b.n	80071b6 <_dtoa_r+0x186>
 8007246:	9010      	str	r0, [sp, #64]	@ 0x40
 8007248:	e7b6      	b.n	80071b8 <_dtoa_r+0x188>
 800724a:	9b00      	ldr	r3, [sp, #0]
 800724c:	1bdb      	subs	r3, r3, r7
 800724e:	9300      	str	r3, [sp, #0]
 8007250:	427b      	negs	r3, r7
 8007252:	9308      	str	r3, [sp, #32]
 8007254:	2300      	movs	r3, #0
 8007256:	930d      	str	r3, [sp, #52]	@ 0x34
 8007258:	e7c3      	b.n	80071e2 <_dtoa_r+0x1b2>
 800725a:	2301      	movs	r3, #1
 800725c:	9309      	str	r3, [sp, #36]	@ 0x24
 800725e:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8007260:	eb07 0b03 	add.w	fp, r7, r3
 8007264:	f10b 0301 	add.w	r3, fp, #1
 8007268:	2b01      	cmp	r3, #1
 800726a:	9303      	str	r3, [sp, #12]
 800726c:	bfb8      	it	lt
 800726e:	2301      	movlt	r3, #1
 8007270:	e006      	b.n	8007280 <_dtoa_r+0x250>
 8007272:	2301      	movs	r3, #1
 8007274:	9309      	str	r3, [sp, #36]	@ 0x24
 8007276:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8007278:	2b00      	cmp	r3, #0
 800727a:	dd28      	ble.n	80072ce <_dtoa_r+0x29e>
 800727c:	469b      	mov	fp, r3
 800727e:	9303      	str	r3, [sp, #12]
 8007280:	f8d9 001c 	ldr.w	r0, [r9, #28]
 8007284:	2100      	movs	r1, #0
 8007286:	2204      	movs	r2, #4
 8007288:	f102 0514 	add.w	r5, r2, #20
 800728c:	429d      	cmp	r5, r3
 800728e:	d926      	bls.n	80072de <_dtoa_r+0x2ae>
 8007290:	6041      	str	r1, [r0, #4]
 8007292:	4648      	mov	r0, r9
 8007294:	f000 fd9c 	bl	8007dd0 <_Balloc>
 8007298:	4682      	mov	sl, r0
 800729a:	2800      	cmp	r0, #0
 800729c:	d142      	bne.n	8007324 <_dtoa_r+0x2f4>
 800729e:	4b1e      	ldr	r3, [pc, #120]	@ (8007318 <_dtoa_r+0x2e8>)
 80072a0:	4602      	mov	r2, r0
 80072a2:	f240 11af 	movw	r1, #431	@ 0x1af
 80072a6:	e6da      	b.n	800705e <_dtoa_r+0x2e>
 80072a8:	2300      	movs	r3, #0
 80072aa:	e7e3      	b.n	8007274 <_dtoa_r+0x244>
 80072ac:	2300      	movs	r3, #0
 80072ae:	e7d5      	b.n	800725c <_dtoa_r+0x22c>
 80072b0:	2401      	movs	r4, #1
 80072b2:	2300      	movs	r3, #0
 80072b4:	9307      	str	r3, [sp, #28]
 80072b6:	9409      	str	r4, [sp, #36]	@ 0x24
 80072b8:	f04f 3bff 	mov.w	fp, #4294967295
 80072bc:	2200      	movs	r2, #0
 80072be:	f8cd b00c 	str.w	fp, [sp, #12]
 80072c2:	2312      	movs	r3, #18
 80072c4:	920c      	str	r2, [sp, #48]	@ 0x30
 80072c6:	e7db      	b.n	8007280 <_dtoa_r+0x250>
 80072c8:	2301      	movs	r3, #1
 80072ca:	9309      	str	r3, [sp, #36]	@ 0x24
 80072cc:	e7f4      	b.n	80072b8 <_dtoa_r+0x288>
 80072ce:	f04f 0b01 	mov.w	fp, #1
 80072d2:	f8cd b00c 	str.w	fp, [sp, #12]
 80072d6:	465b      	mov	r3, fp
 80072d8:	f8cd b030 	str.w	fp, [sp, #48]	@ 0x30
 80072dc:	e7d0      	b.n	8007280 <_dtoa_r+0x250>
 80072de:	3101      	adds	r1, #1
 80072e0:	0052      	lsls	r2, r2, #1
 80072e2:	e7d1      	b.n	8007288 <_dtoa_r+0x258>
 80072e4:	f3af 8000 	nop.w
 80072e8:	636f4361 	.word	0x636f4361
 80072ec:	3fd287a7 	.word	0x3fd287a7
 80072f0:	8b60c8b3 	.word	0x8b60c8b3
 80072f4:	3fc68a28 	.word	0x3fc68a28
 80072f8:	509f79fb 	.word	0x509f79fb
 80072fc:	3fd34413 	.word	0x3fd34413
 8007300:	0800922c 	.word	0x0800922c
 8007304:	08009318 	.word	0x08009318
 8007308:	7ff00000 	.word	0x7ff00000
 800730c:	080092ac 	.word	0x080092ac
 8007310:	3ff80000 	.word	0x3ff80000
 8007314:	08009430 	.word	0x08009430
 8007318:	08009370 	.word	0x08009370
 800731c:	08009314 	.word	0x08009314
 8007320:	080092ab 	.word	0x080092ab
 8007324:	f8d9 301c 	ldr.w	r3, [r9, #28]
 8007328:	6018      	str	r0, [r3, #0]
 800732a:	9b03      	ldr	r3, [sp, #12]
 800732c:	2b0e      	cmp	r3, #14
 800732e:	f200 80a1 	bhi.w	8007474 <_dtoa_r+0x444>
 8007332:	2c00      	cmp	r4, #0
 8007334:	f000 809e 	beq.w	8007474 <_dtoa_r+0x444>
 8007338:	2f00      	cmp	r7, #0
 800733a:	dd33      	ble.n	80073a4 <_dtoa_r+0x374>
 800733c:	4b9c      	ldr	r3, [pc, #624]	@ (80075b0 <_dtoa_r+0x580>)
 800733e:	f007 020f 	and.w	r2, r7, #15
 8007342:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8007346:	ed93 7b00 	vldr	d7, [r3]
 800734a:	05f8      	lsls	r0, r7, #23
 800734c:	ed8d 7b0e 	vstr	d7, [sp, #56]	@ 0x38
 8007350:	ea4f 1427 	mov.w	r4, r7, asr #4
 8007354:	d516      	bpl.n	8007384 <_dtoa_r+0x354>
 8007356:	4b97      	ldr	r3, [pc, #604]	@ (80075b4 <_dtoa_r+0x584>)
 8007358:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	@ 0x28
 800735c:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
 8007360:	f7f9 fa94 	bl	800088c <__aeabi_ddiv>
 8007364:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8007368:	f004 040f 	and.w	r4, r4, #15
 800736c:	2603      	movs	r6, #3
 800736e:	4d91      	ldr	r5, [pc, #580]	@ (80075b4 <_dtoa_r+0x584>)
 8007370:	b954      	cbnz	r4, 8007388 <_dtoa_r+0x358>
 8007372:	e9dd 230e 	ldrd	r2, r3, [sp, #56]	@ 0x38
 8007376:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 800737a:	f7f9 fa87 	bl	800088c <__aeabi_ddiv>
 800737e:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8007382:	e028      	b.n	80073d6 <_dtoa_r+0x3a6>
 8007384:	2602      	movs	r6, #2
 8007386:	e7f2      	b.n	800736e <_dtoa_r+0x33e>
 8007388:	07e1      	lsls	r1, r4, #31
 800738a:	d508      	bpl.n	800739e <_dtoa_r+0x36e>
 800738c:	e9dd 010e 	ldrd	r0, r1, [sp, #56]	@ 0x38
 8007390:	e9d5 2300 	ldrd	r2, r3, [r5]
 8007394:	f7f9 f950 	bl	8000638 <__aeabi_dmul>
 8007398:	e9cd 010e 	strd	r0, r1, [sp, #56]	@ 0x38
 800739c:	3601      	adds	r6, #1
 800739e:	1064      	asrs	r4, r4, #1
 80073a0:	3508      	adds	r5, #8
 80073a2:	e7e5      	b.n	8007370 <_dtoa_r+0x340>
 80073a4:	f000 80af 	beq.w	8007506 <_dtoa_r+0x4d6>
 80073a8:	427c      	negs	r4, r7
 80073aa:	4b81      	ldr	r3, [pc, #516]	@ (80075b0 <_dtoa_r+0x580>)
 80073ac:	4d81      	ldr	r5, [pc, #516]	@ (80075b4 <_dtoa_r+0x584>)
 80073ae:	f004 020f 	and.w	r2, r4, #15
 80073b2:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 80073b6:	e9d3 2300 	ldrd	r2, r3, [r3]
 80073ba:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	@ 0x28
 80073be:	f7f9 f93b 	bl	8000638 <__aeabi_dmul>
 80073c2:	e9cd 0104 	strd	r0, r1, [sp, #16]
 80073c6:	1124      	asrs	r4, r4, #4
 80073c8:	2300      	movs	r3, #0
 80073ca:	2602      	movs	r6, #2
 80073cc:	2c00      	cmp	r4, #0
 80073ce:	f040 808f 	bne.w	80074f0 <_dtoa_r+0x4c0>
 80073d2:	2b00      	cmp	r3, #0
 80073d4:	d1d3      	bne.n	800737e <_dtoa_r+0x34e>
 80073d6:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80073d8:	e9dd 4504 	ldrd	r4, r5, [sp, #16]
 80073dc:	2b00      	cmp	r3, #0
 80073de:	f000 8094 	beq.w	800750a <_dtoa_r+0x4da>
 80073e2:	4b75      	ldr	r3, [pc, #468]	@ (80075b8 <_dtoa_r+0x588>)
 80073e4:	2200      	movs	r2, #0
 80073e6:	4620      	mov	r0, r4
 80073e8:	4629      	mov	r1, r5
 80073ea:	f7f9 fb97 	bl	8000b1c <__aeabi_dcmplt>
 80073ee:	2800      	cmp	r0, #0
 80073f0:	f000 808b 	beq.w	800750a <_dtoa_r+0x4da>
 80073f4:	9b03      	ldr	r3, [sp, #12]
 80073f6:	2b00      	cmp	r3, #0
 80073f8:	f000 8087 	beq.w	800750a <_dtoa_r+0x4da>
 80073fc:	f1bb 0f00 	cmp.w	fp, #0
 8007400:	dd34      	ble.n	800746c <_dtoa_r+0x43c>
 8007402:	4620      	mov	r0, r4
 8007404:	4b6d      	ldr	r3, [pc, #436]	@ (80075bc <_dtoa_r+0x58c>)
 8007406:	2200      	movs	r2, #0
 8007408:	4629      	mov	r1, r5
 800740a:	f7f9 f915 	bl	8000638 <__aeabi_dmul>
 800740e:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8007412:	f107 38ff 	add.w	r8, r7, #4294967295
 8007416:	3601      	adds	r6, #1
 8007418:	465c      	mov	r4, fp
 800741a:	4630      	mov	r0, r6
 800741c:	f7f9 f8a2 	bl	8000564 <__aeabi_i2d>
 8007420:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8007424:	f7f9 f908 	bl	8000638 <__aeabi_dmul>
 8007428:	4b65      	ldr	r3, [pc, #404]	@ (80075c0 <_dtoa_r+0x590>)
 800742a:	2200      	movs	r2, #0
 800742c:	f7f8 ff4e 	bl	80002cc <__adddf3>
 8007430:	4605      	mov	r5, r0
 8007432:	f1a1 7650 	sub.w	r6, r1, #54525952	@ 0x3400000
 8007436:	2c00      	cmp	r4, #0
 8007438:	d16a      	bne.n	8007510 <_dtoa_r+0x4e0>
 800743a:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 800743e:	4b61      	ldr	r3, [pc, #388]	@ (80075c4 <_dtoa_r+0x594>)
 8007440:	2200      	movs	r2, #0
 8007442:	f7f8 ff41 	bl	80002c8 <__aeabi_dsub>
 8007446:	4602      	mov	r2, r0
 8007448:	460b      	mov	r3, r1
 800744a:	e9cd 2304 	strd	r2, r3, [sp, #16]
 800744e:	462a      	mov	r2, r5
 8007450:	4633      	mov	r3, r6
 8007452:	f7f9 fb81 	bl	8000b58 <__aeabi_dcmpgt>
 8007456:	2800      	cmp	r0, #0
 8007458:	f040 8298 	bne.w	800798c <_dtoa_r+0x95c>
 800745c:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8007460:	462a      	mov	r2, r5
 8007462:	f106 4300 	add.w	r3, r6, #2147483648	@ 0x80000000
 8007466:	f7f9 fb59 	bl	8000b1c <__aeabi_dcmplt>
 800746a:	bb38      	cbnz	r0, 80074bc <_dtoa_r+0x48c>
 800746c:	e9dd 340a 	ldrd	r3, r4, [sp, #40]	@ 0x28
 8007470:	e9cd 3404 	strd	r3, r4, [sp, #16]
 8007474:	9b15      	ldr	r3, [sp, #84]	@ 0x54
 8007476:	2b00      	cmp	r3, #0
 8007478:	f2c0 8157 	blt.w	800772a <_dtoa_r+0x6fa>
 800747c:	2f0e      	cmp	r7, #14
 800747e:	f300 8154 	bgt.w	800772a <_dtoa_r+0x6fa>
 8007482:	4b4b      	ldr	r3, [pc, #300]	@ (80075b0 <_dtoa_r+0x580>)
 8007484:	eb03 03c7 	add.w	r3, r3, r7, lsl #3
 8007488:	ed93 7b00 	vldr	d7, [r3]
 800748c:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 800748e:	2b00      	cmp	r3, #0
 8007490:	ed8d 7b00 	vstr	d7, [sp]
 8007494:	f280 80e5 	bge.w	8007662 <_dtoa_r+0x632>
 8007498:	9b03      	ldr	r3, [sp, #12]
 800749a:	2b00      	cmp	r3, #0
 800749c:	f300 80e1 	bgt.w	8007662 <_dtoa_r+0x632>
 80074a0:	d10c      	bne.n	80074bc <_dtoa_r+0x48c>
 80074a2:	4b48      	ldr	r3, [pc, #288]	@ (80075c4 <_dtoa_r+0x594>)
 80074a4:	2200      	movs	r2, #0
 80074a6:	ec51 0b17 	vmov	r0, r1, d7
 80074aa:	f7f9 f8c5 	bl	8000638 <__aeabi_dmul>
 80074ae:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 80074b2:	f7f9 fb47 	bl	8000b44 <__aeabi_dcmpge>
 80074b6:	2800      	cmp	r0, #0
 80074b8:	f000 8266 	beq.w	8007988 <_dtoa_r+0x958>
 80074bc:	2400      	movs	r4, #0
 80074be:	4625      	mov	r5, r4
 80074c0:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80074c2:	4656      	mov	r6, sl
 80074c4:	ea6f 0803 	mvn.w	r8, r3
 80074c8:	2700      	movs	r7, #0
 80074ca:	4621      	mov	r1, r4
 80074cc:	4648      	mov	r0, r9
 80074ce:	f000 fcbf 	bl	8007e50 <_Bfree>
 80074d2:	2d00      	cmp	r5, #0
 80074d4:	f000 80bd 	beq.w	8007652 <_dtoa_r+0x622>
 80074d8:	b12f      	cbz	r7, 80074e6 <_dtoa_r+0x4b6>
 80074da:	42af      	cmp	r7, r5
 80074dc:	d003      	beq.n	80074e6 <_dtoa_r+0x4b6>
 80074de:	4639      	mov	r1, r7
 80074e0:	4648      	mov	r0, r9
 80074e2:	f000 fcb5 	bl	8007e50 <_Bfree>
 80074e6:	4629      	mov	r1, r5
 80074e8:	4648      	mov	r0, r9
 80074ea:	f000 fcb1 	bl	8007e50 <_Bfree>
 80074ee:	e0b0      	b.n	8007652 <_dtoa_r+0x622>
 80074f0:	07e2      	lsls	r2, r4, #31
 80074f2:	d505      	bpl.n	8007500 <_dtoa_r+0x4d0>
 80074f4:	e9d5 2300 	ldrd	r2, r3, [r5]
 80074f8:	f7f9 f89e 	bl	8000638 <__aeabi_dmul>
 80074fc:	3601      	adds	r6, #1
 80074fe:	2301      	movs	r3, #1
 8007500:	1064      	asrs	r4, r4, #1
 8007502:	3508      	adds	r5, #8
 8007504:	e762      	b.n	80073cc <_dtoa_r+0x39c>
 8007506:	2602      	movs	r6, #2
 8007508:	e765      	b.n	80073d6 <_dtoa_r+0x3a6>
 800750a:	9c03      	ldr	r4, [sp, #12]
 800750c:	46b8      	mov	r8, r7
 800750e:	e784      	b.n	800741a <_dtoa_r+0x3ea>
 8007510:	4b27      	ldr	r3, [pc, #156]	@ (80075b0 <_dtoa_r+0x580>)
 8007512:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8007514:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 8007518:	e953 2302 	ldrd	r2, r3, [r3, #-8]
 800751c:	4454      	add	r4, sl
 800751e:	2900      	cmp	r1, #0
 8007520:	d054      	beq.n	80075cc <_dtoa_r+0x59c>
 8007522:	4929      	ldr	r1, [pc, #164]	@ (80075c8 <_dtoa_r+0x598>)
 8007524:	2000      	movs	r0, #0
 8007526:	f7f9 f9b1 	bl	800088c <__aeabi_ddiv>
 800752a:	4633      	mov	r3, r6
 800752c:	462a      	mov	r2, r5
 800752e:	f7f8 fecb 	bl	80002c8 <__aeabi_dsub>
 8007532:	e9cd 010e 	strd	r0, r1, [sp, #56]	@ 0x38
 8007536:	4656      	mov	r6, sl
 8007538:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 800753c:	f7f9 fb2c 	bl	8000b98 <__aeabi_d2iz>
 8007540:	4605      	mov	r5, r0
 8007542:	f7f9 f80f 	bl	8000564 <__aeabi_i2d>
 8007546:	4602      	mov	r2, r0
 8007548:	460b      	mov	r3, r1
 800754a:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 800754e:	f7f8 febb 	bl	80002c8 <__aeabi_dsub>
 8007552:	3530      	adds	r5, #48	@ 0x30
 8007554:	4602      	mov	r2, r0
 8007556:	460b      	mov	r3, r1
 8007558:	e9cd 2304 	strd	r2, r3, [sp, #16]
 800755c:	f806 5b01 	strb.w	r5, [r6], #1
 8007560:	e9dd 230e 	ldrd	r2, r3, [sp, #56]	@ 0x38
 8007564:	f7f9 fada 	bl	8000b1c <__aeabi_dcmplt>
 8007568:	2800      	cmp	r0, #0
 800756a:	d172      	bne.n	8007652 <_dtoa_r+0x622>
 800756c:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8007570:	4911      	ldr	r1, [pc, #68]	@ (80075b8 <_dtoa_r+0x588>)
 8007572:	2000      	movs	r0, #0
 8007574:	f7f8 fea8 	bl	80002c8 <__aeabi_dsub>
 8007578:	e9dd 230e 	ldrd	r2, r3, [sp, #56]	@ 0x38
 800757c:	f7f9 face 	bl	8000b1c <__aeabi_dcmplt>
 8007580:	2800      	cmp	r0, #0
 8007582:	f040 80b4 	bne.w	80076ee <_dtoa_r+0x6be>
 8007586:	42a6      	cmp	r6, r4
 8007588:	f43f af70 	beq.w	800746c <_dtoa_r+0x43c>
 800758c:	e9dd 010e 	ldrd	r0, r1, [sp, #56]	@ 0x38
 8007590:	4b0a      	ldr	r3, [pc, #40]	@ (80075bc <_dtoa_r+0x58c>)
 8007592:	2200      	movs	r2, #0
 8007594:	f7f9 f850 	bl	8000638 <__aeabi_dmul>
 8007598:	4b08      	ldr	r3, [pc, #32]	@ (80075bc <_dtoa_r+0x58c>)
 800759a:	e9cd 010e 	strd	r0, r1, [sp, #56]	@ 0x38
 800759e:	2200      	movs	r2, #0
 80075a0:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 80075a4:	f7f9 f848 	bl	8000638 <__aeabi_dmul>
 80075a8:	e9cd 0104 	strd	r0, r1, [sp, #16]
 80075ac:	e7c4      	b.n	8007538 <_dtoa_r+0x508>
 80075ae:	bf00      	nop
 80075b0:	08009430 	.word	0x08009430
 80075b4:	08009408 	.word	0x08009408
 80075b8:	3ff00000 	.word	0x3ff00000
 80075bc:	40240000 	.word	0x40240000
 80075c0:	401c0000 	.word	0x401c0000
 80075c4:	40140000 	.word	0x40140000
 80075c8:	3fe00000 	.word	0x3fe00000
 80075cc:	4631      	mov	r1, r6
 80075ce:	4628      	mov	r0, r5
 80075d0:	f7f9 f832 	bl	8000638 <__aeabi_dmul>
 80075d4:	e9cd 010e 	strd	r0, r1, [sp, #56]	@ 0x38
 80075d8:	9413      	str	r4, [sp, #76]	@ 0x4c
 80075da:	4656      	mov	r6, sl
 80075dc:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 80075e0:	f7f9 fada 	bl	8000b98 <__aeabi_d2iz>
 80075e4:	4605      	mov	r5, r0
 80075e6:	f7f8 ffbd 	bl	8000564 <__aeabi_i2d>
 80075ea:	4602      	mov	r2, r0
 80075ec:	460b      	mov	r3, r1
 80075ee:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 80075f2:	f7f8 fe69 	bl	80002c8 <__aeabi_dsub>
 80075f6:	3530      	adds	r5, #48	@ 0x30
 80075f8:	f806 5b01 	strb.w	r5, [r6], #1
 80075fc:	4602      	mov	r2, r0
 80075fe:	460b      	mov	r3, r1
 8007600:	42a6      	cmp	r6, r4
 8007602:	e9cd 2304 	strd	r2, r3, [sp, #16]
 8007606:	f04f 0200 	mov.w	r2, #0
 800760a:	d124      	bne.n	8007656 <_dtoa_r+0x626>
 800760c:	4baf      	ldr	r3, [pc, #700]	@ (80078cc <_dtoa_r+0x89c>)
 800760e:	e9dd 010e 	ldrd	r0, r1, [sp, #56]	@ 0x38
 8007612:	f7f8 fe5b 	bl	80002cc <__adddf3>
 8007616:	4602      	mov	r2, r0
 8007618:	460b      	mov	r3, r1
 800761a:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 800761e:	f7f9 fa9b 	bl	8000b58 <__aeabi_dcmpgt>
 8007622:	2800      	cmp	r0, #0
 8007624:	d163      	bne.n	80076ee <_dtoa_r+0x6be>
 8007626:	e9dd 230e 	ldrd	r2, r3, [sp, #56]	@ 0x38
 800762a:	49a8      	ldr	r1, [pc, #672]	@ (80078cc <_dtoa_r+0x89c>)
 800762c:	2000      	movs	r0, #0
 800762e:	f7f8 fe4b 	bl	80002c8 <__aeabi_dsub>
 8007632:	4602      	mov	r2, r0
 8007634:	460b      	mov	r3, r1
 8007636:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 800763a:	f7f9 fa6f 	bl	8000b1c <__aeabi_dcmplt>
 800763e:	2800      	cmp	r0, #0
 8007640:	f43f af14 	beq.w	800746c <_dtoa_r+0x43c>
 8007644:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 8007646:	1e73      	subs	r3, r6, #1
 8007648:	9313      	str	r3, [sp, #76]	@ 0x4c
 800764a:	f816 3c01 	ldrb.w	r3, [r6, #-1]
 800764e:	2b30      	cmp	r3, #48	@ 0x30
 8007650:	d0f8      	beq.n	8007644 <_dtoa_r+0x614>
 8007652:	4647      	mov	r7, r8
 8007654:	e03b      	b.n	80076ce <_dtoa_r+0x69e>
 8007656:	4b9e      	ldr	r3, [pc, #632]	@ (80078d0 <_dtoa_r+0x8a0>)
 8007658:	f7f8 ffee 	bl	8000638 <__aeabi_dmul>
 800765c:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8007660:	e7bc      	b.n	80075dc <_dtoa_r+0x5ac>
 8007662:	e9dd 4504 	ldrd	r4, r5, [sp, #16]
 8007666:	4656      	mov	r6, sl
 8007668:	e9dd 2300 	ldrd	r2, r3, [sp]
 800766c:	4620      	mov	r0, r4
 800766e:	4629      	mov	r1, r5
 8007670:	f7f9 f90c 	bl	800088c <__aeabi_ddiv>
 8007674:	f7f9 fa90 	bl	8000b98 <__aeabi_d2iz>
 8007678:	4680      	mov	r8, r0
 800767a:	f7f8 ff73 	bl	8000564 <__aeabi_i2d>
 800767e:	e9dd 2300 	ldrd	r2, r3, [sp]
 8007682:	f7f8 ffd9 	bl	8000638 <__aeabi_dmul>
 8007686:	4602      	mov	r2, r0
 8007688:	460b      	mov	r3, r1
 800768a:	4620      	mov	r0, r4
 800768c:	4629      	mov	r1, r5
 800768e:	f108 0430 	add.w	r4, r8, #48	@ 0x30
 8007692:	f7f8 fe19 	bl	80002c8 <__aeabi_dsub>
 8007696:	f806 4b01 	strb.w	r4, [r6], #1
 800769a:	9d03      	ldr	r5, [sp, #12]
 800769c:	eba6 040a 	sub.w	r4, r6, sl
 80076a0:	42a5      	cmp	r5, r4
 80076a2:	4602      	mov	r2, r0
 80076a4:	460b      	mov	r3, r1
 80076a6:	d133      	bne.n	8007710 <_dtoa_r+0x6e0>
 80076a8:	f7f8 fe10 	bl	80002cc <__adddf3>
 80076ac:	e9dd 2300 	ldrd	r2, r3, [sp]
 80076b0:	4604      	mov	r4, r0
 80076b2:	460d      	mov	r5, r1
 80076b4:	f7f9 fa50 	bl	8000b58 <__aeabi_dcmpgt>
 80076b8:	b9c0      	cbnz	r0, 80076ec <_dtoa_r+0x6bc>
 80076ba:	e9dd 2300 	ldrd	r2, r3, [sp]
 80076be:	4620      	mov	r0, r4
 80076c0:	4629      	mov	r1, r5
 80076c2:	f7f9 fa21 	bl	8000b08 <__aeabi_dcmpeq>
 80076c6:	b110      	cbz	r0, 80076ce <_dtoa_r+0x69e>
 80076c8:	f018 0f01 	tst.w	r8, #1
 80076cc:	d10e      	bne.n	80076ec <_dtoa_r+0x6bc>
 80076ce:	9902      	ldr	r1, [sp, #8]
 80076d0:	4648      	mov	r0, r9
 80076d2:	f000 fbbd 	bl	8007e50 <_Bfree>
 80076d6:	2300      	movs	r3, #0
 80076d8:	7033      	strb	r3, [r6, #0]
 80076da:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 80076dc:	3701      	adds	r7, #1
 80076de:	601f      	str	r7, [r3, #0]
 80076e0:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 80076e2:	2b00      	cmp	r3, #0
 80076e4:	f000 824b 	beq.w	8007b7e <_dtoa_r+0xb4e>
 80076e8:	601e      	str	r6, [r3, #0]
 80076ea:	e248      	b.n	8007b7e <_dtoa_r+0xb4e>
 80076ec:	46b8      	mov	r8, r7
 80076ee:	4633      	mov	r3, r6
 80076f0:	461e      	mov	r6, r3
 80076f2:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 80076f6:	2a39      	cmp	r2, #57	@ 0x39
 80076f8:	d106      	bne.n	8007708 <_dtoa_r+0x6d8>
 80076fa:	459a      	cmp	sl, r3
 80076fc:	d1f8      	bne.n	80076f0 <_dtoa_r+0x6c0>
 80076fe:	2230      	movs	r2, #48	@ 0x30
 8007700:	f108 0801 	add.w	r8, r8, #1
 8007704:	f88a 2000 	strb.w	r2, [sl]
 8007708:	781a      	ldrb	r2, [r3, #0]
 800770a:	3201      	adds	r2, #1
 800770c:	701a      	strb	r2, [r3, #0]
 800770e:	e7a0      	b.n	8007652 <_dtoa_r+0x622>
 8007710:	4b6f      	ldr	r3, [pc, #444]	@ (80078d0 <_dtoa_r+0x8a0>)
 8007712:	2200      	movs	r2, #0
 8007714:	f7f8 ff90 	bl	8000638 <__aeabi_dmul>
 8007718:	2200      	movs	r2, #0
 800771a:	2300      	movs	r3, #0
 800771c:	4604      	mov	r4, r0
 800771e:	460d      	mov	r5, r1
 8007720:	f7f9 f9f2 	bl	8000b08 <__aeabi_dcmpeq>
 8007724:	2800      	cmp	r0, #0
 8007726:	d09f      	beq.n	8007668 <_dtoa_r+0x638>
 8007728:	e7d1      	b.n	80076ce <_dtoa_r+0x69e>
 800772a:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 800772c:	2a00      	cmp	r2, #0
 800772e:	f000 80ea 	beq.w	8007906 <_dtoa_r+0x8d6>
 8007732:	9a07      	ldr	r2, [sp, #28]
 8007734:	2a01      	cmp	r2, #1
 8007736:	f300 80cd 	bgt.w	80078d4 <_dtoa_r+0x8a4>
 800773a:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 800773c:	2a00      	cmp	r2, #0
 800773e:	f000 80c1 	beq.w	80078c4 <_dtoa_r+0x894>
 8007742:	f203 4333 	addw	r3, r3, #1075	@ 0x433
 8007746:	9c08      	ldr	r4, [sp, #32]
 8007748:	9e00      	ldr	r6, [sp, #0]
 800774a:	9a00      	ldr	r2, [sp, #0]
 800774c:	441a      	add	r2, r3
 800774e:	9200      	str	r2, [sp, #0]
 8007750:	9a06      	ldr	r2, [sp, #24]
 8007752:	2101      	movs	r1, #1
 8007754:	441a      	add	r2, r3
 8007756:	4648      	mov	r0, r9
 8007758:	9206      	str	r2, [sp, #24]
 800775a:	f000 fc2d 	bl	8007fb8 <__i2b>
 800775e:	4605      	mov	r5, r0
 8007760:	b166      	cbz	r6, 800777c <_dtoa_r+0x74c>
 8007762:	9b06      	ldr	r3, [sp, #24]
 8007764:	2b00      	cmp	r3, #0
 8007766:	dd09      	ble.n	800777c <_dtoa_r+0x74c>
 8007768:	42b3      	cmp	r3, r6
 800776a:	9a00      	ldr	r2, [sp, #0]
 800776c:	bfa8      	it	ge
 800776e:	4633      	movge	r3, r6
 8007770:	1ad2      	subs	r2, r2, r3
 8007772:	9200      	str	r2, [sp, #0]
 8007774:	9a06      	ldr	r2, [sp, #24]
 8007776:	1af6      	subs	r6, r6, r3
 8007778:	1ad3      	subs	r3, r2, r3
 800777a:	9306      	str	r3, [sp, #24]
 800777c:	9b08      	ldr	r3, [sp, #32]
 800777e:	b30b      	cbz	r3, 80077c4 <_dtoa_r+0x794>
 8007780:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8007782:	2b00      	cmp	r3, #0
 8007784:	f000 80c6 	beq.w	8007914 <_dtoa_r+0x8e4>
 8007788:	2c00      	cmp	r4, #0
 800778a:	f000 80c0 	beq.w	800790e <_dtoa_r+0x8de>
 800778e:	4629      	mov	r1, r5
 8007790:	4622      	mov	r2, r4
 8007792:	4648      	mov	r0, r9
 8007794:	f000 fcc8 	bl	8008128 <__pow5mult>
 8007798:	9a02      	ldr	r2, [sp, #8]
 800779a:	4601      	mov	r1, r0
 800779c:	4605      	mov	r5, r0
 800779e:	4648      	mov	r0, r9
 80077a0:	f000 fc20 	bl	8007fe4 <__multiply>
 80077a4:	9902      	ldr	r1, [sp, #8]
 80077a6:	4680      	mov	r8, r0
 80077a8:	4648      	mov	r0, r9
 80077aa:	f000 fb51 	bl	8007e50 <_Bfree>
 80077ae:	9b08      	ldr	r3, [sp, #32]
 80077b0:	1b1b      	subs	r3, r3, r4
 80077b2:	9308      	str	r3, [sp, #32]
 80077b4:	f000 80b1 	beq.w	800791a <_dtoa_r+0x8ea>
 80077b8:	9a08      	ldr	r2, [sp, #32]
 80077ba:	4641      	mov	r1, r8
 80077bc:	4648      	mov	r0, r9
 80077be:	f000 fcb3 	bl	8008128 <__pow5mult>
 80077c2:	9002      	str	r0, [sp, #8]
 80077c4:	2101      	movs	r1, #1
 80077c6:	4648      	mov	r0, r9
 80077c8:	f000 fbf6 	bl	8007fb8 <__i2b>
 80077cc:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80077ce:	4604      	mov	r4, r0
 80077d0:	2b00      	cmp	r3, #0
 80077d2:	f000 81d8 	beq.w	8007b86 <_dtoa_r+0xb56>
 80077d6:	461a      	mov	r2, r3
 80077d8:	4601      	mov	r1, r0
 80077da:	4648      	mov	r0, r9
 80077dc:	f000 fca4 	bl	8008128 <__pow5mult>
 80077e0:	9b07      	ldr	r3, [sp, #28]
 80077e2:	2b01      	cmp	r3, #1
 80077e4:	4604      	mov	r4, r0
 80077e6:	f300 809f 	bgt.w	8007928 <_dtoa_r+0x8f8>
 80077ea:	9b04      	ldr	r3, [sp, #16]
 80077ec:	2b00      	cmp	r3, #0
 80077ee:	f040 8097 	bne.w	8007920 <_dtoa_r+0x8f0>
 80077f2:	9b05      	ldr	r3, [sp, #20]
 80077f4:	f3c3 0313 	ubfx	r3, r3, #0, #20
 80077f8:	2b00      	cmp	r3, #0
 80077fa:	f040 8093 	bne.w	8007924 <_dtoa_r+0x8f4>
 80077fe:	9b05      	ldr	r3, [sp, #20]
 8007800:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 8007804:	0d1b      	lsrs	r3, r3, #20
 8007806:	051b      	lsls	r3, r3, #20
 8007808:	b133      	cbz	r3, 8007818 <_dtoa_r+0x7e8>
 800780a:	9b00      	ldr	r3, [sp, #0]
 800780c:	3301      	adds	r3, #1
 800780e:	9300      	str	r3, [sp, #0]
 8007810:	9b06      	ldr	r3, [sp, #24]
 8007812:	3301      	adds	r3, #1
 8007814:	9306      	str	r3, [sp, #24]
 8007816:	2301      	movs	r3, #1
 8007818:	9308      	str	r3, [sp, #32]
 800781a:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 800781c:	2b00      	cmp	r3, #0
 800781e:	f000 81b8 	beq.w	8007b92 <_dtoa_r+0xb62>
 8007822:	6923      	ldr	r3, [r4, #16]
 8007824:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 8007828:	6918      	ldr	r0, [r3, #16]
 800782a:	f000 fb79 	bl	8007f20 <__hi0bits>
 800782e:	f1c0 0020 	rsb	r0, r0, #32
 8007832:	9b06      	ldr	r3, [sp, #24]
 8007834:	4418      	add	r0, r3
 8007836:	f010 001f 	ands.w	r0, r0, #31
 800783a:	f000 8082 	beq.w	8007942 <_dtoa_r+0x912>
 800783e:	f1c0 0320 	rsb	r3, r0, #32
 8007842:	2b04      	cmp	r3, #4
 8007844:	dd73      	ble.n	800792e <_dtoa_r+0x8fe>
 8007846:	9b00      	ldr	r3, [sp, #0]
 8007848:	f1c0 001c 	rsb	r0, r0, #28
 800784c:	4403      	add	r3, r0
 800784e:	9300      	str	r3, [sp, #0]
 8007850:	9b06      	ldr	r3, [sp, #24]
 8007852:	4403      	add	r3, r0
 8007854:	4406      	add	r6, r0
 8007856:	9306      	str	r3, [sp, #24]
 8007858:	9b00      	ldr	r3, [sp, #0]
 800785a:	2b00      	cmp	r3, #0
 800785c:	dd05      	ble.n	800786a <_dtoa_r+0x83a>
 800785e:	9902      	ldr	r1, [sp, #8]
 8007860:	461a      	mov	r2, r3
 8007862:	4648      	mov	r0, r9
 8007864:	f000 fcba 	bl	80081dc <__lshift>
 8007868:	9002      	str	r0, [sp, #8]
 800786a:	9b06      	ldr	r3, [sp, #24]
 800786c:	2b00      	cmp	r3, #0
 800786e:	dd05      	ble.n	800787c <_dtoa_r+0x84c>
 8007870:	4621      	mov	r1, r4
 8007872:	461a      	mov	r2, r3
 8007874:	4648      	mov	r0, r9
 8007876:	f000 fcb1 	bl	80081dc <__lshift>
 800787a:	4604      	mov	r4, r0
 800787c:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 800787e:	2b00      	cmp	r3, #0
 8007880:	d061      	beq.n	8007946 <_dtoa_r+0x916>
 8007882:	9802      	ldr	r0, [sp, #8]
 8007884:	4621      	mov	r1, r4
 8007886:	f000 fd15 	bl	80082b4 <__mcmp>
 800788a:	2800      	cmp	r0, #0
 800788c:	da5b      	bge.n	8007946 <_dtoa_r+0x916>
 800788e:	2300      	movs	r3, #0
 8007890:	9902      	ldr	r1, [sp, #8]
 8007892:	220a      	movs	r2, #10
 8007894:	4648      	mov	r0, r9
 8007896:	f000 fafd 	bl	8007e94 <__multadd>
 800789a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800789c:	9002      	str	r0, [sp, #8]
 800789e:	f107 38ff 	add.w	r8, r7, #4294967295
 80078a2:	2b00      	cmp	r3, #0
 80078a4:	f000 8177 	beq.w	8007b96 <_dtoa_r+0xb66>
 80078a8:	4629      	mov	r1, r5
 80078aa:	2300      	movs	r3, #0
 80078ac:	220a      	movs	r2, #10
 80078ae:	4648      	mov	r0, r9
 80078b0:	f000 faf0 	bl	8007e94 <__multadd>
 80078b4:	f1bb 0f00 	cmp.w	fp, #0
 80078b8:	4605      	mov	r5, r0
 80078ba:	dc6f      	bgt.n	800799c <_dtoa_r+0x96c>
 80078bc:	9b07      	ldr	r3, [sp, #28]
 80078be:	2b02      	cmp	r3, #2
 80078c0:	dc49      	bgt.n	8007956 <_dtoa_r+0x926>
 80078c2:	e06b      	b.n	800799c <_dtoa_r+0x96c>
 80078c4:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 80078c6:	f1c3 0336 	rsb	r3, r3, #54	@ 0x36
 80078ca:	e73c      	b.n	8007746 <_dtoa_r+0x716>
 80078cc:	3fe00000 	.word	0x3fe00000
 80078d0:	40240000 	.word	0x40240000
 80078d4:	9b03      	ldr	r3, [sp, #12]
 80078d6:	1e5c      	subs	r4, r3, #1
 80078d8:	9b08      	ldr	r3, [sp, #32]
 80078da:	42a3      	cmp	r3, r4
 80078dc:	db09      	blt.n	80078f2 <_dtoa_r+0x8c2>
 80078de:	1b1c      	subs	r4, r3, r4
 80078e0:	9b03      	ldr	r3, [sp, #12]
 80078e2:	2b00      	cmp	r3, #0
 80078e4:	f6bf af30 	bge.w	8007748 <_dtoa_r+0x718>
 80078e8:	9b00      	ldr	r3, [sp, #0]
 80078ea:	9a03      	ldr	r2, [sp, #12]
 80078ec:	1a9e      	subs	r6, r3, r2
 80078ee:	2300      	movs	r3, #0
 80078f0:	e72b      	b.n	800774a <_dtoa_r+0x71a>
 80078f2:	9b08      	ldr	r3, [sp, #32]
 80078f4:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 80078f6:	9408      	str	r4, [sp, #32]
 80078f8:	1ae3      	subs	r3, r4, r3
 80078fa:	441a      	add	r2, r3
 80078fc:	9e00      	ldr	r6, [sp, #0]
 80078fe:	9b03      	ldr	r3, [sp, #12]
 8007900:	920d      	str	r2, [sp, #52]	@ 0x34
 8007902:	2400      	movs	r4, #0
 8007904:	e721      	b.n	800774a <_dtoa_r+0x71a>
 8007906:	9c08      	ldr	r4, [sp, #32]
 8007908:	9e00      	ldr	r6, [sp, #0]
 800790a:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 800790c:	e728      	b.n	8007760 <_dtoa_r+0x730>
 800790e:	f8dd 8008 	ldr.w	r8, [sp, #8]
 8007912:	e751      	b.n	80077b8 <_dtoa_r+0x788>
 8007914:	9a08      	ldr	r2, [sp, #32]
 8007916:	9902      	ldr	r1, [sp, #8]
 8007918:	e750      	b.n	80077bc <_dtoa_r+0x78c>
 800791a:	f8cd 8008 	str.w	r8, [sp, #8]
 800791e:	e751      	b.n	80077c4 <_dtoa_r+0x794>
 8007920:	2300      	movs	r3, #0
 8007922:	e779      	b.n	8007818 <_dtoa_r+0x7e8>
 8007924:	9b04      	ldr	r3, [sp, #16]
 8007926:	e777      	b.n	8007818 <_dtoa_r+0x7e8>
 8007928:	2300      	movs	r3, #0
 800792a:	9308      	str	r3, [sp, #32]
 800792c:	e779      	b.n	8007822 <_dtoa_r+0x7f2>
 800792e:	d093      	beq.n	8007858 <_dtoa_r+0x828>
 8007930:	9a00      	ldr	r2, [sp, #0]
 8007932:	331c      	adds	r3, #28
 8007934:	441a      	add	r2, r3
 8007936:	9200      	str	r2, [sp, #0]
 8007938:	9a06      	ldr	r2, [sp, #24]
 800793a:	441a      	add	r2, r3
 800793c:	441e      	add	r6, r3
 800793e:	9206      	str	r2, [sp, #24]
 8007940:	e78a      	b.n	8007858 <_dtoa_r+0x828>
 8007942:	4603      	mov	r3, r0
 8007944:	e7f4      	b.n	8007930 <_dtoa_r+0x900>
 8007946:	9b03      	ldr	r3, [sp, #12]
 8007948:	2b00      	cmp	r3, #0
 800794a:	46b8      	mov	r8, r7
 800794c:	dc20      	bgt.n	8007990 <_dtoa_r+0x960>
 800794e:	469b      	mov	fp, r3
 8007950:	9b07      	ldr	r3, [sp, #28]
 8007952:	2b02      	cmp	r3, #2
 8007954:	dd1e      	ble.n	8007994 <_dtoa_r+0x964>
 8007956:	f1bb 0f00 	cmp.w	fp, #0
 800795a:	f47f adb1 	bne.w	80074c0 <_dtoa_r+0x490>
 800795e:	4621      	mov	r1, r4
 8007960:	465b      	mov	r3, fp
 8007962:	2205      	movs	r2, #5
 8007964:	4648      	mov	r0, r9
 8007966:	f000 fa95 	bl	8007e94 <__multadd>
 800796a:	4601      	mov	r1, r0
 800796c:	4604      	mov	r4, r0
 800796e:	9802      	ldr	r0, [sp, #8]
 8007970:	f000 fca0 	bl	80082b4 <__mcmp>
 8007974:	2800      	cmp	r0, #0
 8007976:	f77f ada3 	ble.w	80074c0 <_dtoa_r+0x490>
 800797a:	4656      	mov	r6, sl
 800797c:	2331      	movs	r3, #49	@ 0x31
 800797e:	f806 3b01 	strb.w	r3, [r6], #1
 8007982:	f108 0801 	add.w	r8, r8, #1
 8007986:	e59f      	b.n	80074c8 <_dtoa_r+0x498>
 8007988:	9c03      	ldr	r4, [sp, #12]
 800798a:	46b8      	mov	r8, r7
 800798c:	4625      	mov	r5, r4
 800798e:	e7f4      	b.n	800797a <_dtoa_r+0x94a>
 8007990:	f8dd b00c 	ldr.w	fp, [sp, #12]
 8007994:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8007996:	2b00      	cmp	r3, #0
 8007998:	f000 8101 	beq.w	8007b9e <_dtoa_r+0xb6e>
 800799c:	2e00      	cmp	r6, #0
 800799e:	dd05      	ble.n	80079ac <_dtoa_r+0x97c>
 80079a0:	4629      	mov	r1, r5
 80079a2:	4632      	mov	r2, r6
 80079a4:	4648      	mov	r0, r9
 80079a6:	f000 fc19 	bl	80081dc <__lshift>
 80079aa:	4605      	mov	r5, r0
 80079ac:	9b08      	ldr	r3, [sp, #32]
 80079ae:	2b00      	cmp	r3, #0
 80079b0:	d05c      	beq.n	8007a6c <_dtoa_r+0xa3c>
 80079b2:	6869      	ldr	r1, [r5, #4]
 80079b4:	4648      	mov	r0, r9
 80079b6:	f000 fa0b 	bl	8007dd0 <_Balloc>
 80079ba:	4606      	mov	r6, r0
 80079bc:	b928      	cbnz	r0, 80079ca <_dtoa_r+0x99a>
 80079be:	4b82      	ldr	r3, [pc, #520]	@ (8007bc8 <_dtoa_r+0xb98>)
 80079c0:	4602      	mov	r2, r0
 80079c2:	f240 21ef 	movw	r1, #751	@ 0x2ef
 80079c6:	f7ff bb4a 	b.w	800705e <_dtoa_r+0x2e>
 80079ca:	692a      	ldr	r2, [r5, #16]
 80079cc:	3202      	adds	r2, #2
 80079ce:	0092      	lsls	r2, r2, #2
 80079d0:	f105 010c 	add.w	r1, r5, #12
 80079d4:	300c      	adds	r0, #12
 80079d6:	f000 ffb5 	bl	8008944 <memcpy>
 80079da:	2201      	movs	r2, #1
 80079dc:	4631      	mov	r1, r6
 80079de:	4648      	mov	r0, r9
 80079e0:	f000 fbfc 	bl	80081dc <__lshift>
 80079e4:	f10a 0301 	add.w	r3, sl, #1
 80079e8:	9300      	str	r3, [sp, #0]
 80079ea:	eb0a 030b 	add.w	r3, sl, fp
 80079ee:	9308      	str	r3, [sp, #32]
 80079f0:	9b04      	ldr	r3, [sp, #16]
 80079f2:	f003 0301 	and.w	r3, r3, #1
 80079f6:	462f      	mov	r7, r5
 80079f8:	9306      	str	r3, [sp, #24]
 80079fa:	4605      	mov	r5, r0
 80079fc:	9b00      	ldr	r3, [sp, #0]
 80079fe:	9802      	ldr	r0, [sp, #8]
 8007a00:	4621      	mov	r1, r4
 8007a02:	f103 3bff 	add.w	fp, r3, #4294967295
 8007a06:	f7ff fa89 	bl	8006f1c <quorem>
 8007a0a:	4603      	mov	r3, r0
 8007a0c:	3330      	adds	r3, #48	@ 0x30
 8007a0e:	9003      	str	r0, [sp, #12]
 8007a10:	4639      	mov	r1, r7
 8007a12:	9802      	ldr	r0, [sp, #8]
 8007a14:	9309      	str	r3, [sp, #36]	@ 0x24
 8007a16:	f000 fc4d 	bl	80082b4 <__mcmp>
 8007a1a:	462a      	mov	r2, r5
 8007a1c:	9004      	str	r0, [sp, #16]
 8007a1e:	4621      	mov	r1, r4
 8007a20:	4648      	mov	r0, r9
 8007a22:	f000 fc63 	bl	80082ec <__mdiff>
 8007a26:	68c2      	ldr	r2, [r0, #12]
 8007a28:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8007a2a:	4606      	mov	r6, r0
 8007a2c:	bb02      	cbnz	r2, 8007a70 <_dtoa_r+0xa40>
 8007a2e:	4601      	mov	r1, r0
 8007a30:	9802      	ldr	r0, [sp, #8]
 8007a32:	f000 fc3f 	bl	80082b4 <__mcmp>
 8007a36:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8007a38:	4602      	mov	r2, r0
 8007a3a:	4631      	mov	r1, r6
 8007a3c:	4648      	mov	r0, r9
 8007a3e:	920c      	str	r2, [sp, #48]	@ 0x30
 8007a40:	9309      	str	r3, [sp, #36]	@ 0x24
 8007a42:	f000 fa05 	bl	8007e50 <_Bfree>
 8007a46:	9b07      	ldr	r3, [sp, #28]
 8007a48:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 8007a4a:	9e00      	ldr	r6, [sp, #0]
 8007a4c:	ea42 0103 	orr.w	r1, r2, r3
 8007a50:	9b06      	ldr	r3, [sp, #24]
 8007a52:	4319      	orrs	r1, r3
 8007a54:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8007a56:	d10d      	bne.n	8007a74 <_dtoa_r+0xa44>
 8007a58:	2b39      	cmp	r3, #57	@ 0x39
 8007a5a:	d027      	beq.n	8007aac <_dtoa_r+0xa7c>
 8007a5c:	9a04      	ldr	r2, [sp, #16]
 8007a5e:	2a00      	cmp	r2, #0
 8007a60:	dd01      	ble.n	8007a66 <_dtoa_r+0xa36>
 8007a62:	9b03      	ldr	r3, [sp, #12]
 8007a64:	3331      	adds	r3, #49	@ 0x31
 8007a66:	f88b 3000 	strb.w	r3, [fp]
 8007a6a:	e52e      	b.n	80074ca <_dtoa_r+0x49a>
 8007a6c:	4628      	mov	r0, r5
 8007a6e:	e7b9      	b.n	80079e4 <_dtoa_r+0x9b4>
 8007a70:	2201      	movs	r2, #1
 8007a72:	e7e2      	b.n	8007a3a <_dtoa_r+0xa0a>
 8007a74:	9904      	ldr	r1, [sp, #16]
 8007a76:	2900      	cmp	r1, #0
 8007a78:	db04      	blt.n	8007a84 <_dtoa_r+0xa54>
 8007a7a:	9807      	ldr	r0, [sp, #28]
 8007a7c:	4301      	orrs	r1, r0
 8007a7e:	9806      	ldr	r0, [sp, #24]
 8007a80:	4301      	orrs	r1, r0
 8007a82:	d120      	bne.n	8007ac6 <_dtoa_r+0xa96>
 8007a84:	2a00      	cmp	r2, #0
 8007a86:	ddee      	ble.n	8007a66 <_dtoa_r+0xa36>
 8007a88:	9902      	ldr	r1, [sp, #8]
 8007a8a:	9300      	str	r3, [sp, #0]
 8007a8c:	2201      	movs	r2, #1
 8007a8e:	4648      	mov	r0, r9
 8007a90:	f000 fba4 	bl	80081dc <__lshift>
 8007a94:	4621      	mov	r1, r4
 8007a96:	9002      	str	r0, [sp, #8]
 8007a98:	f000 fc0c 	bl	80082b4 <__mcmp>
 8007a9c:	2800      	cmp	r0, #0
 8007a9e:	9b00      	ldr	r3, [sp, #0]
 8007aa0:	dc02      	bgt.n	8007aa8 <_dtoa_r+0xa78>
 8007aa2:	d1e0      	bne.n	8007a66 <_dtoa_r+0xa36>
 8007aa4:	07da      	lsls	r2, r3, #31
 8007aa6:	d5de      	bpl.n	8007a66 <_dtoa_r+0xa36>
 8007aa8:	2b39      	cmp	r3, #57	@ 0x39
 8007aaa:	d1da      	bne.n	8007a62 <_dtoa_r+0xa32>
 8007aac:	2339      	movs	r3, #57	@ 0x39
 8007aae:	f88b 3000 	strb.w	r3, [fp]
 8007ab2:	4633      	mov	r3, r6
 8007ab4:	461e      	mov	r6, r3
 8007ab6:	3b01      	subs	r3, #1
 8007ab8:	f816 2c01 	ldrb.w	r2, [r6, #-1]
 8007abc:	2a39      	cmp	r2, #57	@ 0x39
 8007abe:	d04e      	beq.n	8007b5e <_dtoa_r+0xb2e>
 8007ac0:	3201      	adds	r2, #1
 8007ac2:	701a      	strb	r2, [r3, #0]
 8007ac4:	e501      	b.n	80074ca <_dtoa_r+0x49a>
 8007ac6:	2a00      	cmp	r2, #0
 8007ac8:	dd03      	ble.n	8007ad2 <_dtoa_r+0xaa2>
 8007aca:	2b39      	cmp	r3, #57	@ 0x39
 8007acc:	d0ee      	beq.n	8007aac <_dtoa_r+0xa7c>
 8007ace:	3301      	adds	r3, #1
 8007ad0:	e7c9      	b.n	8007a66 <_dtoa_r+0xa36>
 8007ad2:	9a00      	ldr	r2, [sp, #0]
 8007ad4:	9908      	ldr	r1, [sp, #32]
 8007ad6:	f802 3c01 	strb.w	r3, [r2, #-1]
 8007ada:	428a      	cmp	r2, r1
 8007adc:	d028      	beq.n	8007b30 <_dtoa_r+0xb00>
 8007ade:	9902      	ldr	r1, [sp, #8]
 8007ae0:	2300      	movs	r3, #0
 8007ae2:	220a      	movs	r2, #10
 8007ae4:	4648      	mov	r0, r9
 8007ae6:	f000 f9d5 	bl	8007e94 <__multadd>
 8007aea:	42af      	cmp	r7, r5
 8007aec:	9002      	str	r0, [sp, #8]
 8007aee:	f04f 0300 	mov.w	r3, #0
 8007af2:	f04f 020a 	mov.w	r2, #10
 8007af6:	4639      	mov	r1, r7
 8007af8:	4648      	mov	r0, r9
 8007afa:	d107      	bne.n	8007b0c <_dtoa_r+0xadc>
 8007afc:	f000 f9ca 	bl	8007e94 <__multadd>
 8007b00:	4607      	mov	r7, r0
 8007b02:	4605      	mov	r5, r0
 8007b04:	9b00      	ldr	r3, [sp, #0]
 8007b06:	3301      	adds	r3, #1
 8007b08:	9300      	str	r3, [sp, #0]
 8007b0a:	e777      	b.n	80079fc <_dtoa_r+0x9cc>
 8007b0c:	f000 f9c2 	bl	8007e94 <__multadd>
 8007b10:	4629      	mov	r1, r5
 8007b12:	4607      	mov	r7, r0
 8007b14:	2300      	movs	r3, #0
 8007b16:	220a      	movs	r2, #10
 8007b18:	4648      	mov	r0, r9
 8007b1a:	f000 f9bb 	bl	8007e94 <__multadd>
 8007b1e:	4605      	mov	r5, r0
 8007b20:	e7f0      	b.n	8007b04 <_dtoa_r+0xad4>
 8007b22:	f1bb 0f00 	cmp.w	fp, #0
 8007b26:	bfcc      	ite	gt
 8007b28:	465e      	movgt	r6, fp
 8007b2a:	2601      	movle	r6, #1
 8007b2c:	4456      	add	r6, sl
 8007b2e:	2700      	movs	r7, #0
 8007b30:	9902      	ldr	r1, [sp, #8]
 8007b32:	9300      	str	r3, [sp, #0]
 8007b34:	2201      	movs	r2, #1
 8007b36:	4648      	mov	r0, r9
 8007b38:	f000 fb50 	bl	80081dc <__lshift>
 8007b3c:	4621      	mov	r1, r4
 8007b3e:	9002      	str	r0, [sp, #8]
 8007b40:	f000 fbb8 	bl	80082b4 <__mcmp>
 8007b44:	2800      	cmp	r0, #0
 8007b46:	dcb4      	bgt.n	8007ab2 <_dtoa_r+0xa82>
 8007b48:	d102      	bne.n	8007b50 <_dtoa_r+0xb20>
 8007b4a:	9b00      	ldr	r3, [sp, #0]
 8007b4c:	07db      	lsls	r3, r3, #31
 8007b4e:	d4b0      	bmi.n	8007ab2 <_dtoa_r+0xa82>
 8007b50:	4633      	mov	r3, r6
 8007b52:	461e      	mov	r6, r3
 8007b54:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 8007b58:	2a30      	cmp	r2, #48	@ 0x30
 8007b5a:	d0fa      	beq.n	8007b52 <_dtoa_r+0xb22>
 8007b5c:	e4b5      	b.n	80074ca <_dtoa_r+0x49a>
 8007b5e:	459a      	cmp	sl, r3
 8007b60:	d1a8      	bne.n	8007ab4 <_dtoa_r+0xa84>
 8007b62:	2331      	movs	r3, #49	@ 0x31
 8007b64:	f108 0801 	add.w	r8, r8, #1
 8007b68:	f88a 3000 	strb.w	r3, [sl]
 8007b6c:	e4ad      	b.n	80074ca <_dtoa_r+0x49a>
 8007b6e:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 8007b70:	f8df a058 	ldr.w	sl, [pc, #88]	@ 8007bcc <_dtoa_r+0xb9c>
 8007b74:	b11b      	cbz	r3, 8007b7e <_dtoa_r+0xb4e>
 8007b76:	f10a 0308 	add.w	r3, sl, #8
 8007b7a:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 8007b7c:	6013      	str	r3, [r2, #0]
 8007b7e:	4650      	mov	r0, sl
 8007b80:	b017      	add	sp, #92	@ 0x5c
 8007b82:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8007b86:	9b07      	ldr	r3, [sp, #28]
 8007b88:	2b01      	cmp	r3, #1
 8007b8a:	f77f ae2e 	ble.w	80077ea <_dtoa_r+0x7ba>
 8007b8e:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8007b90:	9308      	str	r3, [sp, #32]
 8007b92:	2001      	movs	r0, #1
 8007b94:	e64d      	b.n	8007832 <_dtoa_r+0x802>
 8007b96:	f1bb 0f00 	cmp.w	fp, #0
 8007b9a:	f77f aed9 	ble.w	8007950 <_dtoa_r+0x920>
 8007b9e:	4656      	mov	r6, sl
 8007ba0:	9802      	ldr	r0, [sp, #8]
 8007ba2:	4621      	mov	r1, r4
 8007ba4:	f7ff f9ba 	bl	8006f1c <quorem>
 8007ba8:	f100 0330 	add.w	r3, r0, #48	@ 0x30
 8007bac:	f806 3b01 	strb.w	r3, [r6], #1
 8007bb0:	eba6 020a 	sub.w	r2, r6, sl
 8007bb4:	4593      	cmp	fp, r2
 8007bb6:	ddb4      	ble.n	8007b22 <_dtoa_r+0xaf2>
 8007bb8:	9902      	ldr	r1, [sp, #8]
 8007bba:	2300      	movs	r3, #0
 8007bbc:	220a      	movs	r2, #10
 8007bbe:	4648      	mov	r0, r9
 8007bc0:	f000 f968 	bl	8007e94 <__multadd>
 8007bc4:	9002      	str	r0, [sp, #8]
 8007bc6:	e7eb      	b.n	8007ba0 <_dtoa_r+0xb70>
 8007bc8:	08009370 	.word	0x08009370
 8007bcc:	0800930b 	.word	0x0800930b

08007bd0 <_free_r>:
 8007bd0:	b538      	push	{r3, r4, r5, lr}
 8007bd2:	4605      	mov	r5, r0
 8007bd4:	2900      	cmp	r1, #0
 8007bd6:	d041      	beq.n	8007c5c <_free_r+0x8c>
 8007bd8:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8007bdc:	1f0c      	subs	r4, r1, #4
 8007bde:	2b00      	cmp	r3, #0
 8007be0:	bfb8      	it	lt
 8007be2:	18e4      	addlt	r4, r4, r3
 8007be4:	f000 f8e8 	bl	8007db8 <__malloc_lock>
 8007be8:	4a1d      	ldr	r2, [pc, #116]	@ (8007c60 <_free_r+0x90>)
 8007bea:	6813      	ldr	r3, [r2, #0]
 8007bec:	b933      	cbnz	r3, 8007bfc <_free_r+0x2c>
 8007bee:	6063      	str	r3, [r4, #4]
 8007bf0:	6014      	str	r4, [r2, #0]
 8007bf2:	4628      	mov	r0, r5
 8007bf4:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8007bf8:	f000 b8e4 	b.w	8007dc4 <__malloc_unlock>
 8007bfc:	42a3      	cmp	r3, r4
 8007bfe:	d908      	bls.n	8007c12 <_free_r+0x42>
 8007c00:	6820      	ldr	r0, [r4, #0]
 8007c02:	1821      	adds	r1, r4, r0
 8007c04:	428b      	cmp	r3, r1
 8007c06:	bf01      	itttt	eq
 8007c08:	6819      	ldreq	r1, [r3, #0]
 8007c0a:	685b      	ldreq	r3, [r3, #4]
 8007c0c:	1809      	addeq	r1, r1, r0
 8007c0e:	6021      	streq	r1, [r4, #0]
 8007c10:	e7ed      	b.n	8007bee <_free_r+0x1e>
 8007c12:	461a      	mov	r2, r3
 8007c14:	685b      	ldr	r3, [r3, #4]
 8007c16:	b10b      	cbz	r3, 8007c1c <_free_r+0x4c>
 8007c18:	42a3      	cmp	r3, r4
 8007c1a:	d9fa      	bls.n	8007c12 <_free_r+0x42>
 8007c1c:	6811      	ldr	r1, [r2, #0]
 8007c1e:	1850      	adds	r0, r2, r1
 8007c20:	42a0      	cmp	r0, r4
 8007c22:	d10b      	bne.n	8007c3c <_free_r+0x6c>
 8007c24:	6820      	ldr	r0, [r4, #0]
 8007c26:	4401      	add	r1, r0
 8007c28:	1850      	adds	r0, r2, r1
 8007c2a:	4283      	cmp	r3, r0
 8007c2c:	6011      	str	r1, [r2, #0]
 8007c2e:	d1e0      	bne.n	8007bf2 <_free_r+0x22>
 8007c30:	6818      	ldr	r0, [r3, #0]
 8007c32:	685b      	ldr	r3, [r3, #4]
 8007c34:	6053      	str	r3, [r2, #4]
 8007c36:	4408      	add	r0, r1
 8007c38:	6010      	str	r0, [r2, #0]
 8007c3a:	e7da      	b.n	8007bf2 <_free_r+0x22>
 8007c3c:	d902      	bls.n	8007c44 <_free_r+0x74>
 8007c3e:	230c      	movs	r3, #12
 8007c40:	602b      	str	r3, [r5, #0]
 8007c42:	e7d6      	b.n	8007bf2 <_free_r+0x22>
 8007c44:	6820      	ldr	r0, [r4, #0]
 8007c46:	1821      	adds	r1, r4, r0
 8007c48:	428b      	cmp	r3, r1
 8007c4a:	bf04      	itt	eq
 8007c4c:	6819      	ldreq	r1, [r3, #0]
 8007c4e:	685b      	ldreq	r3, [r3, #4]
 8007c50:	6063      	str	r3, [r4, #4]
 8007c52:	bf04      	itt	eq
 8007c54:	1809      	addeq	r1, r1, r0
 8007c56:	6021      	streq	r1, [r4, #0]
 8007c58:	6054      	str	r4, [r2, #4]
 8007c5a:	e7ca      	b.n	8007bf2 <_free_r+0x22>
 8007c5c:	bd38      	pop	{r3, r4, r5, pc}
 8007c5e:	bf00      	nop
 8007c60:	200006c4 	.word	0x200006c4

08007c64 <malloc>:
 8007c64:	4b02      	ldr	r3, [pc, #8]	@ (8007c70 <malloc+0xc>)
 8007c66:	4601      	mov	r1, r0
 8007c68:	6818      	ldr	r0, [r3, #0]
 8007c6a:	f000 b825 	b.w	8007cb8 <_malloc_r>
 8007c6e:	bf00      	nop
 8007c70:	20000048 	.word	0x20000048

08007c74 <sbrk_aligned>:
 8007c74:	b570      	push	{r4, r5, r6, lr}
 8007c76:	4e0f      	ldr	r6, [pc, #60]	@ (8007cb4 <sbrk_aligned+0x40>)
 8007c78:	460c      	mov	r4, r1
 8007c7a:	6831      	ldr	r1, [r6, #0]
 8007c7c:	4605      	mov	r5, r0
 8007c7e:	b911      	cbnz	r1, 8007c86 <sbrk_aligned+0x12>
 8007c80:	f000 fe50 	bl	8008924 <_sbrk_r>
 8007c84:	6030      	str	r0, [r6, #0]
 8007c86:	4621      	mov	r1, r4
 8007c88:	4628      	mov	r0, r5
 8007c8a:	f000 fe4b 	bl	8008924 <_sbrk_r>
 8007c8e:	1c43      	adds	r3, r0, #1
 8007c90:	d103      	bne.n	8007c9a <sbrk_aligned+0x26>
 8007c92:	f04f 34ff 	mov.w	r4, #4294967295
 8007c96:	4620      	mov	r0, r4
 8007c98:	bd70      	pop	{r4, r5, r6, pc}
 8007c9a:	1cc4      	adds	r4, r0, #3
 8007c9c:	f024 0403 	bic.w	r4, r4, #3
 8007ca0:	42a0      	cmp	r0, r4
 8007ca2:	d0f8      	beq.n	8007c96 <sbrk_aligned+0x22>
 8007ca4:	1a21      	subs	r1, r4, r0
 8007ca6:	4628      	mov	r0, r5
 8007ca8:	f000 fe3c 	bl	8008924 <_sbrk_r>
 8007cac:	3001      	adds	r0, #1
 8007cae:	d1f2      	bne.n	8007c96 <sbrk_aligned+0x22>
 8007cb0:	e7ef      	b.n	8007c92 <sbrk_aligned+0x1e>
 8007cb2:	bf00      	nop
 8007cb4:	200006c0 	.word	0x200006c0

08007cb8 <_malloc_r>:
 8007cb8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8007cbc:	1ccd      	adds	r5, r1, #3
 8007cbe:	f025 0503 	bic.w	r5, r5, #3
 8007cc2:	3508      	adds	r5, #8
 8007cc4:	2d0c      	cmp	r5, #12
 8007cc6:	bf38      	it	cc
 8007cc8:	250c      	movcc	r5, #12
 8007cca:	2d00      	cmp	r5, #0
 8007ccc:	4606      	mov	r6, r0
 8007cce:	db01      	blt.n	8007cd4 <_malloc_r+0x1c>
 8007cd0:	42a9      	cmp	r1, r5
 8007cd2:	d904      	bls.n	8007cde <_malloc_r+0x26>
 8007cd4:	230c      	movs	r3, #12
 8007cd6:	6033      	str	r3, [r6, #0]
 8007cd8:	2000      	movs	r0, #0
 8007cda:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8007cde:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 8007db4 <_malloc_r+0xfc>
 8007ce2:	f000 f869 	bl	8007db8 <__malloc_lock>
 8007ce6:	f8d8 3000 	ldr.w	r3, [r8]
 8007cea:	461c      	mov	r4, r3
 8007cec:	bb44      	cbnz	r4, 8007d40 <_malloc_r+0x88>
 8007cee:	4629      	mov	r1, r5
 8007cf0:	4630      	mov	r0, r6
 8007cf2:	f7ff ffbf 	bl	8007c74 <sbrk_aligned>
 8007cf6:	1c43      	adds	r3, r0, #1
 8007cf8:	4604      	mov	r4, r0
 8007cfa:	d158      	bne.n	8007dae <_malloc_r+0xf6>
 8007cfc:	f8d8 4000 	ldr.w	r4, [r8]
 8007d00:	4627      	mov	r7, r4
 8007d02:	2f00      	cmp	r7, #0
 8007d04:	d143      	bne.n	8007d8e <_malloc_r+0xd6>
 8007d06:	2c00      	cmp	r4, #0
 8007d08:	d04b      	beq.n	8007da2 <_malloc_r+0xea>
 8007d0a:	6823      	ldr	r3, [r4, #0]
 8007d0c:	4639      	mov	r1, r7
 8007d0e:	4630      	mov	r0, r6
 8007d10:	eb04 0903 	add.w	r9, r4, r3
 8007d14:	f000 fe06 	bl	8008924 <_sbrk_r>
 8007d18:	4581      	cmp	r9, r0
 8007d1a:	d142      	bne.n	8007da2 <_malloc_r+0xea>
 8007d1c:	6821      	ldr	r1, [r4, #0]
 8007d1e:	1a6d      	subs	r5, r5, r1
 8007d20:	4629      	mov	r1, r5
 8007d22:	4630      	mov	r0, r6
 8007d24:	f7ff ffa6 	bl	8007c74 <sbrk_aligned>
 8007d28:	3001      	adds	r0, #1
 8007d2a:	d03a      	beq.n	8007da2 <_malloc_r+0xea>
 8007d2c:	6823      	ldr	r3, [r4, #0]
 8007d2e:	442b      	add	r3, r5
 8007d30:	6023      	str	r3, [r4, #0]
 8007d32:	f8d8 3000 	ldr.w	r3, [r8]
 8007d36:	685a      	ldr	r2, [r3, #4]
 8007d38:	bb62      	cbnz	r2, 8007d94 <_malloc_r+0xdc>
 8007d3a:	f8c8 7000 	str.w	r7, [r8]
 8007d3e:	e00f      	b.n	8007d60 <_malloc_r+0xa8>
 8007d40:	6822      	ldr	r2, [r4, #0]
 8007d42:	1b52      	subs	r2, r2, r5
 8007d44:	d420      	bmi.n	8007d88 <_malloc_r+0xd0>
 8007d46:	2a0b      	cmp	r2, #11
 8007d48:	d917      	bls.n	8007d7a <_malloc_r+0xc2>
 8007d4a:	1961      	adds	r1, r4, r5
 8007d4c:	42a3      	cmp	r3, r4
 8007d4e:	6025      	str	r5, [r4, #0]
 8007d50:	bf18      	it	ne
 8007d52:	6059      	strne	r1, [r3, #4]
 8007d54:	6863      	ldr	r3, [r4, #4]
 8007d56:	bf08      	it	eq
 8007d58:	f8c8 1000 	streq.w	r1, [r8]
 8007d5c:	5162      	str	r2, [r4, r5]
 8007d5e:	604b      	str	r3, [r1, #4]
 8007d60:	4630      	mov	r0, r6
 8007d62:	f000 f82f 	bl	8007dc4 <__malloc_unlock>
 8007d66:	f104 000b 	add.w	r0, r4, #11
 8007d6a:	1d23      	adds	r3, r4, #4
 8007d6c:	f020 0007 	bic.w	r0, r0, #7
 8007d70:	1ac2      	subs	r2, r0, r3
 8007d72:	bf1c      	itt	ne
 8007d74:	1a1b      	subne	r3, r3, r0
 8007d76:	50a3      	strne	r3, [r4, r2]
 8007d78:	e7af      	b.n	8007cda <_malloc_r+0x22>
 8007d7a:	6862      	ldr	r2, [r4, #4]
 8007d7c:	42a3      	cmp	r3, r4
 8007d7e:	bf0c      	ite	eq
 8007d80:	f8c8 2000 	streq.w	r2, [r8]
 8007d84:	605a      	strne	r2, [r3, #4]
 8007d86:	e7eb      	b.n	8007d60 <_malloc_r+0xa8>
 8007d88:	4623      	mov	r3, r4
 8007d8a:	6864      	ldr	r4, [r4, #4]
 8007d8c:	e7ae      	b.n	8007cec <_malloc_r+0x34>
 8007d8e:	463c      	mov	r4, r7
 8007d90:	687f      	ldr	r7, [r7, #4]
 8007d92:	e7b6      	b.n	8007d02 <_malloc_r+0x4a>
 8007d94:	461a      	mov	r2, r3
 8007d96:	685b      	ldr	r3, [r3, #4]
 8007d98:	42a3      	cmp	r3, r4
 8007d9a:	d1fb      	bne.n	8007d94 <_malloc_r+0xdc>
 8007d9c:	2300      	movs	r3, #0
 8007d9e:	6053      	str	r3, [r2, #4]
 8007da0:	e7de      	b.n	8007d60 <_malloc_r+0xa8>
 8007da2:	230c      	movs	r3, #12
 8007da4:	6033      	str	r3, [r6, #0]
 8007da6:	4630      	mov	r0, r6
 8007da8:	f000 f80c 	bl	8007dc4 <__malloc_unlock>
 8007dac:	e794      	b.n	8007cd8 <_malloc_r+0x20>
 8007dae:	6005      	str	r5, [r0, #0]
 8007db0:	e7d6      	b.n	8007d60 <_malloc_r+0xa8>
 8007db2:	bf00      	nop
 8007db4:	200006c4 	.word	0x200006c4

08007db8 <__malloc_lock>:
 8007db8:	4801      	ldr	r0, [pc, #4]	@ (8007dc0 <__malloc_lock+0x8>)
 8007dba:	f7ff b88e 	b.w	8006eda <__retarget_lock_acquire_recursive>
 8007dbe:	bf00      	nop
 8007dc0:	200006bc 	.word	0x200006bc

08007dc4 <__malloc_unlock>:
 8007dc4:	4801      	ldr	r0, [pc, #4]	@ (8007dcc <__malloc_unlock+0x8>)
 8007dc6:	f7ff b889 	b.w	8006edc <__retarget_lock_release_recursive>
 8007dca:	bf00      	nop
 8007dcc:	200006bc 	.word	0x200006bc

08007dd0 <_Balloc>:
 8007dd0:	b570      	push	{r4, r5, r6, lr}
 8007dd2:	69c6      	ldr	r6, [r0, #28]
 8007dd4:	4604      	mov	r4, r0
 8007dd6:	460d      	mov	r5, r1
 8007dd8:	b976      	cbnz	r6, 8007df8 <_Balloc+0x28>
 8007dda:	2010      	movs	r0, #16
 8007ddc:	f7ff ff42 	bl	8007c64 <malloc>
 8007de0:	4602      	mov	r2, r0
 8007de2:	61e0      	str	r0, [r4, #28]
 8007de4:	b920      	cbnz	r0, 8007df0 <_Balloc+0x20>
 8007de6:	4b18      	ldr	r3, [pc, #96]	@ (8007e48 <_Balloc+0x78>)
 8007de8:	4818      	ldr	r0, [pc, #96]	@ (8007e4c <_Balloc+0x7c>)
 8007dea:	216b      	movs	r1, #107	@ 0x6b
 8007dec:	f7ff f878 	bl	8006ee0 <__assert_func>
 8007df0:	e9c0 6601 	strd	r6, r6, [r0, #4]
 8007df4:	6006      	str	r6, [r0, #0]
 8007df6:	60c6      	str	r6, [r0, #12]
 8007df8:	69e6      	ldr	r6, [r4, #28]
 8007dfa:	68f3      	ldr	r3, [r6, #12]
 8007dfc:	b183      	cbz	r3, 8007e20 <_Balloc+0x50>
 8007dfe:	69e3      	ldr	r3, [r4, #28]
 8007e00:	68db      	ldr	r3, [r3, #12]
 8007e02:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
 8007e06:	b9b8      	cbnz	r0, 8007e38 <_Balloc+0x68>
 8007e08:	2101      	movs	r1, #1
 8007e0a:	fa01 f605 	lsl.w	r6, r1, r5
 8007e0e:	1d72      	adds	r2, r6, #5
 8007e10:	0092      	lsls	r2, r2, #2
 8007e12:	4620      	mov	r0, r4
 8007e14:	f000 fdab 	bl	800896e <_calloc_r>
 8007e18:	b160      	cbz	r0, 8007e34 <_Balloc+0x64>
 8007e1a:	e9c0 5601 	strd	r5, r6, [r0, #4]
 8007e1e:	e00e      	b.n	8007e3e <_Balloc+0x6e>
 8007e20:	2221      	movs	r2, #33	@ 0x21
 8007e22:	2104      	movs	r1, #4
 8007e24:	4620      	mov	r0, r4
 8007e26:	f000 fda2 	bl	800896e <_calloc_r>
 8007e2a:	69e3      	ldr	r3, [r4, #28]
 8007e2c:	60f0      	str	r0, [r6, #12]
 8007e2e:	68db      	ldr	r3, [r3, #12]
 8007e30:	2b00      	cmp	r3, #0
 8007e32:	d1e4      	bne.n	8007dfe <_Balloc+0x2e>
 8007e34:	2000      	movs	r0, #0
 8007e36:	bd70      	pop	{r4, r5, r6, pc}
 8007e38:	6802      	ldr	r2, [r0, #0]
 8007e3a:	f843 2025 	str.w	r2, [r3, r5, lsl #2]
 8007e3e:	2300      	movs	r3, #0
 8007e40:	e9c0 3303 	strd	r3, r3, [r0, #12]
 8007e44:	e7f7      	b.n	8007e36 <_Balloc+0x66>
 8007e46:	bf00      	nop
 8007e48:	0800922c 	.word	0x0800922c
 8007e4c:	08009381 	.word	0x08009381

08007e50 <_Bfree>:
 8007e50:	b570      	push	{r4, r5, r6, lr}
 8007e52:	69c6      	ldr	r6, [r0, #28]
 8007e54:	4605      	mov	r5, r0
 8007e56:	460c      	mov	r4, r1
 8007e58:	b976      	cbnz	r6, 8007e78 <_Bfree+0x28>
 8007e5a:	2010      	movs	r0, #16
 8007e5c:	f7ff ff02 	bl	8007c64 <malloc>
 8007e60:	4602      	mov	r2, r0
 8007e62:	61e8      	str	r0, [r5, #28]
 8007e64:	b920      	cbnz	r0, 8007e70 <_Bfree+0x20>
 8007e66:	4b09      	ldr	r3, [pc, #36]	@ (8007e8c <_Bfree+0x3c>)
 8007e68:	4809      	ldr	r0, [pc, #36]	@ (8007e90 <_Bfree+0x40>)
 8007e6a:	218f      	movs	r1, #143	@ 0x8f
 8007e6c:	f7ff f838 	bl	8006ee0 <__assert_func>
 8007e70:	e9c0 6601 	strd	r6, r6, [r0, #4]
 8007e74:	6006      	str	r6, [r0, #0]
 8007e76:	60c6      	str	r6, [r0, #12]
 8007e78:	b13c      	cbz	r4, 8007e8a <_Bfree+0x3a>
 8007e7a:	69eb      	ldr	r3, [r5, #28]
 8007e7c:	6862      	ldr	r2, [r4, #4]
 8007e7e:	68db      	ldr	r3, [r3, #12]
 8007e80:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8007e84:	6021      	str	r1, [r4, #0]
 8007e86:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
 8007e8a:	bd70      	pop	{r4, r5, r6, pc}
 8007e8c:	0800922c 	.word	0x0800922c
 8007e90:	08009381 	.word	0x08009381

08007e94 <__multadd>:
 8007e94:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8007e98:	690d      	ldr	r5, [r1, #16]
 8007e9a:	4607      	mov	r7, r0
 8007e9c:	460c      	mov	r4, r1
 8007e9e:	461e      	mov	r6, r3
 8007ea0:	f101 0c14 	add.w	ip, r1, #20
 8007ea4:	2000      	movs	r0, #0
 8007ea6:	f8dc 3000 	ldr.w	r3, [ip]
 8007eaa:	b299      	uxth	r1, r3
 8007eac:	fb02 6101 	mla	r1, r2, r1, r6
 8007eb0:	0c1e      	lsrs	r6, r3, #16
 8007eb2:	0c0b      	lsrs	r3, r1, #16
 8007eb4:	fb02 3306 	mla	r3, r2, r6, r3
 8007eb8:	b289      	uxth	r1, r1
 8007eba:	3001      	adds	r0, #1
 8007ebc:	eb01 4103 	add.w	r1, r1, r3, lsl #16
 8007ec0:	4285      	cmp	r5, r0
 8007ec2:	f84c 1b04 	str.w	r1, [ip], #4
 8007ec6:	ea4f 4613 	mov.w	r6, r3, lsr #16
 8007eca:	dcec      	bgt.n	8007ea6 <__multadd+0x12>
 8007ecc:	b30e      	cbz	r6, 8007f12 <__multadd+0x7e>
 8007ece:	68a3      	ldr	r3, [r4, #8]
 8007ed0:	42ab      	cmp	r3, r5
 8007ed2:	dc19      	bgt.n	8007f08 <__multadd+0x74>
 8007ed4:	6861      	ldr	r1, [r4, #4]
 8007ed6:	4638      	mov	r0, r7
 8007ed8:	3101      	adds	r1, #1
 8007eda:	f7ff ff79 	bl	8007dd0 <_Balloc>
 8007ede:	4680      	mov	r8, r0
 8007ee0:	b928      	cbnz	r0, 8007eee <__multadd+0x5a>
 8007ee2:	4602      	mov	r2, r0
 8007ee4:	4b0c      	ldr	r3, [pc, #48]	@ (8007f18 <__multadd+0x84>)
 8007ee6:	480d      	ldr	r0, [pc, #52]	@ (8007f1c <__multadd+0x88>)
 8007ee8:	21ba      	movs	r1, #186	@ 0xba
 8007eea:	f7fe fff9 	bl	8006ee0 <__assert_func>
 8007eee:	6922      	ldr	r2, [r4, #16]
 8007ef0:	3202      	adds	r2, #2
 8007ef2:	f104 010c 	add.w	r1, r4, #12
 8007ef6:	0092      	lsls	r2, r2, #2
 8007ef8:	300c      	adds	r0, #12
 8007efa:	f000 fd23 	bl	8008944 <memcpy>
 8007efe:	4621      	mov	r1, r4
 8007f00:	4638      	mov	r0, r7
 8007f02:	f7ff ffa5 	bl	8007e50 <_Bfree>
 8007f06:	4644      	mov	r4, r8
 8007f08:	eb04 0385 	add.w	r3, r4, r5, lsl #2
 8007f0c:	3501      	adds	r5, #1
 8007f0e:	615e      	str	r6, [r3, #20]
 8007f10:	6125      	str	r5, [r4, #16]
 8007f12:	4620      	mov	r0, r4
 8007f14:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8007f18:	08009370 	.word	0x08009370
 8007f1c:	08009381 	.word	0x08009381

08007f20 <__hi0bits>:
 8007f20:	f5b0 3f80 	cmp.w	r0, #65536	@ 0x10000
 8007f24:	4603      	mov	r3, r0
 8007f26:	bf36      	itet	cc
 8007f28:	0403      	lslcc	r3, r0, #16
 8007f2a:	2000      	movcs	r0, #0
 8007f2c:	2010      	movcc	r0, #16
 8007f2e:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 8007f32:	bf3c      	itt	cc
 8007f34:	021b      	lslcc	r3, r3, #8
 8007f36:	3008      	addcc	r0, #8
 8007f38:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
 8007f3c:	bf3c      	itt	cc
 8007f3e:	011b      	lslcc	r3, r3, #4
 8007f40:	3004      	addcc	r0, #4
 8007f42:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8007f46:	bf3c      	itt	cc
 8007f48:	009b      	lslcc	r3, r3, #2
 8007f4a:	3002      	addcc	r0, #2
 8007f4c:	2b00      	cmp	r3, #0
 8007f4e:	db05      	blt.n	8007f5c <__hi0bits+0x3c>
 8007f50:	f013 4f80 	tst.w	r3, #1073741824	@ 0x40000000
 8007f54:	f100 0001 	add.w	r0, r0, #1
 8007f58:	bf08      	it	eq
 8007f5a:	2020      	moveq	r0, #32
 8007f5c:	4770      	bx	lr

08007f5e <__lo0bits>:
 8007f5e:	6803      	ldr	r3, [r0, #0]
 8007f60:	4602      	mov	r2, r0
 8007f62:	f013 0007 	ands.w	r0, r3, #7
 8007f66:	d00b      	beq.n	8007f80 <__lo0bits+0x22>
 8007f68:	07d9      	lsls	r1, r3, #31
 8007f6a:	d421      	bmi.n	8007fb0 <__lo0bits+0x52>
 8007f6c:	0798      	lsls	r0, r3, #30
 8007f6e:	bf49      	itett	mi
 8007f70:	085b      	lsrmi	r3, r3, #1
 8007f72:	089b      	lsrpl	r3, r3, #2
 8007f74:	2001      	movmi	r0, #1
 8007f76:	6013      	strmi	r3, [r2, #0]
 8007f78:	bf5c      	itt	pl
 8007f7a:	6013      	strpl	r3, [r2, #0]
 8007f7c:	2002      	movpl	r0, #2
 8007f7e:	4770      	bx	lr
 8007f80:	b299      	uxth	r1, r3
 8007f82:	b909      	cbnz	r1, 8007f88 <__lo0bits+0x2a>
 8007f84:	0c1b      	lsrs	r3, r3, #16
 8007f86:	2010      	movs	r0, #16
 8007f88:	b2d9      	uxtb	r1, r3
 8007f8a:	b909      	cbnz	r1, 8007f90 <__lo0bits+0x32>
 8007f8c:	3008      	adds	r0, #8
 8007f8e:	0a1b      	lsrs	r3, r3, #8
 8007f90:	0719      	lsls	r1, r3, #28
 8007f92:	bf04      	itt	eq
 8007f94:	091b      	lsreq	r3, r3, #4
 8007f96:	3004      	addeq	r0, #4
 8007f98:	0799      	lsls	r1, r3, #30
 8007f9a:	bf04      	itt	eq
 8007f9c:	089b      	lsreq	r3, r3, #2
 8007f9e:	3002      	addeq	r0, #2
 8007fa0:	07d9      	lsls	r1, r3, #31
 8007fa2:	d403      	bmi.n	8007fac <__lo0bits+0x4e>
 8007fa4:	085b      	lsrs	r3, r3, #1
 8007fa6:	f100 0001 	add.w	r0, r0, #1
 8007faa:	d003      	beq.n	8007fb4 <__lo0bits+0x56>
 8007fac:	6013      	str	r3, [r2, #0]
 8007fae:	4770      	bx	lr
 8007fb0:	2000      	movs	r0, #0
 8007fb2:	4770      	bx	lr
 8007fb4:	2020      	movs	r0, #32
 8007fb6:	4770      	bx	lr

08007fb8 <__i2b>:
 8007fb8:	b510      	push	{r4, lr}
 8007fba:	460c      	mov	r4, r1
 8007fbc:	2101      	movs	r1, #1
 8007fbe:	f7ff ff07 	bl	8007dd0 <_Balloc>
 8007fc2:	4602      	mov	r2, r0
 8007fc4:	b928      	cbnz	r0, 8007fd2 <__i2b+0x1a>
 8007fc6:	4b05      	ldr	r3, [pc, #20]	@ (8007fdc <__i2b+0x24>)
 8007fc8:	4805      	ldr	r0, [pc, #20]	@ (8007fe0 <__i2b+0x28>)
 8007fca:	f240 1145 	movw	r1, #325	@ 0x145
 8007fce:	f7fe ff87 	bl	8006ee0 <__assert_func>
 8007fd2:	2301      	movs	r3, #1
 8007fd4:	6144      	str	r4, [r0, #20]
 8007fd6:	6103      	str	r3, [r0, #16]
 8007fd8:	bd10      	pop	{r4, pc}
 8007fda:	bf00      	nop
 8007fdc:	08009370 	.word	0x08009370
 8007fe0:	08009381 	.word	0x08009381

08007fe4 <__multiply>:
 8007fe4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007fe8:	4617      	mov	r7, r2
 8007fea:	690a      	ldr	r2, [r1, #16]
 8007fec:	693b      	ldr	r3, [r7, #16]
 8007fee:	429a      	cmp	r2, r3
 8007ff0:	bfa8      	it	ge
 8007ff2:	463b      	movge	r3, r7
 8007ff4:	4689      	mov	r9, r1
 8007ff6:	bfa4      	itt	ge
 8007ff8:	460f      	movge	r7, r1
 8007ffa:	4699      	movge	r9, r3
 8007ffc:	693d      	ldr	r5, [r7, #16]
 8007ffe:	f8d9 a010 	ldr.w	sl, [r9, #16]
 8008002:	68bb      	ldr	r3, [r7, #8]
 8008004:	6879      	ldr	r1, [r7, #4]
 8008006:	eb05 060a 	add.w	r6, r5, sl
 800800a:	42b3      	cmp	r3, r6
 800800c:	b085      	sub	sp, #20
 800800e:	bfb8      	it	lt
 8008010:	3101      	addlt	r1, #1
 8008012:	f7ff fedd 	bl	8007dd0 <_Balloc>
 8008016:	b930      	cbnz	r0, 8008026 <__multiply+0x42>
 8008018:	4602      	mov	r2, r0
 800801a:	4b41      	ldr	r3, [pc, #260]	@ (8008120 <__multiply+0x13c>)
 800801c:	4841      	ldr	r0, [pc, #260]	@ (8008124 <__multiply+0x140>)
 800801e:	f44f 71b1 	mov.w	r1, #354	@ 0x162
 8008022:	f7fe ff5d 	bl	8006ee0 <__assert_func>
 8008026:	f100 0414 	add.w	r4, r0, #20
 800802a:	eb04 0e86 	add.w	lr, r4, r6, lsl #2
 800802e:	4623      	mov	r3, r4
 8008030:	2200      	movs	r2, #0
 8008032:	4573      	cmp	r3, lr
 8008034:	d320      	bcc.n	8008078 <__multiply+0x94>
 8008036:	f107 0814 	add.w	r8, r7, #20
 800803a:	f109 0114 	add.w	r1, r9, #20
 800803e:	eb08 0585 	add.w	r5, r8, r5, lsl #2
 8008042:	eb01 038a 	add.w	r3, r1, sl, lsl #2
 8008046:	9302      	str	r3, [sp, #8]
 8008048:	1beb      	subs	r3, r5, r7
 800804a:	3b15      	subs	r3, #21
 800804c:	f023 0303 	bic.w	r3, r3, #3
 8008050:	3304      	adds	r3, #4
 8008052:	3715      	adds	r7, #21
 8008054:	42bd      	cmp	r5, r7
 8008056:	bf38      	it	cc
 8008058:	2304      	movcc	r3, #4
 800805a:	9301      	str	r3, [sp, #4]
 800805c:	9b02      	ldr	r3, [sp, #8]
 800805e:	9103      	str	r1, [sp, #12]
 8008060:	428b      	cmp	r3, r1
 8008062:	d80c      	bhi.n	800807e <__multiply+0x9a>
 8008064:	2e00      	cmp	r6, #0
 8008066:	dd03      	ble.n	8008070 <__multiply+0x8c>
 8008068:	f85e 3d04 	ldr.w	r3, [lr, #-4]!
 800806c:	2b00      	cmp	r3, #0
 800806e:	d055      	beq.n	800811c <__multiply+0x138>
 8008070:	6106      	str	r6, [r0, #16]
 8008072:	b005      	add	sp, #20
 8008074:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8008078:	f843 2b04 	str.w	r2, [r3], #4
 800807c:	e7d9      	b.n	8008032 <__multiply+0x4e>
 800807e:	f8b1 a000 	ldrh.w	sl, [r1]
 8008082:	f1ba 0f00 	cmp.w	sl, #0
 8008086:	d01f      	beq.n	80080c8 <__multiply+0xe4>
 8008088:	46c4      	mov	ip, r8
 800808a:	46a1      	mov	r9, r4
 800808c:	2700      	movs	r7, #0
 800808e:	f85c 2b04 	ldr.w	r2, [ip], #4
 8008092:	f8d9 3000 	ldr.w	r3, [r9]
 8008096:	fa1f fb82 	uxth.w	fp, r2
 800809a:	b29b      	uxth	r3, r3
 800809c:	fb0a 330b 	mla	r3, sl, fp, r3
 80080a0:	443b      	add	r3, r7
 80080a2:	f8d9 7000 	ldr.w	r7, [r9]
 80080a6:	0c12      	lsrs	r2, r2, #16
 80080a8:	0c3f      	lsrs	r7, r7, #16
 80080aa:	fb0a 7202 	mla	r2, sl, r2, r7
 80080ae:	eb02 4213 	add.w	r2, r2, r3, lsr #16
 80080b2:	b29b      	uxth	r3, r3
 80080b4:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 80080b8:	4565      	cmp	r5, ip
 80080ba:	f849 3b04 	str.w	r3, [r9], #4
 80080be:	ea4f 4712 	mov.w	r7, r2, lsr #16
 80080c2:	d8e4      	bhi.n	800808e <__multiply+0xaa>
 80080c4:	9b01      	ldr	r3, [sp, #4]
 80080c6:	50e7      	str	r7, [r4, r3]
 80080c8:	9b03      	ldr	r3, [sp, #12]
 80080ca:	f8b3 9002 	ldrh.w	r9, [r3, #2]
 80080ce:	3104      	adds	r1, #4
 80080d0:	f1b9 0f00 	cmp.w	r9, #0
 80080d4:	d020      	beq.n	8008118 <__multiply+0x134>
 80080d6:	6823      	ldr	r3, [r4, #0]
 80080d8:	4647      	mov	r7, r8
 80080da:	46a4      	mov	ip, r4
 80080dc:	f04f 0a00 	mov.w	sl, #0
 80080e0:	f8b7 b000 	ldrh.w	fp, [r7]
 80080e4:	f8bc 2002 	ldrh.w	r2, [ip, #2]
 80080e8:	fb09 220b 	mla	r2, r9, fp, r2
 80080ec:	4452      	add	r2, sl
 80080ee:	b29b      	uxth	r3, r3
 80080f0:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 80080f4:	f84c 3b04 	str.w	r3, [ip], #4
 80080f8:	f857 3b04 	ldr.w	r3, [r7], #4
 80080fc:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 8008100:	f8bc 3000 	ldrh.w	r3, [ip]
 8008104:	fb09 330a 	mla	r3, r9, sl, r3
 8008108:	eb03 4312 	add.w	r3, r3, r2, lsr #16
 800810c:	42bd      	cmp	r5, r7
 800810e:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 8008112:	d8e5      	bhi.n	80080e0 <__multiply+0xfc>
 8008114:	9a01      	ldr	r2, [sp, #4]
 8008116:	50a3      	str	r3, [r4, r2]
 8008118:	3404      	adds	r4, #4
 800811a:	e79f      	b.n	800805c <__multiply+0x78>
 800811c:	3e01      	subs	r6, #1
 800811e:	e7a1      	b.n	8008064 <__multiply+0x80>
 8008120:	08009370 	.word	0x08009370
 8008124:	08009381 	.word	0x08009381

08008128 <__pow5mult>:
 8008128:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800812c:	4615      	mov	r5, r2
 800812e:	f012 0203 	ands.w	r2, r2, #3
 8008132:	4607      	mov	r7, r0
 8008134:	460e      	mov	r6, r1
 8008136:	d007      	beq.n	8008148 <__pow5mult+0x20>
 8008138:	4c25      	ldr	r4, [pc, #148]	@ (80081d0 <__pow5mult+0xa8>)
 800813a:	3a01      	subs	r2, #1
 800813c:	2300      	movs	r3, #0
 800813e:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
 8008142:	f7ff fea7 	bl	8007e94 <__multadd>
 8008146:	4606      	mov	r6, r0
 8008148:	10ad      	asrs	r5, r5, #2
 800814a:	d03d      	beq.n	80081c8 <__pow5mult+0xa0>
 800814c:	69fc      	ldr	r4, [r7, #28]
 800814e:	b97c      	cbnz	r4, 8008170 <__pow5mult+0x48>
 8008150:	2010      	movs	r0, #16
 8008152:	f7ff fd87 	bl	8007c64 <malloc>
 8008156:	4602      	mov	r2, r0
 8008158:	61f8      	str	r0, [r7, #28]
 800815a:	b928      	cbnz	r0, 8008168 <__pow5mult+0x40>
 800815c:	4b1d      	ldr	r3, [pc, #116]	@ (80081d4 <__pow5mult+0xac>)
 800815e:	481e      	ldr	r0, [pc, #120]	@ (80081d8 <__pow5mult+0xb0>)
 8008160:	f240 11b3 	movw	r1, #435	@ 0x1b3
 8008164:	f7fe febc 	bl	8006ee0 <__assert_func>
 8008168:	e9c0 4401 	strd	r4, r4, [r0, #4]
 800816c:	6004      	str	r4, [r0, #0]
 800816e:	60c4      	str	r4, [r0, #12]
 8008170:	f8d7 801c 	ldr.w	r8, [r7, #28]
 8008174:	f8d8 4008 	ldr.w	r4, [r8, #8]
 8008178:	b94c      	cbnz	r4, 800818e <__pow5mult+0x66>
 800817a:	f240 2171 	movw	r1, #625	@ 0x271
 800817e:	4638      	mov	r0, r7
 8008180:	f7ff ff1a 	bl	8007fb8 <__i2b>
 8008184:	2300      	movs	r3, #0
 8008186:	f8c8 0008 	str.w	r0, [r8, #8]
 800818a:	4604      	mov	r4, r0
 800818c:	6003      	str	r3, [r0, #0]
 800818e:	f04f 0900 	mov.w	r9, #0
 8008192:	07eb      	lsls	r3, r5, #31
 8008194:	d50a      	bpl.n	80081ac <__pow5mult+0x84>
 8008196:	4631      	mov	r1, r6
 8008198:	4622      	mov	r2, r4
 800819a:	4638      	mov	r0, r7
 800819c:	f7ff ff22 	bl	8007fe4 <__multiply>
 80081a0:	4631      	mov	r1, r6
 80081a2:	4680      	mov	r8, r0
 80081a4:	4638      	mov	r0, r7
 80081a6:	f7ff fe53 	bl	8007e50 <_Bfree>
 80081aa:	4646      	mov	r6, r8
 80081ac:	106d      	asrs	r5, r5, #1
 80081ae:	d00b      	beq.n	80081c8 <__pow5mult+0xa0>
 80081b0:	6820      	ldr	r0, [r4, #0]
 80081b2:	b938      	cbnz	r0, 80081c4 <__pow5mult+0x9c>
 80081b4:	4622      	mov	r2, r4
 80081b6:	4621      	mov	r1, r4
 80081b8:	4638      	mov	r0, r7
 80081ba:	f7ff ff13 	bl	8007fe4 <__multiply>
 80081be:	6020      	str	r0, [r4, #0]
 80081c0:	f8c0 9000 	str.w	r9, [r0]
 80081c4:	4604      	mov	r4, r0
 80081c6:	e7e4      	b.n	8008192 <__pow5mult+0x6a>
 80081c8:	4630      	mov	r0, r6
 80081ca:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80081ce:	bf00      	nop
 80081d0:	080093f8 	.word	0x080093f8
 80081d4:	0800922c 	.word	0x0800922c
 80081d8:	08009381 	.word	0x08009381

080081dc <__lshift>:
 80081dc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80081e0:	460c      	mov	r4, r1
 80081e2:	6849      	ldr	r1, [r1, #4]
 80081e4:	6923      	ldr	r3, [r4, #16]
 80081e6:	eb03 1862 	add.w	r8, r3, r2, asr #5
 80081ea:	68a3      	ldr	r3, [r4, #8]
 80081ec:	4607      	mov	r7, r0
 80081ee:	4691      	mov	r9, r2
 80081f0:	ea4f 1a62 	mov.w	sl, r2, asr #5
 80081f4:	f108 0601 	add.w	r6, r8, #1
 80081f8:	42b3      	cmp	r3, r6
 80081fa:	db0b      	blt.n	8008214 <__lshift+0x38>
 80081fc:	4638      	mov	r0, r7
 80081fe:	f7ff fde7 	bl	8007dd0 <_Balloc>
 8008202:	4605      	mov	r5, r0
 8008204:	b948      	cbnz	r0, 800821a <__lshift+0x3e>
 8008206:	4602      	mov	r2, r0
 8008208:	4b28      	ldr	r3, [pc, #160]	@ (80082ac <__lshift+0xd0>)
 800820a:	4829      	ldr	r0, [pc, #164]	@ (80082b0 <__lshift+0xd4>)
 800820c:	f44f 71ef 	mov.w	r1, #478	@ 0x1de
 8008210:	f7fe fe66 	bl	8006ee0 <__assert_func>
 8008214:	3101      	adds	r1, #1
 8008216:	005b      	lsls	r3, r3, #1
 8008218:	e7ee      	b.n	80081f8 <__lshift+0x1c>
 800821a:	2300      	movs	r3, #0
 800821c:	f100 0114 	add.w	r1, r0, #20
 8008220:	f100 0210 	add.w	r2, r0, #16
 8008224:	4618      	mov	r0, r3
 8008226:	4553      	cmp	r3, sl
 8008228:	db33      	blt.n	8008292 <__lshift+0xb6>
 800822a:	6920      	ldr	r0, [r4, #16]
 800822c:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 8008230:	f104 0314 	add.w	r3, r4, #20
 8008234:	f019 091f 	ands.w	r9, r9, #31
 8008238:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 800823c:	eb03 0c80 	add.w	ip, r3, r0, lsl #2
 8008240:	d02b      	beq.n	800829a <__lshift+0xbe>
 8008242:	f1c9 0e20 	rsb	lr, r9, #32
 8008246:	468a      	mov	sl, r1
 8008248:	2200      	movs	r2, #0
 800824a:	6818      	ldr	r0, [r3, #0]
 800824c:	fa00 f009 	lsl.w	r0, r0, r9
 8008250:	4310      	orrs	r0, r2
 8008252:	f84a 0b04 	str.w	r0, [sl], #4
 8008256:	f853 2b04 	ldr.w	r2, [r3], #4
 800825a:	459c      	cmp	ip, r3
 800825c:	fa22 f20e 	lsr.w	r2, r2, lr
 8008260:	d8f3      	bhi.n	800824a <__lshift+0x6e>
 8008262:	ebac 0304 	sub.w	r3, ip, r4
 8008266:	3b15      	subs	r3, #21
 8008268:	f023 0303 	bic.w	r3, r3, #3
 800826c:	3304      	adds	r3, #4
 800826e:	f104 0015 	add.w	r0, r4, #21
 8008272:	4560      	cmp	r0, ip
 8008274:	bf88      	it	hi
 8008276:	2304      	movhi	r3, #4
 8008278:	50ca      	str	r2, [r1, r3]
 800827a:	b10a      	cbz	r2, 8008280 <__lshift+0xa4>
 800827c:	f108 0602 	add.w	r6, r8, #2
 8008280:	3e01      	subs	r6, #1
 8008282:	4638      	mov	r0, r7
 8008284:	612e      	str	r6, [r5, #16]
 8008286:	4621      	mov	r1, r4
 8008288:	f7ff fde2 	bl	8007e50 <_Bfree>
 800828c:	4628      	mov	r0, r5
 800828e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8008292:	f842 0f04 	str.w	r0, [r2, #4]!
 8008296:	3301      	adds	r3, #1
 8008298:	e7c5      	b.n	8008226 <__lshift+0x4a>
 800829a:	3904      	subs	r1, #4
 800829c:	f853 2b04 	ldr.w	r2, [r3], #4
 80082a0:	f841 2f04 	str.w	r2, [r1, #4]!
 80082a4:	459c      	cmp	ip, r3
 80082a6:	d8f9      	bhi.n	800829c <__lshift+0xc0>
 80082a8:	e7ea      	b.n	8008280 <__lshift+0xa4>
 80082aa:	bf00      	nop
 80082ac:	08009370 	.word	0x08009370
 80082b0:	08009381 	.word	0x08009381

080082b4 <__mcmp>:
 80082b4:	690a      	ldr	r2, [r1, #16]
 80082b6:	4603      	mov	r3, r0
 80082b8:	6900      	ldr	r0, [r0, #16]
 80082ba:	1a80      	subs	r0, r0, r2
 80082bc:	b530      	push	{r4, r5, lr}
 80082be:	d10e      	bne.n	80082de <__mcmp+0x2a>
 80082c0:	3314      	adds	r3, #20
 80082c2:	3114      	adds	r1, #20
 80082c4:	eb03 0482 	add.w	r4, r3, r2, lsl #2
 80082c8:	eb01 0182 	add.w	r1, r1, r2, lsl #2
 80082cc:	f854 5d04 	ldr.w	r5, [r4, #-4]!
 80082d0:	f851 2d04 	ldr.w	r2, [r1, #-4]!
 80082d4:	4295      	cmp	r5, r2
 80082d6:	d003      	beq.n	80082e0 <__mcmp+0x2c>
 80082d8:	d205      	bcs.n	80082e6 <__mcmp+0x32>
 80082da:	f04f 30ff 	mov.w	r0, #4294967295
 80082de:	bd30      	pop	{r4, r5, pc}
 80082e0:	42a3      	cmp	r3, r4
 80082e2:	d3f3      	bcc.n	80082cc <__mcmp+0x18>
 80082e4:	e7fb      	b.n	80082de <__mcmp+0x2a>
 80082e6:	2001      	movs	r0, #1
 80082e8:	e7f9      	b.n	80082de <__mcmp+0x2a>
	...

080082ec <__mdiff>:
 80082ec:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80082f0:	4689      	mov	r9, r1
 80082f2:	4606      	mov	r6, r0
 80082f4:	4611      	mov	r1, r2
 80082f6:	4648      	mov	r0, r9
 80082f8:	4614      	mov	r4, r2
 80082fa:	f7ff ffdb 	bl	80082b4 <__mcmp>
 80082fe:	1e05      	subs	r5, r0, #0
 8008300:	d112      	bne.n	8008328 <__mdiff+0x3c>
 8008302:	4629      	mov	r1, r5
 8008304:	4630      	mov	r0, r6
 8008306:	f7ff fd63 	bl	8007dd0 <_Balloc>
 800830a:	4602      	mov	r2, r0
 800830c:	b928      	cbnz	r0, 800831a <__mdiff+0x2e>
 800830e:	4b3f      	ldr	r3, [pc, #252]	@ (800840c <__mdiff+0x120>)
 8008310:	f240 2137 	movw	r1, #567	@ 0x237
 8008314:	483e      	ldr	r0, [pc, #248]	@ (8008410 <__mdiff+0x124>)
 8008316:	f7fe fde3 	bl	8006ee0 <__assert_func>
 800831a:	2301      	movs	r3, #1
 800831c:	e9c0 3504 	strd	r3, r5, [r0, #16]
 8008320:	4610      	mov	r0, r2
 8008322:	b003      	add	sp, #12
 8008324:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8008328:	bfbc      	itt	lt
 800832a:	464b      	movlt	r3, r9
 800832c:	46a1      	movlt	r9, r4
 800832e:	4630      	mov	r0, r6
 8008330:	f8d9 1004 	ldr.w	r1, [r9, #4]
 8008334:	bfba      	itte	lt
 8008336:	461c      	movlt	r4, r3
 8008338:	2501      	movlt	r5, #1
 800833a:	2500      	movge	r5, #0
 800833c:	f7ff fd48 	bl	8007dd0 <_Balloc>
 8008340:	4602      	mov	r2, r0
 8008342:	b918      	cbnz	r0, 800834c <__mdiff+0x60>
 8008344:	4b31      	ldr	r3, [pc, #196]	@ (800840c <__mdiff+0x120>)
 8008346:	f240 2145 	movw	r1, #581	@ 0x245
 800834a:	e7e3      	b.n	8008314 <__mdiff+0x28>
 800834c:	f8d9 7010 	ldr.w	r7, [r9, #16]
 8008350:	6926      	ldr	r6, [r4, #16]
 8008352:	60c5      	str	r5, [r0, #12]
 8008354:	f109 0310 	add.w	r3, r9, #16
 8008358:	f109 0514 	add.w	r5, r9, #20
 800835c:	f104 0e14 	add.w	lr, r4, #20
 8008360:	f100 0b14 	add.w	fp, r0, #20
 8008364:	eb05 0887 	add.w	r8, r5, r7, lsl #2
 8008368:	eb0e 0686 	add.w	r6, lr, r6, lsl #2
 800836c:	9301      	str	r3, [sp, #4]
 800836e:	46d9      	mov	r9, fp
 8008370:	f04f 0c00 	mov.w	ip, #0
 8008374:	9b01      	ldr	r3, [sp, #4]
 8008376:	f85e 0b04 	ldr.w	r0, [lr], #4
 800837a:	f853 af04 	ldr.w	sl, [r3, #4]!
 800837e:	9301      	str	r3, [sp, #4]
 8008380:	fa1f f38a 	uxth.w	r3, sl
 8008384:	4619      	mov	r1, r3
 8008386:	b283      	uxth	r3, r0
 8008388:	1acb      	subs	r3, r1, r3
 800838a:	0c00      	lsrs	r0, r0, #16
 800838c:	4463      	add	r3, ip
 800838e:	ebc0 401a 	rsb	r0, r0, sl, lsr #16
 8008392:	eb00 4023 	add.w	r0, r0, r3, asr #16
 8008396:	b29b      	uxth	r3, r3
 8008398:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
 800839c:	4576      	cmp	r6, lr
 800839e:	f849 3b04 	str.w	r3, [r9], #4
 80083a2:	ea4f 4c20 	mov.w	ip, r0, asr #16
 80083a6:	d8e5      	bhi.n	8008374 <__mdiff+0x88>
 80083a8:	1b33      	subs	r3, r6, r4
 80083aa:	3b15      	subs	r3, #21
 80083ac:	f023 0303 	bic.w	r3, r3, #3
 80083b0:	3415      	adds	r4, #21
 80083b2:	3304      	adds	r3, #4
 80083b4:	42a6      	cmp	r6, r4
 80083b6:	bf38      	it	cc
 80083b8:	2304      	movcc	r3, #4
 80083ba:	441d      	add	r5, r3
 80083bc:	445b      	add	r3, fp
 80083be:	461e      	mov	r6, r3
 80083c0:	462c      	mov	r4, r5
 80083c2:	4544      	cmp	r4, r8
 80083c4:	d30e      	bcc.n	80083e4 <__mdiff+0xf8>
 80083c6:	f108 0103 	add.w	r1, r8, #3
 80083ca:	1b49      	subs	r1, r1, r5
 80083cc:	f021 0103 	bic.w	r1, r1, #3
 80083d0:	3d03      	subs	r5, #3
 80083d2:	45a8      	cmp	r8, r5
 80083d4:	bf38      	it	cc
 80083d6:	2100      	movcc	r1, #0
 80083d8:	440b      	add	r3, r1
 80083da:	f853 1d04 	ldr.w	r1, [r3, #-4]!
 80083de:	b191      	cbz	r1, 8008406 <__mdiff+0x11a>
 80083e0:	6117      	str	r7, [r2, #16]
 80083e2:	e79d      	b.n	8008320 <__mdiff+0x34>
 80083e4:	f854 1b04 	ldr.w	r1, [r4], #4
 80083e8:	46e6      	mov	lr, ip
 80083ea:	0c08      	lsrs	r0, r1, #16
 80083ec:	fa1c fc81 	uxtah	ip, ip, r1
 80083f0:	4471      	add	r1, lr
 80083f2:	eb00 402c 	add.w	r0, r0, ip, asr #16
 80083f6:	b289      	uxth	r1, r1
 80083f8:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
 80083fc:	f846 1b04 	str.w	r1, [r6], #4
 8008400:	ea4f 4c20 	mov.w	ip, r0, asr #16
 8008404:	e7dd      	b.n	80083c2 <__mdiff+0xd6>
 8008406:	3f01      	subs	r7, #1
 8008408:	e7e7      	b.n	80083da <__mdiff+0xee>
 800840a:	bf00      	nop
 800840c:	08009370 	.word	0x08009370
 8008410:	08009381 	.word	0x08009381

08008414 <__d2b>:
 8008414:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8008418:	460f      	mov	r7, r1
 800841a:	2101      	movs	r1, #1
 800841c:	ec59 8b10 	vmov	r8, r9, d0
 8008420:	4616      	mov	r6, r2
 8008422:	f7ff fcd5 	bl	8007dd0 <_Balloc>
 8008426:	4604      	mov	r4, r0
 8008428:	b930      	cbnz	r0, 8008438 <__d2b+0x24>
 800842a:	4602      	mov	r2, r0
 800842c:	4b23      	ldr	r3, [pc, #140]	@ (80084bc <__d2b+0xa8>)
 800842e:	4824      	ldr	r0, [pc, #144]	@ (80084c0 <__d2b+0xac>)
 8008430:	f240 310f 	movw	r1, #783	@ 0x30f
 8008434:	f7fe fd54 	bl	8006ee0 <__assert_func>
 8008438:	f3c9 550a 	ubfx	r5, r9, #20, #11
 800843c:	f3c9 0313 	ubfx	r3, r9, #0, #20
 8008440:	b10d      	cbz	r5, 8008446 <__d2b+0x32>
 8008442:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 8008446:	9301      	str	r3, [sp, #4]
 8008448:	f1b8 0300 	subs.w	r3, r8, #0
 800844c:	d023      	beq.n	8008496 <__d2b+0x82>
 800844e:	4668      	mov	r0, sp
 8008450:	9300      	str	r3, [sp, #0]
 8008452:	f7ff fd84 	bl	8007f5e <__lo0bits>
 8008456:	e9dd 1200 	ldrd	r1, r2, [sp]
 800845a:	b1d0      	cbz	r0, 8008492 <__d2b+0x7e>
 800845c:	f1c0 0320 	rsb	r3, r0, #32
 8008460:	fa02 f303 	lsl.w	r3, r2, r3
 8008464:	430b      	orrs	r3, r1
 8008466:	40c2      	lsrs	r2, r0
 8008468:	6163      	str	r3, [r4, #20]
 800846a:	9201      	str	r2, [sp, #4]
 800846c:	9b01      	ldr	r3, [sp, #4]
 800846e:	61a3      	str	r3, [r4, #24]
 8008470:	2b00      	cmp	r3, #0
 8008472:	bf0c      	ite	eq
 8008474:	2201      	moveq	r2, #1
 8008476:	2202      	movne	r2, #2
 8008478:	6122      	str	r2, [r4, #16]
 800847a:	b1a5      	cbz	r5, 80084a6 <__d2b+0x92>
 800847c:	f2a5 4533 	subw	r5, r5, #1075	@ 0x433
 8008480:	4405      	add	r5, r0
 8008482:	603d      	str	r5, [r7, #0]
 8008484:	f1c0 0035 	rsb	r0, r0, #53	@ 0x35
 8008488:	6030      	str	r0, [r6, #0]
 800848a:	4620      	mov	r0, r4
 800848c:	b003      	add	sp, #12
 800848e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8008492:	6161      	str	r1, [r4, #20]
 8008494:	e7ea      	b.n	800846c <__d2b+0x58>
 8008496:	a801      	add	r0, sp, #4
 8008498:	f7ff fd61 	bl	8007f5e <__lo0bits>
 800849c:	9b01      	ldr	r3, [sp, #4]
 800849e:	6163      	str	r3, [r4, #20]
 80084a0:	3020      	adds	r0, #32
 80084a2:	2201      	movs	r2, #1
 80084a4:	e7e8      	b.n	8008478 <__d2b+0x64>
 80084a6:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 80084aa:	f2a0 4032 	subw	r0, r0, #1074	@ 0x432
 80084ae:	6038      	str	r0, [r7, #0]
 80084b0:	6918      	ldr	r0, [r3, #16]
 80084b2:	f7ff fd35 	bl	8007f20 <__hi0bits>
 80084b6:	ebc0 1042 	rsb	r0, r0, r2, lsl #5
 80084ba:	e7e5      	b.n	8008488 <__d2b+0x74>
 80084bc:	08009370 	.word	0x08009370
 80084c0:	08009381 	.word	0x08009381

080084c4 <__ssputs_r>:
 80084c4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80084c8:	688e      	ldr	r6, [r1, #8]
 80084ca:	461f      	mov	r7, r3
 80084cc:	42be      	cmp	r6, r7
 80084ce:	680b      	ldr	r3, [r1, #0]
 80084d0:	4682      	mov	sl, r0
 80084d2:	460c      	mov	r4, r1
 80084d4:	4690      	mov	r8, r2
 80084d6:	d82d      	bhi.n	8008534 <__ssputs_r+0x70>
 80084d8:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 80084dc:	f412 6f90 	tst.w	r2, #1152	@ 0x480
 80084e0:	d026      	beq.n	8008530 <__ssputs_r+0x6c>
 80084e2:	6965      	ldr	r5, [r4, #20]
 80084e4:	6909      	ldr	r1, [r1, #16]
 80084e6:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 80084ea:	eba3 0901 	sub.w	r9, r3, r1
 80084ee:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 80084f2:	1c7b      	adds	r3, r7, #1
 80084f4:	444b      	add	r3, r9
 80084f6:	106d      	asrs	r5, r5, #1
 80084f8:	429d      	cmp	r5, r3
 80084fa:	bf38      	it	cc
 80084fc:	461d      	movcc	r5, r3
 80084fe:	0553      	lsls	r3, r2, #21
 8008500:	d527      	bpl.n	8008552 <__ssputs_r+0x8e>
 8008502:	4629      	mov	r1, r5
 8008504:	f7ff fbd8 	bl	8007cb8 <_malloc_r>
 8008508:	4606      	mov	r6, r0
 800850a:	b360      	cbz	r0, 8008566 <__ssputs_r+0xa2>
 800850c:	6921      	ldr	r1, [r4, #16]
 800850e:	464a      	mov	r2, r9
 8008510:	f000 fa18 	bl	8008944 <memcpy>
 8008514:	89a3      	ldrh	r3, [r4, #12]
 8008516:	f423 6390 	bic.w	r3, r3, #1152	@ 0x480
 800851a:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 800851e:	81a3      	strh	r3, [r4, #12]
 8008520:	6126      	str	r6, [r4, #16]
 8008522:	6165      	str	r5, [r4, #20]
 8008524:	444e      	add	r6, r9
 8008526:	eba5 0509 	sub.w	r5, r5, r9
 800852a:	6026      	str	r6, [r4, #0]
 800852c:	60a5      	str	r5, [r4, #8]
 800852e:	463e      	mov	r6, r7
 8008530:	42be      	cmp	r6, r7
 8008532:	d900      	bls.n	8008536 <__ssputs_r+0x72>
 8008534:	463e      	mov	r6, r7
 8008536:	6820      	ldr	r0, [r4, #0]
 8008538:	4632      	mov	r2, r6
 800853a:	4641      	mov	r1, r8
 800853c:	f000 f9d8 	bl	80088f0 <memmove>
 8008540:	68a3      	ldr	r3, [r4, #8]
 8008542:	1b9b      	subs	r3, r3, r6
 8008544:	60a3      	str	r3, [r4, #8]
 8008546:	6823      	ldr	r3, [r4, #0]
 8008548:	4433      	add	r3, r6
 800854a:	6023      	str	r3, [r4, #0]
 800854c:	2000      	movs	r0, #0
 800854e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8008552:	462a      	mov	r2, r5
 8008554:	f000 fa31 	bl	80089ba <_realloc_r>
 8008558:	4606      	mov	r6, r0
 800855a:	2800      	cmp	r0, #0
 800855c:	d1e0      	bne.n	8008520 <__ssputs_r+0x5c>
 800855e:	6921      	ldr	r1, [r4, #16]
 8008560:	4650      	mov	r0, sl
 8008562:	f7ff fb35 	bl	8007bd0 <_free_r>
 8008566:	230c      	movs	r3, #12
 8008568:	f8ca 3000 	str.w	r3, [sl]
 800856c:	89a3      	ldrh	r3, [r4, #12]
 800856e:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8008572:	81a3      	strh	r3, [r4, #12]
 8008574:	f04f 30ff 	mov.w	r0, #4294967295
 8008578:	e7e9      	b.n	800854e <__ssputs_r+0x8a>
	...

0800857c <_svfiprintf_r>:
 800857c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8008580:	4698      	mov	r8, r3
 8008582:	898b      	ldrh	r3, [r1, #12]
 8008584:	061b      	lsls	r3, r3, #24
 8008586:	b09d      	sub	sp, #116	@ 0x74
 8008588:	4607      	mov	r7, r0
 800858a:	460d      	mov	r5, r1
 800858c:	4614      	mov	r4, r2
 800858e:	d510      	bpl.n	80085b2 <_svfiprintf_r+0x36>
 8008590:	690b      	ldr	r3, [r1, #16]
 8008592:	b973      	cbnz	r3, 80085b2 <_svfiprintf_r+0x36>
 8008594:	2140      	movs	r1, #64	@ 0x40
 8008596:	f7ff fb8f 	bl	8007cb8 <_malloc_r>
 800859a:	6028      	str	r0, [r5, #0]
 800859c:	6128      	str	r0, [r5, #16]
 800859e:	b930      	cbnz	r0, 80085ae <_svfiprintf_r+0x32>
 80085a0:	230c      	movs	r3, #12
 80085a2:	603b      	str	r3, [r7, #0]
 80085a4:	f04f 30ff 	mov.w	r0, #4294967295
 80085a8:	b01d      	add	sp, #116	@ 0x74
 80085aa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80085ae:	2340      	movs	r3, #64	@ 0x40
 80085b0:	616b      	str	r3, [r5, #20]
 80085b2:	2300      	movs	r3, #0
 80085b4:	9309      	str	r3, [sp, #36]	@ 0x24
 80085b6:	2320      	movs	r3, #32
 80085b8:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 80085bc:	f8cd 800c 	str.w	r8, [sp, #12]
 80085c0:	2330      	movs	r3, #48	@ 0x30
 80085c2:	f8df 819c 	ldr.w	r8, [pc, #412]	@ 8008760 <_svfiprintf_r+0x1e4>
 80085c6:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 80085ca:	f04f 0901 	mov.w	r9, #1
 80085ce:	4623      	mov	r3, r4
 80085d0:	469a      	mov	sl, r3
 80085d2:	f813 2b01 	ldrb.w	r2, [r3], #1
 80085d6:	b10a      	cbz	r2, 80085dc <_svfiprintf_r+0x60>
 80085d8:	2a25      	cmp	r2, #37	@ 0x25
 80085da:	d1f9      	bne.n	80085d0 <_svfiprintf_r+0x54>
 80085dc:	ebba 0b04 	subs.w	fp, sl, r4
 80085e0:	d00b      	beq.n	80085fa <_svfiprintf_r+0x7e>
 80085e2:	465b      	mov	r3, fp
 80085e4:	4622      	mov	r2, r4
 80085e6:	4629      	mov	r1, r5
 80085e8:	4638      	mov	r0, r7
 80085ea:	f7ff ff6b 	bl	80084c4 <__ssputs_r>
 80085ee:	3001      	adds	r0, #1
 80085f0:	f000 80a7 	beq.w	8008742 <_svfiprintf_r+0x1c6>
 80085f4:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 80085f6:	445a      	add	r2, fp
 80085f8:	9209      	str	r2, [sp, #36]	@ 0x24
 80085fa:	f89a 3000 	ldrb.w	r3, [sl]
 80085fe:	2b00      	cmp	r3, #0
 8008600:	f000 809f 	beq.w	8008742 <_svfiprintf_r+0x1c6>
 8008604:	2300      	movs	r3, #0
 8008606:	f04f 32ff 	mov.w	r2, #4294967295
 800860a:	e9cd 2305 	strd	r2, r3, [sp, #20]
 800860e:	f10a 0a01 	add.w	sl, sl, #1
 8008612:	9304      	str	r3, [sp, #16]
 8008614:	9307      	str	r3, [sp, #28]
 8008616:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 800861a:	931a      	str	r3, [sp, #104]	@ 0x68
 800861c:	4654      	mov	r4, sl
 800861e:	2205      	movs	r2, #5
 8008620:	f814 1b01 	ldrb.w	r1, [r4], #1
 8008624:	484e      	ldr	r0, [pc, #312]	@ (8008760 <_svfiprintf_r+0x1e4>)
 8008626:	f7f7 fdf3 	bl	8000210 <memchr>
 800862a:	9a04      	ldr	r2, [sp, #16]
 800862c:	b9d8      	cbnz	r0, 8008666 <_svfiprintf_r+0xea>
 800862e:	06d0      	lsls	r0, r2, #27
 8008630:	bf44      	itt	mi
 8008632:	2320      	movmi	r3, #32
 8008634:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8008638:	0711      	lsls	r1, r2, #28
 800863a:	bf44      	itt	mi
 800863c:	232b      	movmi	r3, #43	@ 0x2b
 800863e:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8008642:	f89a 3000 	ldrb.w	r3, [sl]
 8008646:	2b2a      	cmp	r3, #42	@ 0x2a
 8008648:	d015      	beq.n	8008676 <_svfiprintf_r+0xfa>
 800864a:	9a07      	ldr	r2, [sp, #28]
 800864c:	4654      	mov	r4, sl
 800864e:	2000      	movs	r0, #0
 8008650:	f04f 0c0a 	mov.w	ip, #10
 8008654:	4621      	mov	r1, r4
 8008656:	f811 3b01 	ldrb.w	r3, [r1], #1
 800865a:	3b30      	subs	r3, #48	@ 0x30
 800865c:	2b09      	cmp	r3, #9
 800865e:	d94b      	bls.n	80086f8 <_svfiprintf_r+0x17c>
 8008660:	b1b0      	cbz	r0, 8008690 <_svfiprintf_r+0x114>
 8008662:	9207      	str	r2, [sp, #28]
 8008664:	e014      	b.n	8008690 <_svfiprintf_r+0x114>
 8008666:	eba0 0308 	sub.w	r3, r0, r8
 800866a:	fa09 f303 	lsl.w	r3, r9, r3
 800866e:	4313      	orrs	r3, r2
 8008670:	9304      	str	r3, [sp, #16]
 8008672:	46a2      	mov	sl, r4
 8008674:	e7d2      	b.n	800861c <_svfiprintf_r+0xa0>
 8008676:	9b03      	ldr	r3, [sp, #12]
 8008678:	1d19      	adds	r1, r3, #4
 800867a:	681b      	ldr	r3, [r3, #0]
 800867c:	9103      	str	r1, [sp, #12]
 800867e:	2b00      	cmp	r3, #0
 8008680:	bfbb      	ittet	lt
 8008682:	425b      	neglt	r3, r3
 8008684:	f042 0202 	orrlt.w	r2, r2, #2
 8008688:	9307      	strge	r3, [sp, #28]
 800868a:	9307      	strlt	r3, [sp, #28]
 800868c:	bfb8      	it	lt
 800868e:	9204      	strlt	r2, [sp, #16]
 8008690:	7823      	ldrb	r3, [r4, #0]
 8008692:	2b2e      	cmp	r3, #46	@ 0x2e
 8008694:	d10a      	bne.n	80086ac <_svfiprintf_r+0x130>
 8008696:	7863      	ldrb	r3, [r4, #1]
 8008698:	2b2a      	cmp	r3, #42	@ 0x2a
 800869a:	d132      	bne.n	8008702 <_svfiprintf_r+0x186>
 800869c:	9b03      	ldr	r3, [sp, #12]
 800869e:	1d1a      	adds	r2, r3, #4
 80086a0:	681b      	ldr	r3, [r3, #0]
 80086a2:	9203      	str	r2, [sp, #12]
 80086a4:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 80086a8:	3402      	adds	r4, #2
 80086aa:	9305      	str	r3, [sp, #20]
 80086ac:	f8df a0c0 	ldr.w	sl, [pc, #192]	@ 8008770 <_svfiprintf_r+0x1f4>
 80086b0:	7821      	ldrb	r1, [r4, #0]
 80086b2:	2203      	movs	r2, #3
 80086b4:	4650      	mov	r0, sl
 80086b6:	f7f7 fdab 	bl	8000210 <memchr>
 80086ba:	b138      	cbz	r0, 80086cc <_svfiprintf_r+0x150>
 80086bc:	9b04      	ldr	r3, [sp, #16]
 80086be:	eba0 000a 	sub.w	r0, r0, sl
 80086c2:	2240      	movs	r2, #64	@ 0x40
 80086c4:	4082      	lsls	r2, r0
 80086c6:	4313      	orrs	r3, r2
 80086c8:	3401      	adds	r4, #1
 80086ca:	9304      	str	r3, [sp, #16]
 80086cc:	f814 1b01 	ldrb.w	r1, [r4], #1
 80086d0:	4824      	ldr	r0, [pc, #144]	@ (8008764 <_svfiprintf_r+0x1e8>)
 80086d2:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 80086d6:	2206      	movs	r2, #6
 80086d8:	f7f7 fd9a 	bl	8000210 <memchr>
 80086dc:	2800      	cmp	r0, #0
 80086de:	d036      	beq.n	800874e <_svfiprintf_r+0x1d2>
 80086e0:	4b21      	ldr	r3, [pc, #132]	@ (8008768 <_svfiprintf_r+0x1ec>)
 80086e2:	bb1b      	cbnz	r3, 800872c <_svfiprintf_r+0x1b0>
 80086e4:	9b03      	ldr	r3, [sp, #12]
 80086e6:	3307      	adds	r3, #7
 80086e8:	f023 0307 	bic.w	r3, r3, #7
 80086ec:	3308      	adds	r3, #8
 80086ee:	9303      	str	r3, [sp, #12]
 80086f0:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80086f2:	4433      	add	r3, r6
 80086f4:	9309      	str	r3, [sp, #36]	@ 0x24
 80086f6:	e76a      	b.n	80085ce <_svfiprintf_r+0x52>
 80086f8:	fb0c 3202 	mla	r2, ip, r2, r3
 80086fc:	460c      	mov	r4, r1
 80086fe:	2001      	movs	r0, #1
 8008700:	e7a8      	b.n	8008654 <_svfiprintf_r+0xd8>
 8008702:	2300      	movs	r3, #0
 8008704:	3401      	adds	r4, #1
 8008706:	9305      	str	r3, [sp, #20]
 8008708:	4619      	mov	r1, r3
 800870a:	f04f 0c0a 	mov.w	ip, #10
 800870e:	4620      	mov	r0, r4
 8008710:	f810 2b01 	ldrb.w	r2, [r0], #1
 8008714:	3a30      	subs	r2, #48	@ 0x30
 8008716:	2a09      	cmp	r2, #9
 8008718:	d903      	bls.n	8008722 <_svfiprintf_r+0x1a6>
 800871a:	2b00      	cmp	r3, #0
 800871c:	d0c6      	beq.n	80086ac <_svfiprintf_r+0x130>
 800871e:	9105      	str	r1, [sp, #20]
 8008720:	e7c4      	b.n	80086ac <_svfiprintf_r+0x130>
 8008722:	fb0c 2101 	mla	r1, ip, r1, r2
 8008726:	4604      	mov	r4, r0
 8008728:	2301      	movs	r3, #1
 800872a:	e7f0      	b.n	800870e <_svfiprintf_r+0x192>
 800872c:	ab03      	add	r3, sp, #12
 800872e:	9300      	str	r3, [sp, #0]
 8008730:	462a      	mov	r2, r5
 8008732:	4b0e      	ldr	r3, [pc, #56]	@ (800876c <_svfiprintf_r+0x1f0>)
 8008734:	a904      	add	r1, sp, #16
 8008736:	4638      	mov	r0, r7
 8008738:	f7fd fe60 	bl	80063fc <_printf_float>
 800873c:	1c42      	adds	r2, r0, #1
 800873e:	4606      	mov	r6, r0
 8008740:	d1d6      	bne.n	80086f0 <_svfiprintf_r+0x174>
 8008742:	89ab      	ldrh	r3, [r5, #12]
 8008744:	065b      	lsls	r3, r3, #25
 8008746:	f53f af2d 	bmi.w	80085a4 <_svfiprintf_r+0x28>
 800874a:	9809      	ldr	r0, [sp, #36]	@ 0x24
 800874c:	e72c      	b.n	80085a8 <_svfiprintf_r+0x2c>
 800874e:	ab03      	add	r3, sp, #12
 8008750:	9300      	str	r3, [sp, #0]
 8008752:	462a      	mov	r2, r5
 8008754:	4b05      	ldr	r3, [pc, #20]	@ (800876c <_svfiprintf_r+0x1f0>)
 8008756:	a904      	add	r1, sp, #16
 8008758:	4638      	mov	r0, r7
 800875a:	f7fe f8e7 	bl	800692c <_printf_i>
 800875e:	e7ed      	b.n	800873c <_svfiprintf_r+0x1c0>
 8008760:	080093da 	.word	0x080093da
 8008764:	080093e4 	.word	0x080093e4
 8008768:	080063fd 	.word	0x080063fd
 800876c:	080084c5 	.word	0x080084c5
 8008770:	080093e0 	.word	0x080093e0

08008774 <__sflush_r>:
 8008774:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 8008778:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800877c:	0716      	lsls	r6, r2, #28
 800877e:	4605      	mov	r5, r0
 8008780:	460c      	mov	r4, r1
 8008782:	d454      	bmi.n	800882e <__sflush_r+0xba>
 8008784:	684b      	ldr	r3, [r1, #4]
 8008786:	2b00      	cmp	r3, #0
 8008788:	dc02      	bgt.n	8008790 <__sflush_r+0x1c>
 800878a:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
 800878c:	2b00      	cmp	r3, #0
 800878e:	dd48      	ble.n	8008822 <__sflush_r+0xae>
 8008790:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8008792:	2e00      	cmp	r6, #0
 8008794:	d045      	beq.n	8008822 <__sflush_r+0xae>
 8008796:	2300      	movs	r3, #0
 8008798:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
 800879c:	682f      	ldr	r7, [r5, #0]
 800879e:	6a21      	ldr	r1, [r4, #32]
 80087a0:	602b      	str	r3, [r5, #0]
 80087a2:	d030      	beq.n	8008806 <__sflush_r+0x92>
 80087a4:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 80087a6:	89a3      	ldrh	r3, [r4, #12]
 80087a8:	0759      	lsls	r1, r3, #29
 80087aa:	d505      	bpl.n	80087b8 <__sflush_r+0x44>
 80087ac:	6863      	ldr	r3, [r4, #4]
 80087ae:	1ad2      	subs	r2, r2, r3
 80087b0:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 80087b2:	b10b      	cbz	r3, 80087b8 <__sflush_r+0x44>
 80087b4:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 80087b6:	1ad2      	subs	r2, r2, r3
 80087b8:	2300      	movs	r3, #0
 80087ba:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 80087bc:	6a21      	ldr	r1, [r4, #32]
 80087be:	4628      	mov	r0, r5
 80087c0:	47b0      	blx	r6
 80087c2:	1c43      	adds	r3, r0, #1
 80087c4:	89a3      	ldrh	r3, [r4, #12]
 80087c6:	d106      	bne.n	80087d6 <__sflush_r+0x62>
 80087c8:	6829      	ldr	r1, [r5, #0]
 80087ca:	291d      	cmp	r1, #29
 80087cc:	d82b      	bhi.n	8008826 <__sflush_r+0xb2>
 80087ce:	4a2a      	ldr	r2, [pc, #168]	@ (8008878 <__sflush_r+0x104>)
 80087d0:	40ca      	lsrs	r2, r1
 80087d2:	07d6      	lsls	r6, r2, #31
 80087d4:	d527      	bpl.n	8008826 <__sflush_r+0xb2>
 80087d6:	2200      	movs	r2, #0
 80087d8:	6062      	str	r2, [r4, #4]
 80087da:	04d9      	lsls	r1, r3, #19
 80087dc:	6922      	ldr	r2, [r4, #16]
 80087de:	6022      	str	r2, [r4, #0]
 80087e0:	d504      	bpl.n	80087ec <__sflush_r+0x78>
 80087e2:	1c42      	adds	r2, r0, #1
 80087e4:	d101      	bne.n	80087ea <__sflush_r+0x76>
 80087e6:	682b      	ldr	r3, [r5, #0]
 80087e8:	b903      	cbnz	r3, 80087ec <__sflush_r+0x78>
 80087ea:	6560      	str	r0, [r4, #84]	@ 0x54
 80087ec:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 80087ee:	602f      	str	r7, [r5, #0]
 80087f0:	b1b9      	cbz	r1, 8008822 <__sflush_r+0xae>
 80087f2:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 80087f6:	4299      	cmp	r1, r3
 80087f8:	d002      	beq.n	8008800 <__sflush_r+0x8c>
 80087fa:	4628      	mov	r0, r5
 80087fc:	f7ff f9e8 	bl	8007bd0 <_free_r>
 8008800:	2300      	movs	r3, #0
 8008802:	6363      	str	r3, [r4, #52]	@ 0x34
 8008804:	e00d      	b.n	8008822 <__sflush_r+0xae>
 8008806:	2301      	movs	r3, #1
 8008808:	4628      	mov	r0, r5
 800880a:	47b0      	blx	r6
 800880c:	4602      	mov	r2, r0
 800880e:	1c50      	adds	r0, r2, #1
 8008810:	d1c9      	bne.n	80087a6 <__sflush_r+0x32>
 8008812:	682b      	ldr	r3, [r5, #0]
 8008814:	2b00      	cmp	r3, #0
 8008816:	d0c6      	beq.n	80087a6 <__sflush_r+0x32>
 8008818:	2b1d      	cmp	r3, #29
 800881a:	d001      	beq.n	8008820 <__sflush_r+0xac>
 800881c:	2b16      	cmp	r3, #22
 800881e:	d11e      	bne.n	800885e <__sflush_r+0xea>
 8008820:	602f      	str	r7, [r5, #0]
 8008822:	2000      	movs	r0, #0
 8008824:	e022      	b.n	800886c <__sflush_r+0xf8>
 8008826:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 800882a:	b21b      	sxth	r3, r3
 800882c:	e01b      	b.n	8008866 <__sflush_r+0xf2>
 800882e:	690f      	ldr	r7, [r1, #16]
 8008830:	2f00      	cmp	r7, #0
 8008832:	d0f6      	beq.n	8008822 <__sflush_r+0xae>
 8008834:	0793      	lsls	r3, r2, #30
 8008836:	680e      	ldr	r6, [r1, #0]
 8008838:	bf08      	it	eq
 800883a:	694b      	ldreq	r3, [r1, #20]
 800883c:	600f      	str	r7, [r1, #0]
 800883e:	bf18      	it	ne
 8008840:	2300      	movne	r3, #0
 8008842:	eba6 0807 	sub.w	r8, r6, r7
 8008846:	608b      	str	r3, [r1, #8]
 8008848:	f1b8 0f00 	cmp.w	r8, #0
 800884c:	dde9      	ble.n	8008822 <__sflush_r+0xae>
 800884e:	6a21      	ldr	r1, [r4, #32]
 8008850:	6aa6      	ldr	r6, [r4, #40]	@ 0x28
 8008852:	4643      	mov	r3, r8
 8008854:	463a      	mov	r2, r7
 8008856:	4628      	mov	r0, r5
 8008858:	47b0      	blx	r6
 800885a:	2800      	cmp	r0, #0
 800885c:	dc08      	bgt.n	8008870 <__sflush_r+0xfc>
 800885e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8008862:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8008866:	81a3      	strh	r3, [r4, #12]
 8008868:	f04f 30ff 	mov.w	r0, #4294967295
 800886c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8008870:	4407      	add	r7, r0
 8008872:	eba8 0800 	sub.w	r8, r8, r0
 8008876:	e7e7      	b.n	8008848 <__sflush_r+0xd4>
 8008878:	20400001 	.word	0x20400001

0800887c <_fflush_r>:
 800887c:	b538      	push	{r3, r4, r5, lr}
 800887e:	690b      	ldr	r3, [r1, #16]
 8008880:	4605      	mov	r5, r0
 8008882:	460c      	mov	r4, r1
 8008884:	b913      	cbnz	r3, 800888c <_fflush_r+0x10>
 8008886:	2500      	movs	r5, #0
 8008888:	4628      	mov	r0, r5
 800888a:	bd38      	pop	{r3, r4, r5, pc}
 800888c:	b118      	cbz	r0, 8008896 <_fflush_r+0x1a>
 800888e:	6a03      	ldr	r3, [r0, #32]
 8008890:	b90b      	cbnz	r3, 8008896 <_fflush_r+0x1a>
 8008892:	f7fe f9f5 	bl	8006c80 <__sinit>
 8008896:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800889a:	2b00      	cmp	r3, #0
 800889c:	d0f3      	beq.n	8008886 <_fflush_r+0xa>
 800889e:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 80088a0:	07d0      	lsls	r0, r2, #31
 80088a2:	d404      	bmi.n	80088ae <_fflush_r+0x32>
 80088a4:	0599      	lsls	r1, r3, #22
 80088a6:	d402      	bmi.n	80088ae <_fflush_r+0x32>
 80088a8:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 80088aa:	f7fe fb16 	bl	8006eda <__retarget_lock_acquire_recursive>
 80088ae:	4628      	mov	r0, r5
 80088b0:	4621      	mov	r1, r4
 80088b2:	f7ff ff5f 	bl	8008774 <__sflush_r>
 80088b6:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 80088b8:	07da      	lsls	r2, r3, #31
 80088ba:	4605      	mov	r5, r0
 80088bc:	d4e4      	bmi.n	8008888 <_fflush_r+0xc>
 80088be:	89a3      	ldrh	r3, [r4, #12]
 80088c0:	059b      	lsls	r3, r3, #22
 80088c2:	d4e1      	bmi.n	8008888 <_fflush_r+0xc>
 80088c4:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 80088c6:	f7fe fb09 	bl	8006edc <__retarget_lock_release_recursive>
 80088ca:	e7dd      	b.n	8008888 <_fflush_r+0xc>

080088cc <fiprintf>:
 80088cc:	b40e      	push	{r1, r2, r3}
 80088ce:	b503      	push	{r0, r1, lr}
 80088d0:	4601      	mov	r1, r0
 80088d2:	ab03      	add	r3, sp, #12
 80088d4:	4805      	ldr	r0, [pc, #20]	@ (80088ec <fiprintf+0x20>)
 80088d6:	f853 2b04 	ldr.w	r2, [r3], #4
 80088da:	6800      	ldr	r0, [r0, #0]
 80088dc:	9301      	str	r3, [sp, #4]
 80088de:	f000 f8d1 	bl	8008a84 <_vfiprintf_r>
 80088e2:	b002      	add	sp, #8
 80088e4:	f85d eb04 	ldr.w	lr, [sp], #4
 80088e8:	b003      	add	sp, #12
 80088ea:	4770      	bx	lr
 80088ec:	20000048 	.word	0x20000048

080088f0 <memmove>:
 80088f0:	4288      	cmp	r0, r1
 80088f2:	b510      	push	{r4, lr}
 80088f4:	eb01 0402 	add.w	r4, r1, r2
 80088f8:	d902      	bls.n	8008900 <memmove+0x10>
 80088fa:	4284      	cmp	r4, r0
 80088fc:	4623      	mov	r3, r4
 80088fe:	d807      	bhi.n	8008910 <memmove+0x20>
 8008900:	1e43      	subs	r3, r0, #1
 8008902:	42a1      	cmp	r1, r4
 8008904:	d008      	beq.n	8008918 <memmove+0x28>
 8008906:	f811 2b01 	ldrb.w	r2, [r1], #1
 800890a:	f803 2f01 	strb.w	r2, [r3, #1]!
 800890e:	e7f8      	b.n	8008902 <memmove+0x12>
 8008910:	4402      	add	r2, r0
 8008912:	4601      	mov	r1, r0
 8008914:	428a      	cmp	r2, r1
 8008916:	d100      	bne.n	800891a <memmove+0x2a>
 8008918:	bd10      	pop	{r4, pc}
 800891a:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 800891e:	f802 4d01 	strb.w	r4, [r2, #-1]!
 8008922:	e7f7      	b.n	8008914 <memmove+0x24>

08008924 <_sbrk_r>:
 8008924:	b538      	push	{r3, r4, r5, lr}
 8008926:	4d06      	ldr	r5, [pc, #24]	@ (8008940 <_sbrk_r+0x1c>)
 8008928:	2300      	movs	r3, #0
 800892a:	4604      	mov	r4, r0
 800892c:	4608      	mov	r0, r1
 800892e:	602b      	str	r3, [r5, #0]
 8008930:	f7f9 fc26 	bl	8002180 <_sbrk>
 8008934:	1c43      	adds	r3, r0, #1
 8008936:	d102      	bne.n	800893e <_sbrk_r+0x1a>
 8008938:	682b      	ldr	r3, [r5, #0]
 800893a:	b103      	cbz	r3, 800893e <_sbrk_r+0x1a>
 800893c:	6023      	str	r3, [r4, #0]
 800893e:	bd38      	pop	{r3, r4, r5, pc}
 8008940:	200006b8 	.word	0x200006b8

08008944 <memcpy>:
 8008944:	440a      	add	r2, r1
 8008946:	4291      	cmp	r1, r2
 8008948:	f100 33ff 	add.w	r3, r0, #4294967295
 800894c:	d100      	bne.n	8008950 <memcpy+0xc>
 800894e:	4770      	bx	lr
 8008950:	b510      	push	{r4, lr}
 8008952:	f811 4b01 	ldrb.w	r4, [r1], #1
 8008956:	f803 4f01 	strb.w	r4, [r3, #1]!
 800895a:	4291      	cmp	r1, r2
 800895c:	d1f9      	bne.n	8008952 <memcpy+0xe>
 800895e:	bd10      	pop	{r4, pc}

08008960 <abort>:
 8008960:	b508      	push	{r3, lr}
 8008962:	2006      	movs	r0, #6
 8008964:	f000 fa62 	bl	8008e2c <raise>
 8008968:	2001      	movs	r0, #1
 800896a:	f7f9 fb91 	bl	8002090 <_exit>

0800896e <_calloc_r>:
 800896e:	b570      	push	{r4, r5, r6, lr}
 8008970:	fba1 5402 	umull	r5, r4, r1, r2
 8008974:	b934      	cbnz	r4, 8008984 <_calloc_r+0x16>
 8008976:	4629      	mov	r1, r5
 8008978:	f7ff f99e 	bl	8007cb8 <_malloc_r>
 800897c:	4606      	mov	r6, r0
 800897e:	b928      	cbnz	r0, 800898c <_calloc_r+0x1e>
 8008980:	4630      	mov	r0, r6
 8008982:	bd70      	pop	{r4, r5, r6, pc}
 8008984:	220c      	movs	r2, #12
 8008986:	6002      	str	r2, [r0, #0]
 8008988:	2600      	movs	r6, #0
 800898a:	e7f9      	b.n	8008980 <_calloc_r+0x12>
 800898c:	462a      	mov	r2, r5
 800898e:	4621      	mov	r1, r4
 8008990:	f7fe fa25 	bl	8006dde <memset>
 8008994:	e7f4      	b.n	8008980 <_calloc_r+0x12>

08008996 <__ascii_mbtowc>:
 8008996:	b082      	sub	sp, #8
 8008998:	b901      	cbnz	r1, 800899c <__ascii_mbtowc+0x6>
 800899a:	a901      	add	r1, sp, #4
 800899c:	b142      	cbz	r2, 80089b0 <__ascii_mbtowc+0x1a>
 800899e:	b14b      	cbz	r3, 80089b4 <__ascii_mbtowc+0x1e>
 80089a0:	7813      	ldrb	r3, [r2, #0]
 80089a2:	600b      	str	r3, [r1, #0]
 80089a4:	7812      	ldrb	r2, [r2, #0]
 80089a6:	1e10      	subs	r0, r2, #0
 80089a8:	bf18      	it	ne
 80089aa:	2001      	movne	r0, #1
 80089ac:	b002      	add	sp, #8
 80089ae:	4770      	bx	lr
 80089b0:	4610      	mov	r0, r2
 80089b2:	e7fb      	b.n	80089ac <__ascii_mbtowc+0x16>
 80089b4:	f06f 0001 	mvn.w	r0, #1
 80089b8:	e7f8      	b.n	80089ac <__ascii_mbtowc+0x16>

080089ba <_realloc_r>:
 80089ba:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80089be:	4607      	mov	r7, r0
 80089c0:	4614      	mov	r4, r2
 80089c2:	460d      	mov	r5, r1
 80089c4:	b921      	cbnz	r1, 80089d0 <_realloc_r+0x16>
 80089c6:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80089ca:	4611      	mov	r1, r2
 80089cc:	f7ff b974 	b.w	8007cb8 <_malloc_r>
 80089d0:	b92a      	cbnz	r2, 80089de <_realloc_r+0x24>
 80089d2:	f7ff f8fd 	bl	8007bd0 <_free_r>
 80089d6:	4625      	mov	r5, r4
 80089d8:	4628      	mov	r0, r5
 80089da:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80089de:	f000 fa41 	bl	8008e64 <_malloc_usable_size_r>
 80089e2:	4284      	cmp	r4, r0
 80089e4:	4606      	mov	r6, r0
 80089e6:	d802      	bhi.n	80089ee <_realloc_r+0x34>
 80089e8:	ebb4 0f50 	cmp.w	r4, r0, lsr #1
 80089ec:	d8f4      	bhi.n	80089d8 <_realloc_r+0x1e>
 80089ee:	4621      	mov	r1, r4
 80089f0:	4638      	mov	r0, r7
 80089f2:	f7ff f961 	bl	8007cb8 <_malloc_r>
 80089f6:	4680      	mov	r8, r0
 80089f8:	b908      	cbnz	r0, 80089fe <_realloc_r+0x44>
 80089fa:	4645      	mov	r5, r8
 80089fc:	e7ec      	b.n	80089d8 <_realloc_r+0x1e>
 80089fe:	42b4      	cmp	r4, r6
 8008a00:	4622      	mov	r2, r4
 8008a02:	4629      	mov	r1, r5
 8008a04:	bf28      	it	cs
 8008a06:	4632      	movcs	r2, r6
 8008a08:	f7ff ff9c 	bl	8008944 <memcpy>
 8008a0c:	4629      	mov	r1, r5
 8008a0e:	4638      	mov	r0, r7
 8008a10:	f7ff f8de 	bl	8007bd0 <_free_r>
 8008a14:	e7f1      	b.n	80089fa <_realloc_r+0x40>

08008a16 <__ascii_wctomb>:
 8008a16:	4603      	mov	r3, r0
 8008a18:	4608      	mov	r0, r1
 8008a1a:	b141      	cbz	r1, 8008a2e <__ascii_wctomb+0x18>
 8008a1c:	2aff      	cmp	r2, #255	@ 0xff
 8008a1e:	d904      	bls.n	8008a2a <__ascii_wctomb+0x14>
 8008a20:	228a      	movs	r2, #138	@ 0x8a
 8008a22:	601a      	str	r2, [r3, #0]
 8008a24:	f04f 30ff 	mov.w	r0, #4294967295
 8008a28:	4770      	bx	lr
 8008a2a:	700a      	strb	r2, [r1, #0]
 8008a2c:	2001      	movs	r0, #1
 8008a2e:	4770      	bx	lr

08008a30 <__sfputc_r>:
 8008a30:	6893      	ldr	r3, [r2, #8]
 8008a32:	3b01      	subs	r3, #1
 8008a34:	2b00      	cmp	r3, #0
 8008a36:	b410      	push	{r4}
 8008a38:	6093      	str	r3, [r2, #8]
 8008a3a:	da08      	bge.n	8008a4e <__sfputc_r+0x1e>
 8008a3c:	6994      	ldr	r4, [r2, #24]
 8008a3e:	42a3      	cmp	r3, r4
 8008a40:	db01      	blt.n	8008a46 <__sfputc_r+0x16>
 8008a42:	290a      	cmp	r1, #10
 8008a44:	d103      	bne.n	8008a4e <__sfputc_r+0x1e>
 8008a46:	f85d 4b04 	ldr.w	r4, [sp], #4
 8008a4a:	f000 b933 	b.w	8008cb4 <__swbuf_r>
 8008a4e:	6813      	ldr	r3, [r2, #0]
 8008a50:	1c58      	adds	r0, r3, #1
 8008a52:	6010      	str	r0, [r2, #0]
 8008a54:	7019      	strb	r1, [r3, #0]
 8008a56:	4608      	mov	r0, r1
 8008a58:	f85d 4b04 	ldr.w	r4, [sp], #4
 8008a5c:	4770      	bx	lr

08008a5e <__sfputs_r>:
 8008a5e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8008a60:	4606      	mov	r6, r0
 8008a62:	460f      	mov	r7, r1
 8008a64:	4614      	mov	r4, r2
 8008a66:	18d5      	adds	r5, r2, r3
 8008a68:	42ac      	cmp	r4, r5
 8008a6a:	d101      	bne.n	8008a70 <__sfputs_r+0x12>
 8008a6c:	2000      	movs	r0, #0
 8008a6e:	e007      	b.n	8008a80 <__sfputs_r+0x22>
 8008a70:	f814 1b01 	ldrb.w	r1, [r4], #1
 8008a74:	463a      	mov	r2, r7
 8008a76:	4630      	mov	r0, r6
 8008a78:	f7ff ffda 	bl	8008a30 <__sfputc_r>
 8008a7c:	1c43      	adds	r3, r0, #1
 8008a7e:	d1f3      	bne.n	8008a68 <__sfputs_r+0xa>
 8008a80:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08008a84 <_vfiprintf_r>:
 8008a84:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8008a88:	460d      	mov	r5, r1
 8008a8a:	b09d      	sub	sp, #116	@ 0x74
 8008a8c:	4614      	mov	r4, r2
 8008a8e:	4698      	mov	r8, r3
 8008a90:	4606      	mov	r6, r0
 8008a92:	b118      	cbz	r0, 8008a9c <_vfiprintf_r+0x18>
 8008a94:	6a03      	ldr	r3, [r0, #32]
 8008a96:	b90b      	cbnz	r3, 8008a9c <_vfiprintf_r+0x18>
 8008a98:	f7fe f8f2 	bl	8006c80 <__sinit>
 8008a9c:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8008a9e:	07d9      	lsls	r1, r3, #31
 8008aa0:	d405      	bmi.n	8008aae <_vfiprintf_r+0x2a>
 8008aa2:	89ab      	ldrh	r3, [r5, #12]
 8008aa4:	059a      	lsls	r2, r3, #22
 8008aa6:	d402      	bmi.n	8008aae <_vfiprintf_r+0x2a>
 8008aa8:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8008aaa:	f7fe fa16 	bl	8006eda <__retarget_lock_acquire_recursive>
 8008aae:	89ab      	ldrh	r3, [r5, #12]
 8008ab0:	071b      	lsls	r3, r3, #28
 8008ab2:	d501      	bpl.n	8008ab8 <_vfiprintf_r+0x34>
 8008ab4:	692b      	ldr	r3, [r5, #16]
 8008ab6:	b99b      	cbnz	r3, 8008ae0 <_vfiprintf_r+0x5c>
 8008ab8:	4629      	mov	r1, r5
 8008aba:	4630      	mov	r0, r6
 8008abc:	f000 f938 	bl	8008d30 <__swsetup_r>
 8008ac0:	b170      	cbz	r0, 8008ae0 <_vfiprintf_r+0x5c>
 8008ac2:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8008ac4:	07dc      	lsls	r4, r3, #31
 8008ac6:	d504      	bpl.n	8008ad2 <_vfiprintf_r+0x4e>
 8008ac8:	f04f 30ff 	mov.w	r0, #4294967295
 8008acc:	b01d      	add	sp, #116	@ 0x74
 8008ace:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8008ad2:	89ab      	ldrh	r3, [r5, #12]
 8008ad4:	0598      	lsls	r0, r3, #22
 8008ad6:	d4f7      	bmi.n	8008ac8 <_vfiprintf_r+0x44>
 8008ad8:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8008ada:	f7fe f9ff 	bl	8006edc <__retarget_lock_release_recursive>
 8008ade:	e7f3      	b.n	8008ac8 <_vfiprintf_r+0x44>
 8008ae0:	2300      	movs	r3, #0
 8008ae2:	9309      	str	r3, [sp, #36]	@ 0x24
 8008ae4:	2320      	movs	r3, #32
 8008ae6:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 8008aea:	f8cd 800c 	str.w	r8, [sp, #12]
 8008aee:	2330      	movs	r3, #48	@ 0x30
 8008af0:	f8df 81ac 	ldr.w	r8, [pc, #428]	@ 8008ca0 <_vfiprintf_r+0x21c>
 8008af4:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 8008af8:	f04f 0901 	mov.w	r9, #1
 8008afc:	4623      	mov	r3, r4
 8008afe:	469a      	mov	sl, r3
 8008b00:	f813 2b01 	ldrb.w	r2, [r3], #1
 8008b04:	b10a      	cbz	r2, 8008b0a <_vfiprintf_r+0x86>
 8008b06:	2a25      	cmp	r2, #37	@ 0x25
 8008b08:	d1f9      	bne.n	8008afe <_vfiprintf_r+0x7a>
 8008b0a:	ebba 0b04 	subs.w	fp, sl, r4
 8008b0e:	d00b      	beq.n	8008b28 <_vfiprintf_r+0xa4>
 8008b10:	465b      	mov	r3, fp
 8008b12:	4622      	mov	r2, r4
 8008b14:	4629      	mov	r1, r5
 8008b16:	4630      	mov	r0, r6
 8008b18:	f7ff ffa1 	bl	8008a5e <__sfputs_r>
 8008b1c:	3001      	adds	r0, #1
 8008b1e:	f000 80a7 	beq.w	8008c70 <_vfiprintf_r+0x1ec>
 8008b22:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8008b24:	445a      	add	r2, fp
 8008b26:	9209      	str	r2, [sp, #36]	@ 0x24
 8008b28:	f89a 3000 	ldrb.w	r3, [sl]
 8008b2c:	2b00      	cmp	r3, #0
 8008b2e:	f000 809f 	beq.w	8008c70 <_vfiprintf_r+0x1ec>
 8008b32:	2300      	movs	r3, #0
 8008b34:	f04f 32ff 	mov.w	r2, #4294967295
 8008b38:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8008b3c:	f10a 0a01 	add.w	sl, sl, #1
 8008b40:	9304      	str	r3, [sp, #16]
 8008b42:	9307      	str	r3, [sp, #28]
 8008b44:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 8008b48:	931a      	str	r3, [sp, #104]	@ 0x68
 8008b4a:	4654      	mov	r4, sl
 8008b4c:	2205      	movs	r2, #5
 8008b4e:	f814 1b01 	ldrb.w	r1, [r4], #1
 8008b52:	4853      	ldr	r0, [pc, #332]	@ (8008ca0 <_vfiprintf_r+0x21c>)
 8008b54:	f7f7 fb5c 	bl	8000210 <memchr>
 8008b58:	9a04      	ldr	r2, [sp, #16]
 8008b5a:	b9d8      	cbnz	r0, 8008b94 <_vfiprintf_r+0x110>
 8008b5c:	06d1      	lsls	r1, r2, #27
 8008b5e:	bf44      	itt	mi
 8008b60:	2320      	movmi	r3, #32
 8008b62:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8008b66:	0713      	lsls	r3, r2, #28
 8008b68:	bf44      	itt	mi
 8008b6a:	232b      	movmi	r3, #43	@ 0x2b
 8008b6c:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8008b70:	f89a 3000 	ldrb.w	r3, [sl]
 8008b74:	2b2a      	cmp	r3, #42	@ 0x2a
 8008b76:	d015      	beq.n	8008ba4 <_vfiprintf_r+0x120>
 8008b78:	9a07      	ldr	r2, [sp, #28]
 8008b7a:	4654      	mov	r4, sl
 8008b7c:	2000      	movs	r0, #0
 8008b7e:	f04f 0c0a 	mov.w	ip, #10
 8008b82:	4621      	mov	r1, r4
 8008b84:	f811 3b01 	ldrb.w	r3, [r1], #1
 8008b88:	3b30      	subs	r3, #48	@ 0x30
 8008b8a:	2b09      	cmp	r3, #9
 8008b8c:	d94b      	bls.n	8008c26 <_vfiprintf_r+0x1a2>
 8008b8e:	b1b0      	cbz	r0, 8008bbe <_vfiprintf_r+0x13a>
 8008b90:	9207      	str	r2, [sp, #28]
 8008b92:	e014      	b.n	8008bbe <_vfiprintf_r+0x13a>
 8008b94:	eba0 0308 	sub.w	r3, r0, r8
 8008b98:	fa09 f303 	lsl.w	r3, r9, r3
 8008b9c:	4313      	orrs	r3, r2
 8008b9e:	9304      	str	r3, [sp, #16]
 8008ba0:	46a2      	mov	sl, r4
 8008ba2:	e7d2      	b.n	8008b4a <_vfiprintf_r+0xc6>
 8008ba4:	9b03      	ldr	r3, [sp, #12]
 8008ba6:	1d19      	adds	r1, r3, #4
 8008ba8:	681b      	ldr	r3, [r3, #0]
 8008baa:	9103      	str	r1, [sp, #12]
 8008bac:	2b00      	cmp	r3, #0
 8008bae:	bfbb      	ittet	lt
 8008bb0:	425b      	neglt	r3, r3
 8008bb2:	f042 0202 	orrlt.w	r2, r2, #2
 8008bb6:	9307      	strge	r3, [sp, #28]
 8008bb8:	9307      	strlt	r3, [sp, #28]
 8008bba:	bfb8      	it	lt
 8008bbc:	9204      	strlt	r2, [sp, #16]
 8008bbe:	7823      	ldrb	r3, [r4, #0]
 8008bc0:	2b2e      	cmp	r3, #46	@ 0x2e
 8008bc2:	d10a      	bne.n	8008bda <_vfiprintf_r+0x156>
 8008bc4:	7863      	ldrb	r3, [r4, #1]
 8008bc6:	2b2a      	cmp	r3, #42	@ 0x2a
 8008bc8:	d132      	bne.n	8008c30 <_vfiprintf_r+0x1ac>
 8008bca:	9b03      	ldr	r3, [sp, #12]
 8008bcc:	1d1a      	adds	r2, r3, #4
 8008bce:	681b      	ldr	r3, [r3, #0]
 8008bd0:	9203      	str	r2, [sp, #12]
 8008bd2:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 8008bd6:	3402      	adds	r4, #2
 8008bd8:	9305      	str	r3, [sp, #20]
 8008bda:	f8df a0d4 	ldr.w	sl, [pc, #212]	@ 8008cb0 <_vfiprintf_r+0x22c>
 8008bde:	7821      	ldrb	r1, [r4, #0]
 8008be0:	2203      	movs	r2, #3
 8008be2:	4650      	mov	r0, sl
 8008be4:	f7f7 fb14 	bl	8000210 <memchr>
 8008be8:	b138      	cbz	r0, 8008bfa <_vfiprintf_r+0x176>
 8008bea:	9b04      	ldr	r3, [sp, #16]
 8008bec:	eba0 000a 	sub.w	r0, r0, sl
 8008bf0:	2240      	movs	r2, #64	@ 0x40
 8008bf2:	4082      	lsls	r2, r0
 8008bf4:	4313      	orrs	r3, r2
 8008bf6:	3401      	adds	r4, #1
 8008bf8:	9304      	str	r3, [sp, #16]
 8008bfa:	f814 1b01 	ldrb.w	r1, [r4], #1
 8008bfe:	4829      	ldr	r0, [pc, #164]	@ (8008ca4 <_vfiprintf_r+0x220>)
 8008c00:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 8008c04:	2206      	movs	r2, #6
 8008c06:	f7f7 fb03 	bl	8000210 <memchr>
 8008c0a:	2800      	cmp	r0, #0
 8008c0c:	d03f      	beq.n	8008c8e <_vfiprintf_r+0x20a>
 8008c0e:	4b26      	ldr	r3, [pc, #152]	@ (8008ca8 <_vfiprintf_r+0x224>)
 8008c10:	bb1b      	cbnz	r3, 8008c5a <_vfiprintf_r+0x1d6>
 8008c12:	9b03      	ldr	r3, [sp, #12]
 8008c14:	3307      	adds	r3, #7
 8008c16:	f023 0307 	bic.w	r3, r3, #7
 8008c1a:	3308      	adds	r3, #8
 8008c1c:	9303      	str	r3, [sp, #12]
 8008c1e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8008c20:	443b      	add	r3, r7
 8008c22:	9309      	str	r3, [sp, #36]	@ 0x24
 8008c24:	e76a      	b.n	8008afc <_vfiprintf_r+0x78>
 8008c26:	fb0c 3202 	mla	r2, ip, r2, r3
 8008c2a:	460c      	mov	r4, r1
 8008c2c:	2001      	movs	r0, #1
 8008c2e:	e7a8      	b.n	8008b82 <_vfiprintf_r+0xfe>
 8008c30:	2300      	movs	r3, #0
 8008c32:	3401      	adds	r4, #1
 8008c34:	9305      	str	r3, [sp, #20]
 8008c36:	4619      	mov	r1, r3
 8008c38:	f04f 0c0a 	mov.w	ip, #10
 8008c3c:	4620      	mov	r0, r4
 8008c3e:	f810 2b01 	ldrb.w	r2, [r0], #1
 8008c42:	3a30      	subs	r2, #48	@ 0x30
 8008c44:	2a09      	cmp	r2, #9
 8008c46:	d903      	bls.n	8008c50 <_vfiprintf_r+0x1cc>
 8008c48:	2b00      	cmp	r3, #0
 8008c4a:	d0c6      	beq.n	8008bda <_vfiprintf_r+0x156>
 8008c4c:	9105      	str	r1, [sp, #20]
 8008c4e:	e7c4      	b.n	8008bda <_vfiprintf_r+0x156>
 8008c50:	fb0c 2101 	mla	r1, ip, r1, r2
 8008c54:	4604      	mov	r4, r0
 8008c56:	2301      	movs	r3, #1
 8008c58:	e7f0      	b.n	8008c3c <_vfiprintf_r+0x1b8>
 8008c5a:	ab03      	add	r3, sp, #12
 8008c5c:	9300      	str	r3, [sp, #0]
 8008c5e:	462a      	mov	r2, r5
 8008c60:	4b12      	ldr	r3, [pc, #72]	@ (8008cac <_vfiprintf_r+0x228>)
 8008c62:	a904      	add	r1, sp, #16
 8008c64:	4630      	mov	r0, r6
 8008c66:	f7fd fbc9 	bl	80063fc <_printf_float>
 8008c6a:	4607      	mov	r7, r0
 8008c6c:	1c78      	adds	r0, r7, #1
 8008c6e:	d1d6      	bne.n	8008c1e <_vfiprintf_r+0x19a>
 8008c70:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8008c72:	07d9      	lsls	r1, r3, #31
 8008c74:	d405      	bmi.n	8008c82 <_vfiprintf_r+0x1fe>
 8008c76:	89ab      	ldrh	r3, [r5, #12]
 8008c78:	059a      	lsls	r2, r3, #22
 8008c7a:	d402      	bmi.n	8008c82 <_vfiprintf_r+0x1fe>
 8008c7c:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8008c7e:	f7fe f92d 	bl	8006edc <__retarget_lock_release_recursive>
 8008c82:	89ab      	ldrh	r3, [r5, #12]
 8008c84:	065b      	lsls	r3, r3, #25
 8008c86:	f53f af1f 	bmi.w	8008ac8 <_vfiprintf_r+0x44>
 8008c8a:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8008c8c:	e71e      	b.n	8008acc <_vfiprintf_r+0x48>
 8008c8e:	ab03      	add	r3, sp, #12
 8008c90:	9300      	str	r3, [sp, #0]
 8008c92:	462a      	mov	r2, r5
 8008c94:	4b05      	ldr	r3, [pc, #20]	@ (8008cac <_vfiprintf_r+0x228>)
 8008c96:	a904      	add	r1, sp, #16
 8008c98:	4630      	mov	r0, r6
 8008c9a:	f7fd fe47 	bl	800692c <_printf_i>
 8008c9e:	e7e4      	b.n	8008c6a <_vfiprintf_r+0x1e6>
 8008ca0:	080093da 	.word	0x080093da
 8008ca4:	080093e4 	.word	0x080093e4
 8008ca8:	080063fd 	.word	0x080063fd
 8008cac:	08008a5f 	.word	0x08008a5f
 8008cb0:	080093e0 	.word	0x080093e0

08008cb4 <__swbuf_r>:
 8008cb4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8008cb6:	460e      	mov	r6, r1
 8008cb8:	4614      	mov	r4, r2
 8008cba:	4605      	mov	r5, r0
 8008cbc:	b118      	cbz	r0, 8008cc6 <__swbuf_r+0x12>
 8008cbe:	6a03      	ldr	r3, [r0, #32]
 8008cc0:	b90b      	cbnz	r3, 8008cc6 <__swbuf_r+0x12>
 8008cc2:	f7fd ffdd 	bl	8006c80 <__sinit>
 8008cc6:	69a3      	ldr	r3, [r4, #24]
 8008cc8:	60a3      	str	r3, [r4, #8]
 8008cca:	89a3      	ldrh	r3, [r4, #12]
 8008ccc:	071a      	lsls	r2, r3, #28
 8008cce:	d501      	bpl.n	8008cd4 <__swbuf_r+0x20>
 8008cd0:	6923      	ldr	r3, [r4, #16]
 8008cd2:	b943      	cbnz	r3, 8008ce6 <__swbuf_r+0x32>
 8008cd4:	4621      	mov	r1, r4
 8008cd6:	4628      	mov	r0, r5
 8008cd8:	f000 f82a 	bl	8008d30 <__swsetup_r>
 8008cdc:	b118      	cbz	r0, 8008ce6 <__swbuf_r+0x32>
 8008cde:	f04f 37ff 	mov.w	r7, #4294967295
 8008ce2:	4638      	mov	r0, r7
 8008ce4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8008ce6:	6823      	ldr	r3, [r4, #0]
 8008ce8:	6922      	ldr	r2, [r4, #16]
 8008cea:	1a98      	subs	r0, r3, r2
 8008cec:	6963      	ldr	r3, [r4, #20]
 8008cee:	b2f6      	uxtb	r6, r6
 8008cf0:	4283      	cmp	r3, r0
 8008cf2:	4637      	mov	r7, r6
 8008cf4:	dc05      	bgt.n	8008d02 <__swbuf_r+0x4e>
 8008cf6:	4621      	mov	r1, r4
 8008cf8:	4628      	mov	r0, r5
 8008cfa:	f7ff fdbf 	bl	800887c <_fflush_r>
 8008cfe:	2800      	cmp	r0, #0
 8008d00:	d1ed      	bne.n	8008cde <__swbuf_r+0x2a>
 8008d02:	68a3      	ldr	r3, [r4, #8]
 8008d04:	3b01      	subs	r3, #1
 8008d06:	60a3      	str	r3, [r4, #8]
 8008d08:	6823      	ldr	r3, [r4, #0]
 8008d0a:	1c5a      	adds	r2, r3, #1
 8008d0c:	6022      	str	r2, [r4, #0]
 8008d0e:	701e      	strb	r6, [r3, #0]
 8008d10:	6962      	ldr	r2, [r4, #20]
 8008d12:	1c43      	adds	r3, r0, #1
 8008d14:	429a      	cmp	r2, r3
 8008d16:	d004      	beq.n	8008d22 <__swbuf_r+0x6e>
 8008d18:	89a3      	ldrh	r3, [r4, #12]
 8008d1a:	07db      	lsls	r3, r3, #31
 8008d1c:	d5e1      	bpl.n	8008ce2 <__swbuf_r+0x2e>
 8008d1e:	2e0a      	cmp	r6, #10
 8008d20:	d1df      	bne.n	8008ce2 <__swbuf_r+0x2e>
 8008d22:	4621      	mov	r1, r4
 8008d24:	4628      	mov	r0, r5
 8008d26:	f7ff fda9 	bl	800887c <_fflush_r>
 8008d2a:	2800      	cmp	r0, #0
 8008d2c:	d0d9      	beq.n	8008ce2 <__swbuf_r+0x2e>
 8008d2e:	e7d6      	b.n	8008cde <__swbuf_r+0x2a>

08008d30 <__swsetup_r>:
 8008d30:	b538      	push	{r3, r4, r5, lr}
 8008d32:	4b29      	ldr	r3, [pc, #164]	@ (8008dd8 <__swsetup_r+0xa8>)
 8008d34:	4605      	mov	r5, r0
 8008d36:	6818      	ldr	r0, [r3, #0]
 8008d38:	460c      	mov	r4, r1
 8008d3a:	b118      	cbz	r0, 8008d44 <__swsetup_r+0x14>
 8008d3c:	6a03      	ldr	r3, [r0, #32]
 8008d3e:	b90b      	cbnz	r3, 8008d44 <__swsetup_r+0x14>
 8008d40:	f7fd ff9e 	bl	8006c80 <__sinit>
 8008d44:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8008d48:	0719      	lsls	r1, r3, #28
 8008d4a:	d422      	bmi.n	8008d92 <__swsetup_r+0x62>
 8008d4c:	06da      	lsls	r2, r3, #27
 8008d4e:	d407      	bmi.n	8008d60 <__swsetup_r+0x30>
 8008d50:	2209      	movs	r2, #9
 8008d52:	602a      	str	r2, [r5, #0]
 8008d54:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8008d58:	81a3      	strh	r3, [r4, #12]
 8008d5a:	f04f 30ff 	mov.w	r0, #4294967295
 8008d5e:	e033      	b.n	8008dc8 <__swsetup_r+0x98>
 8008d60:	0758      	lsls	r0, r3, #29
 8008d62:	d512      	bpl.n	8008d8a <__swsetup_r+0x5a>
 8008d64:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8008d66:	b141      	cbz	r1, 8008d7a <__swsetup_r+0x4a>
 8008d68:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 8008d6c:	4299      	cmp	r1, r3
 8008d6e:	d002      	beq.n	8008d76 <__swsetup_r+0x46>
 8008d70:	4628      	mov	r0, r5
 8008d72:	f7fe ff2d 	bl	8007bd0 <_free_r>
 8008d76:	2300      	movs	r3, #0
 8008d78:	6363      	str	r3, [r4, #52]	@ 0x34
 8008d7a:	89a3      	ldrh	r3, [r4, #12]
 8008d7c:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
 8008d80:	81a3      	strh	r3, [r4, #12]
 8008d82:	2300      	movs	r3, #0
 8008d84:	6063      	str	r3, [r4, #4]
 8008d86:	6923      	ldr	r3, [r4, #16]
 8008d88:	6023      	str	r3, [r4, #0]
 8008d8a:	89a3      	ldrh	r3, [r4, #12]
 8008d8c:	f043 0308 	orr.w	r3, r3, #8
 8008d90:	81a3      	strh	r3, [r4, #12]
 8008d92:	6923      	ldr	r3, [r4, #16]
 8008d94:	b94b      	cbnz	r3, 8008daa <__swsetup_r+0x7a>
 8008d96:	89a3      	ldrh	r3, [r4, #12]
 8008d98:	f403 7320 	and.w	r3, r3, #640	@ 0x280
 8008d9c:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 8008da0:	d003      	beq.n	8008daa <__swsetup_r+0x7a>
 8008da2:	4621      	mov	r1, r4
 8008da4:	4628      	mov	r0, r5
 8008da6:	f000 f88b 	bl	8008ec0 <__smakebuf_r>
 8008daa:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8008dae:	f013 0201 	ands.w	r2, r3, #1
 8008db2:	d00a      	beq.n	8008dca <__swsetup_r+0x9a>
 8008db4:	2200      	movs	r2, #0
 8008db6:	60a2      	str	r2, [r4, #8]
 8008db8:	6962      	ldr	r2, [r4, #20]
 8008dba:	4252      	negs	r2, r2
 8008dbc:	61a2      	str	r2, [r4, #24]
 8008dbe:	6922      	ldr	r2, [r4, #16]
 8008dc0:	b942      	cbnz	r2, 8008dd4 <__swsetup_r+0xa4>
 8008dc2:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
 8008dc6:	d1c5      	bne.n	8008d54 <__swsetup_r+0x24>
 8008dc8:	bd38      	pop	{r3, r4, r5, pc}
 8008dca:	0799      	lsls	r1, r3, #30
 8008dcc:	bf58      	it	pl
 8008dce:	6962      	ldrpl	r2, [r4, #20]
 8008dd0:	60a2      	str	r2, [r4, #8]
 8008dd2:	e7f4      	b.n	8008dbe <__swsetup_r+0x8e>
 8008dd4:	2000      	movs	r0, #0
 8008dd6:	e7f7      	b.n	8008dc8 <__swsetup_r+0x98>
 8008dd8:	20000048 	.word	0x20000048

08008ddc <_raise_r>:
 8008ddc:	291f      	cmp	r1, #31
 8008dde:	b538      	push	{r3, r4, r5, lr}
 8008de0:	4605      	mov	r5, r0
 8008de2:	460c      	mov	r4, r1
 8008de4:	d904      	bls.n	8008df0 <_raise_r+0x14>
 8008de6:	2316      	movs	r3, #22
 8008de8:	6003      	str	r3, [r0, #0]
 8008dea:	f04f 30ff 	mov.w	r0, #4294967295
 8008dee:	bd38      	pop	{r3, r4, r5, pc}
 8008df0:	6bc2      	ldr	r2, [r0, #60]	@ 0x3c
 8008df2:	b112      	cbz	r2, 8008dfa <_raise_r+0x1e>
 8008df4:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 8008df8:	b94b      	cbnz	r3, 8008e0e <_raise_r+0x32>
 8008dfa:	4628      	mov	r0, r5
 8008dfc:	f000 f830 	bl	8008e60 <_getpid_r>
 8008e00:	4622      	mov	r2, r4
 8008e02:	4601      	mov	r1, r0
 8008e04:	4628      	mov	r0, r5
 8008e06:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8008e0a:	f000 b817 	b.w	8008e3c <_kill_r>
 8008e0e:	2b01      	cmp	r3, #1
 8008e10:	d00a      	beq.n	8008e28 <_raise_r+0x4c>
 8008e12:	1c59      	adds	r1, r3, #1
 8008e14:	d103      	bne.n	8008e1e <_raise_r+0x42>
 8008e16:	2316      	movs	r3, #22
 8008e18:	6003      	str	r3, [r0, #0]
 8008e1a:	2001      	movs	r0, #1
 8008e1c:	e7e7      	b.n	8008dee <_raise_r+0x12>
 8008e1e:	2100      	movs	r1, #0
 8008e20:	f842 1024 	str.w	r1, [r2, r4, lsl #2]
 8008e24:	4620      	mov	r0, r4
 8008e26:	4798      	blx	r3
 8008e28:	2000      	movs	r0, #0
 8008e2a:	e7e0      	b.n	8008dee <_raise_r+0x12>

08008e2c <raise>:
 8008e2c:	4b02      	ldr	r3, [pc, #8]	@ (8008e38 <raise+0xc>)
 8008e2e:	4601      	mov	r1, r0
 8008e30:	6818      	ldr	r0, [r3, #0]
 8008e32:	f7ff bfd3 	b.w	8008ddc <_raise_r>
 8008e36:	bf00      	nop
 8008e38:	20000048 	.word	0x20000048

08008e3c <_kill_r>:
 8008e3c:	b538      	push	{r3, r4, r5, lr}
 8008e3e:	4d07      	ldr	r5, [pc, #28]	@ (8008e5c <_kill_r+0x20>)
 8008e40:	2300      	movs	r3, #0
 8008e42:	4604      	mov	r4, r0
 8008e44:	4608      	mov	r0, r1
 8008e46:	4611      	mov	r1, r2
 8008e48:	602b      	str	r3, [r5, #0]
 8008e4a:	f7f9 f911 	bl	8002070 <_kill>
 8008e4e:	1c43      	adds	r3, r0, #1
 8008e50:	d102      	bne.n	8008e58 <_kill_r+0x1c>
 8008e52:	682b      	ldr	r3, [r5, #0]
 8008e54:	b103      	cbz	r3, 8008e58 <_kill_r+0x1c>
 8008e56:	6023      	str	r3, [r4, #0]
 8008e58:	bd38      	pop	{r3, r4, r5, pc}
 8008e5a:	bf00      	nop
 8008e5c:	200006b8 	.word	0x200006b8

08008e60 <_getpid_r>:
 8008e60:	f7f9 b8fe 	b.w	8002060 <_getpid>

08008e64 <_malloc_usable_size_r>:
 8008e64:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8008e68:	1f18      	subs	r0, r3, #4
 8008e6a:	2b00      	cmp	r3, #0
 8008e6c:	bfbc      	itt	lt
 8008e6e:	580b      	ldrlt	r3, [r1, r0]
 8008e70:	18c0      	addlt	r0, r0, r3
 8008e72:	4770      	bx	lr

08008e74 <__swhatbuf_r>:
 8008e74:	b570      	push	{r4, r5, r6, lr}
 8008e76:	460c      	mov	r4, r1
 8008e78:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8008e7c:	2900      	cmp	r1, #0
 8008e7e:	b096      	sub	sp, #88	@ 0x58
 8008e80:	4615      	mov	r5, r2
 8008e82:	461e      	mov	r6, r3
 8008e84:	da0d      	bge.n	8008ea2 <__swhatbuf_r+0x2e>
 8008e86:	89a3      	ldrh	r3, [r4, #12]
 8008e88:	f013 0f80 	tst.w	r3, #128	@ 0x80
 8008e8c:	f04f 0100 	mov.w	r1, #0
 8008e90:	bf14      	ite	ne
 8008e92:	2340      	movne	r3, #64	@ 0x40
 8008e94:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
 8008e98:	2000      	movs	r0, #0
 8008e9a:	6031      	str	r1, [r6, #0]
 8008e9c:	602b      	str	r3, [r5, #0]
 8008e9e:	b016      	add	sp, #88	@ 0x58
 8008ea0:	bd70      	pop	{r4, r5, r6, pc}
 8008ea2:	466a      	mov	r2, sp
 8008ea4:	f000 f848 	bl	8008f38 <_fstat_r>
 8008ea8:	2800      	cmp	r0, #0
 8008eaa:	dbec      	blt.n	8008e86 <__swhatbuf_r+0x12>
 8008eac:	9901      	ldr	r1, [sp, #4]
 8008eae:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
 8008eb2:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
 8008eb6:	4259      	negs	r1, r3
 8008eb8:	4159      	adcs	r1, r3
 8008eba:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 8008ebe:	e7eb      	b.n	8008e98 <__swhatbuf_r+0x24>

08008ec0 <__smakebuf_r>:
 8008ec0:	898b      	ldrh	r3, [r1, #12]
 8008ec2:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8008ec4:	079d      	lsls	r5, r3, #30
 8008ec6:	4606      	mov	r6, r0
 8008ec8:	460c      	mov	r4, r1
 8008eca:	d507      	bpl.n	8008edc <__smakebuf_r+0x1c>
 8008ecc:	f104 0347 	add.w	r3, r4, #71	@ 0x47
 8008ed0:	6023      	str	r3, [r4, #0]
 8008ed2:	6123      	str	r3, [r4, #16]
 8008ed4:	2301      	movs	r3, #1
 8008ed6:	6163      	str	r3, [r4, #20]
 8008ed8:	b003      	add	sp, #12
 8008eda:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8008edc:	ab01      	add	r3, sp, #4
 8008ede:	466a      	mov	r2, sp
 8008ee0:	f7ff ffc8 	bl	8008e74 <__swhatbuf_r>
 8008ee4:	9f00      	ldr	r7, [sp, #0]
 8008ee6:	4605      	mov	r5, r0
 8008ee8:	4639      	mov	r1, r7
 8008eea:	4630      	mov	r0, r6
 8008eec:	f7fe fee4 	bl	8007cb8 <_malloc_r>
 8008ef0:	b948      	cbnz	r0, 8008f06 <__smakebuf_r+0x46>
 8008ef2:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8008ef6:	059a      	lsls	r2, r3, #22
 8008ef8:	d4ee      	bmi.n	8008ed8 <__smakebuf_r+0x18>
 8008efa:	f023 0303 	bic.w	r3, r3, #3
 8008efe:	f043 0302 	orr.w	r3, r3, #2
 8008f02:	81a3      	strh	r3, [r4, #12]
 8008f04:	e7e2      	b.n	8008ecc <__smakebuf_r+0xc>
 8008f06:	89a3      	ldrh	r3, [r4, #12]
 8008f08:	6020      	str	r0, [r4, #0]
 8008f0a:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8008f0e:	81a3      	strh	r3, [r4, #12]
 8008f10:	9b01      	ldr	r3, [sp, #4]
 8008f12:	e9c4 0704 	strd	r0, r7, [r4, #16]
 8008f16:	b15b      	cbz	r3, 8008f30 <__smakebuf_r+0x70>
 8008f18:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8008f1c:	4630      	mov	r0, r6
 8008f1e:	f000 f81d 	bl	8008f5c <_isatty_r>
 8008f22:	b128      	cbz	r0, 8008f30 <__smakebuf_r+0x70>
 8008f24:	89a3      	ldrh	r3, [r4, #12]
 8008f26:	f023 0303 	bic.w	r3, r3, #3
 8008f2a:	f043 0301 	orr.w	r3, r3, #1
 8008f2e:	81a3      	strh	r3, [r4, #12]
 8008f30:	89a3      	ldrh	r3, [r4, #12]
 8008f32:	431d      	orrs	r5, r3
 8008f34:	81a5      	strh	r5, [r4, #12]
 8008f36:	e7cf      	b.n	8008ed8 <__smakebuf_r+0x18>

08008f38 <_fstat_r>:
 8008f38:	b538      	push	{r3, r4, r5, lr}
 8008f3a:	4d07      	ldr	r5, [pc, #28]	@ (8008f58 <_fstat_r+0x20>)
 8008f3c:	2300      	movs	r3, #0
 8008f3e:	4604      	mov	r4, r0
 8008f40:	4608      	mov	r0, r1
 8008f42:	4611      	mov	r1, r2
 8008f44:	602b      	str	r3, [r5, #0]
 8008f46:	f7f9 f8f3 	bl	8002130 <_fstat>
 8008f4a:	1c43      	adds	r3, r0, #1
 8008f4c:	d102      	bne.n	8008f54 <_fstat_r+0x1c>
 8008f4e:	682b      	ldr	r3, [r5, #0]
 8008f50:	b103      	cbz	r3, 8008f54 <_fstat_r+0x1c>
 8008f52:	6023      	str	r3, [r4, #0]
 8008f54:	bd38      	pop	{r3, r4, r5, pc}
 8008f56:	bf00      	nop
 8008f58:	200006b8 	.word	0x200006b8

08008f5c <_isatty_r>:
 8008f5c:	b538      	push	{r3, r4, r5, lr}
 8008f5e:	4d06      	ldr	r5, [pc, #24]	@ (8008f78 <_isatty_r+0x1c>)
 8008f60:	2300      	movs	r3, #0
 8008f62:	4604      	mov	r4, r0
 8008f64:	4608      	mov	r0, r1
 8008f66:	602b      	str	r3, [r5, #0]
 8008f68:	f7f9 f8f2 	bl	8002150 <_isatty>
 8008f6c:	1c43      	adds	r3, r0, #1
 8008f6e:	d102      	bne.n	8008f76 <_isatty_r+0x1a>
 8008f70:	682b      	ldr	r3, [r5, #0]
 8008f72:	b103      	cbz	r3, 8008f76 <_isatty_r+0x1a>
 8008f74:	6023      	str	r3, [r4, #0]
 8008f76:	bd38      	pop	{r3, r4, r5, pc}
 8008f78:	200006b8 	.word	0x200006b8

08008f7c <_init>:
 8008f7c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8008f7e:	bf00      	nop
 8008f80:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8008f82:	bc08      	pop	{r3}
 8008f84:	469e      	mov	lr, r3
 8008f86:	4770      	bx	lr

08008f88 <_fini>:
 8008f88:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8008f8a:	bf00      	nop
 8008f8c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8008f8e:	bc08      	pop	{r3}
 8008f90:	469e      	mov	lr, r3
 8008f92:	4770      	bx	lr
